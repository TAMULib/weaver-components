var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionAndProps.html",[0,0.007,1,3.458]],["body/interfaces/ActionAndProps.html",[0,0.004,1,3.076,2,0.39,3,0.117,4,0.117,5,0.107,6,0.087,7,1.303,8,1.751,9,2.249,10,0.161,11,0.366,12,2.699,13,5.437,14,0.332,15,0.016,16,4.398,17,0.564,18,3.076,19,1.603,20,2.578,21,2.249,22,2.764,23,4.786,24,0.519,25,3.076,26,2.345,27,2.249,28,1.603,29,3.076,30,1.603,31,2.249,32,2.249,33,2.19,34,1.485,35,1.751,36,1.164,37,3.601,38,4.017,39,2.249,40,2.249,41,2.249,42,2.249,43,1.603,44,1.603,45,0.185,46,0.923,47,1.303,48,1.485,49,1.164,50,1.949,51,2.249,52,2.549,53,3.811,54,1.603,55,1.751,56,3.811,57,2.249,58,2.249,59,2.249,60,2.249,61,2.249,62,2.249,63,2.249,64,1.603,65,1.949,66,2.249,67,7.449,68,2.249,69,1.949,70,3.55,71,4.602,72,1.949,73,1.017,74,2.249,75,1.23,76,6.418,77,4.398,78,5.483,79,2.249,80,6.74,81,6.74,82,3.424,83,2.673,84,4.5,85,2.249,86,4.711,87,2.249,88,4.712,89,2.249,90,2.249,91,2.249,92,4.328,93,1.22,94,2.249,95,3.076,96,3.076,97,2.249,98,2.249,99,2.993,100,2.249,101,2.249,102,2.249,103,3.55,104,6.454,105,5.593,106,2.249,107,4.398,108,5.007,109,3.55,110,2.249,111,2.249,112,2.249,113,2.249,114,3.55,115,2.249,116,2.345,117,2.764,118,2.249,119,3.811,120,1.941,121,4.994,122,2.249,123,3.55,124,2.249,125,1.79,126,2.249,127,2.249,128,3.55,129,2.249,130,2.249,131,2.249,132,4.398,133,3.076,134,2.249,135,0.84,136,2.249,137,1.462,138,2.249,139,3.55,140,2.249,141,2.249,142,2.249,143,2.249,144,2.249,145,2.249,146,1.106,147,1.949,148,2.249,149,2.249,150,2.249,151,2.249,152,2.249,153,2.249,154,1.751,155,2.249,156,2.249,157,2.249,158,2.249,159,2.405,160,1.949,161,1.584,162,2.249,163,2.249,164,2.249,165,2.249,166,2.249,167,2.249,168,2.249,169,3.55,170,2.249,171,2.249,172,2.249,173,2.249,174,1.303,175,2.249,176,1.603,177,2.249,178,2.249,179,1.052,180,1.003,181,1.603,182,1.003,183,1.751,184,0.958,185,2.249,186,2.249,187,2.249,188,2.249,189,1.603,190,2.249,191,2.249,192,1.949,193,2.249,194,2.249,195,1.462,196,3.55,197,2.249,198,2.249,199,1.949,200,2.405,201,1.949,202,2.249,203,2.249,204,3.55,205,2.249,206,2.249,207,2.249,208,1.949,209,2.249,210,0.007,211,0.007]],["title/injectables/ActionRegistryService.html",[26,2.637,212,0.886]],["body/injectables/ActionRegistryService.html",[3,0.25,4,0.25,5,0.228,6,0.283,10,0.342,11,0.63,12,3.16,14,0.447,15,0.016,17,0.596,24,1.107,26,4.037,45,0.25,46,1.246,73,1.041,125,2.41,195,1.403,200,4.209,210,0.012,211,0.012,212,1.356,213,1.87,214,7.315,215,4.154,216,2.139,217,3.77,218,6.11,219,2.22,220,2.017,221,6.11,222,6.11,223,2.312,224,1.993,225,5.295,226,6.11,227,4.154,228,1.788,229,1.303,230,1.061,231,3.542,232,2.101,233,6.11,234,4.794,235,2.622,236,2.483,237,4.794,238,6.11]],["title/injectables/AnimationService.html",[212,0.886,239,2.846]],["body/injectables/AnimationService.html",[3,0.129,4,0.129,5,0.118,6,0.267,10,0.177,11,0.394,14,0.451,15,0.016,17,0.555,20,2.424,24,0.572,33,3.247,34,1.635,45,0.129,46,0.643,73,1.052,83,2.346,93,1.809,125,2.515,135,1.966,137,2.081,161,2.684,182,1.707,195,1.665,208,2.145,210,0.007,211,0.007,212,0.849,213,0.965,216,1.104,217,3.711,219,2.07,220,1.263,223,0.851,224,1.911,228,1.835,229,1.337,230,1.088,232,2.156,235,1.354,236,1.282,239,2.728,240,2.475,241,3.826,242,2.979,243,3.826,244,6.395,245,3.826,246,5.689,247,4.677,248,3.826,249,3.315,250,3.826,251,5.262,252,3.826,253,3.826,254,3.826,255,2.475,256,5.689,257,3.826,258,3.826,259,3.826,260,6.913,261,2.475,262,3.826,263,4.288,264,5.262,265,5.262,266,3.826,267,6.014,268,2.878,269,5.262,270,2.475,271,3.826,272,3.826,273,4.097,274,3.315,275,3.826,276,4.279,277,6.477,278,3.973,279,2.475,280,3.826,281,5.262,282,2.475,283,3.826,284,1.315,285,3.826,286,3.826,287,2.728,288,3.826,289,4.053,290,2.475,291,3.315,292,6.477,293,3.826,294,3.826,295,6.014,296,2.475,297,3.315,298,4.677,299,3.826,300,2.475,301,3.826,302,3.315,303,4.93,304,1.43,305,2.684,306,2.219,307,2.475,308,5.262,309,3.826,310,2.475,311,2.145,312,2.475,313,3.826,314,2.475,315,2.475,316,2.475,317,1.927,318,2.475,319,2.475,320,1.354,321,3.826,322,1.927,323,1.927,324,2.475,325,2.475,326,1.79,327,2.475,328,2.475,329,2.475,330,2.475,331,2.475,332,2.475,333,2.475,334,2.475,335,3.826,336,2.475,337,3.826,338,2.475,339,2.475,340,2.475,341,4.677,342,2.475,343,2.475,344,2.475,345,2.475,346,2.475,347,2.475,348,2.475,349,2.475,350,2.475,351,3.826,352,2.475,353,2.475,354,2.475,355,2.475,356,2.475,357,2.145,358,2.475,359,2.475,360,2.475]],["title/interfaces/AppConfig.html",[0,0.007,361,3.108]],["body/interfaces/AppConfig.html",[0,0.009,2,0.837,3,0.252,4,0.252,5,0.23,6,0.187,10,0.344,11,0.632,14,0.448,15,0.015,17,0.47,24,1.114,45,0.252,73,1.082,137,1.412,210,0.012,211,0.012,216,2.152,230,1.065,305,2.152,361,5.528,362,4.823,363,4.823,364,6.134,365,6.134,366,4.052,367,6.134,368,7.099,369,6.151,370,3.684,371,6.151,372,6.151,373,4.622,374,5.316,375,6.134,376,6.151,377,6.151,378,7.099,379,3.322,380,6.134,381,4.18,382,4.823,383,3.756,384,5.316,385,4.823]],["title/injectables/ComponentRegistryService.html",[212,0.886,386,2.462]],["body/injectables/ComponentRegistryService.html",[3,0.178,4,0.178,5,0.163,6,0.275,10,0.483,11,0.501,14,0.45,15,0.016,17,0.333,20,2.627,24,0.789,33,4.632,37,2.519,45,0.178,46,0.889,50,4.214,52,2.819,72,4.214,73,0.969,83,2.208,125,2.426,137,1.657,161,2.17,179,1.6,180,1.525,195,1.805,199,4.214,210,0.009,211,0.009,212,1.079,213,1.333,215,2.962,216,1.525,217,4.735,219,2.235,220,1.605,224,1.96,225,2.962,227,2.962,228,1.805,229,1.315,230,1.07,232,2.12,235,1.87,236,1.77,273,3.787,276,4.704,278,4.304,287,3.468,289,6.037,291,4.214,297,5.343,304,2.115,305,2.17,306,2.405,326,3.049,371,4.214,376,4.214,379,2.276,386,3.001,387,7.12,388,3.787,389,5.661,390,5.661,391,4.863,392,4.863,393,4.863,394,4.214,395,4.863,396,3.418,397,4.863,398,3.418,399,1.981,400,4.863,401,3.418,402,4.214,403,3.418,404,4.863,405,4.863,406,4.214,407,4.863,408,4.863,409,3.001,410,4.214,411,4.863,412,3.418,413,3.418,414,3.418,415,3.418,416,3.418,417,3.418,418,3.418,419,4.863,420,3.418,421,3.418,422,3.418,423,1.981,424,3.418,425,2.662,426,3.418]],["title/pipes/DefaultPipe.html",[427,2.183,428,2.846]],["body/pipes/DefaultPipe.html",[3,0.283,4,0.283,5,0.258,6,0.255,14,0.36,15,0.015,17,0.529,24,1.252,45,0.283,46,1.41,49,2.808,73,1.096,83,2.773,174,3.824,195,1.587,210,0.013,211,0.013,220,1.79,224,1.525,228,1.587,229,1.516,230,0.941,232,1.864,304,2.465,427,3.608,428,4.704,429,3.866,430,5.422,431,3.345,432,5.137,433,4.698,434,5.717,435,7.399,436,5.422,437,5.717]],["title/interfaces/Layout.html",[0,0.007,438,2.637]],["body/interfaces/Layout.html",[0,0.011,2,1.039,3,0.312,4,0.312,5,0.285,6,0.232,10,0.427,11,0.721,14,0.398,15,0.015,45,0.312,146,3.647,210,0.013,211,0.013,438,4.623,439,5.986,440,5.953]],["title/injectables/LayoutEffects.html",[212,0.886,441,3.108]],["body/injectables/LayoutEffects.html",[3,0.225,4,0.225,5,0.205,6,0.274,10,0.307,11,0.587,12,2.849,14,0.286,15,0.016,17,0.723,24,0.994,45,0.225,46,1.119,49,2.229,83,2.222,125,2.288,146,3.14,184,2.428,195,1.26,210,0.011,211,0.011,212,1.264,213,1.679,219,2.243,220,1.88,223,1.48,224,1.912,228,1.26,229,0.918,230,0.747,232,1.48,304,2.129,306,2.222,320,2.354,427,3.116,440,5.858,441,4.436,442,4.304,443,7.41,444,6.797,445,3.069,446,4.053,447,4.304,448,4.304,449,4.304,450,4.062,451,4.937,452,4.553,453,5.697,454,5.697,455,5.697,456,6.386,457,5.697,458,4.304,459,5.697,460,2.354,461,2.495,462,1.421,463,4.304,464,2.014,465,3.069,466,3.73,467,2.495,468,2.354,469,3.73,470,3.73,471,3.73,472,4.304,473,4.304]],["title/interfaces/Manifest.html",[0,0.007,474,1.215]],["body/interfaces/Manifest.html",[0,0.01,2,0.933,3,0.28,4,0.28,5,0.256,6,0.208,10,0.383,11,0.676,14,0.503,15,0.015,17,0.524,45,0.28,73,1.103,135,2.647,210,0.012,211,0.012,216,3.291,229,1.573,230,1.28,284,1.847,369,6.392,474,2.157,475,5.372,476,7.376,477,4.873,478,3.831,479,3.549]],["title/injectables/ManifestEffects.html",[212,0.886,480,3.108]],["body/injectables/ManifestEffects.html",[3,0.122,4,0.122,5,0.112,6,0.228,10,0.167,11,0.378,14,0.156,15,0.016,17,0.652,24,0.541,45,0.122,46,0.61,83,1.993,125,1.988,137,2.205,184,2.786,195,2.102,200,3.217,210,0.007,211,0.007,212,0.814,213,0.914,219,1.831,220,1.211,223,1.261,224,1.561,228,0.686,229,0.5,230,0.407,284,2.3,304,2.073,305,1.637,306,1.762,423,1.359,446,3.479,452,4.383,460,1.282,461,1.359,462,0.774,464,1.097,465,1.672,467,1.359,468,1.282,474,2.208,480,2.856,481,2.345,482,3.916,483,4.518,484,4.518,485,4.518,486,1.549,487,2.345,488,4.58,489,3.518,490,3.668,491,3.668,492,3.668,493,3.668,494,3.668,495,3.668,496,3.668,497,5.111,498,4.319,499,4.58,500,3.668,501,5.882,502,3.668,503,3.668,504,3.179,505,5.111,506,3.668,507,3.668,508,4.429,509,3.98,510,4.429,511,3.668,512,3.681,513,2.345,514,2.345,515,3.668,516,5.111,517,3.668,518,3.668,519,2.345,520,3.668,521,3.668,522,3.668,523,3.668,524,5.111,525,3.629,526,3.668,527,4.429,528,3.668,529,3.179,530,3.668,531,3.668,532,3.179,533,3.668,534,3.668,535,5.111,536,3.668,537,2.616,538,3.668,539,3.179,540,2.616,541,3.153,542,3.668,543,2.475,544,3.668,545,3.179,546,5.111,547,3.179,548,5.111,549,5.111,550,3.668,551,2.263,552,3.179,553,2.856,554,3.179,555,2.856,556,3.179,557,3.668,558,2.616,559,2.839,560,3.668,561,2.856,562,3.668,563,2.345,564,1.672,565,2.032,566,2.032,567,2.423,568,1.826,569,1.826,570,2.345,571,1.549,572,1.672,573,1.826,574,2.032,575,1.549,576,1.826,577,4.58,578,2.345,579,1.672,580,2.345,581,1.672,582,2.345,583,1.549,584,2.345,585,1.549,586,2.345,587,2.345]],["title/interfaces/ManifestEntry.html",[0,0.007,478,2.846]],["body/interfaces/ManifestEntry.html",[0,0.009,2,0.796,3,0.24,4,0.24,5,0.219,6,0.178,10,0.328,11,0.612,14,0.517,15,0.015,17,0.579,45,0.31,73,1.073,135,2.462,184,1.955,210,0.011,211,0.011,216,3.109,220,2.382,224,1.291,229,1.486,230,1.367,284,1.578,306,2.974,474,1.398,478,4.236,479,3.031,512,3.95,525,4.299,539,3.976,543,3.299,559,3.299,567,3.031,568,4.626,588,3.573,589,3.573,590,4.453,591,4.603,592,4.589,593,5.709,594,4.589,595,4.589,596,3.976]],["title/interfaces/ManifestEntryRequest.html",[0,0.007,597,3.108]],["body/interfaces/ManifestEntryRequest.html",[0,0.009,2,0.812,3,0.244,4,0.244,5,0.223,6,0.181,10,0.334,11,0.62,12,2.088,14,0.514,15,0.015,17,0.649,45,0.244,73,1.034,135,2.891,184,3.094,210,0.011,211,0.011,230,1.392,284,1.609,462,1.545,543,3.24,545,6.083,547,6.083,551,4.331,553,5.466,555,5.466,567,4.637,568,4.685,588,3.644,591,4.637,597,4.685,598,4.68,599,5.466,600,5.466,601,5.763,602,5.763]],["title/interfaces/MappingStrategy.html",[0,0.007,603,2.462]],["body/interfaces/MappingStrategy.html",[0,0.011,2,1.013,3,0.305,4,0.305,5,0.278,6,0.226,7,3.384,10,0.417,11,0.711,14,0.388,15,0.015,45,0.305,176,4.163,179,2.732,180,2.605,181,4.163,182,3.077,184,2.488,210,0.013,211,0.013,306,2.958,603,4.255,604,5.838,605,5.059,606,5.838]],["title/interfaces/MessageClientOptions.html",[0,0.007,607,2.637]],["body/interfaces/MessageClientOptions.html",[0,0.01,2,0.912,3,0.274,4,0.274,5,0.25,6,0.203,10,0.375,11,0.667,14,0.509,15,0.015,45,0.274,73,0.731,146,3.448,210,0.012,211,0.012,230,1.379,231,3.045,276,5.056,306,3.024,607,4.275,608,2.72,609,2.344,610,3.045,611,4.09,612,6.342,613,6.342,614,6.342,615,6.342,616,6.342]],["title/interfaces/MessageManifest.html",[0,0.007,617,2.313]],["body/interfaces/MessageManifest.html",[0,0.009,2,0.804,3,0.242,4,0.242,5,0.221,6,0.179,10,0.331,11,0.616,14,0.517,15,0.015,17,0.706,45,0.242,73,1.075,135,2.473,210,0.011,211,0.011,216,3.12,229,1.491,230,1.326,268,3.27,284,1.593,450,3.304,474,1.411,477,4.62,479,3.061,543,3.23,603,4.315,607,4.62,608,2.4,609,2.068,610,3.465,617,3.465,618,4.634,619,6.06,620,5.446,621,5.162,622,4.987,623,4.987,624,3.085,625,2.859,626,2.859,627,4.655,628,4.015,629,4.015,630,3.608]],["title/injectables/MessageManifestEffects.html",[212,0.886,631,3.108]],["body/injectables/MessageManifestEffects.html",[3,0.134,4,0.134,5,0.187,6,0.265,10,0.183,11,0.405,14,0.17,15,0.016,17,0.669,24,0.592,45,0.134,46,0.667,75,2.932,83,2.555,125,1.713,192,4.645,200,3.336,210,0.007,211,0.007,212,0.872,213,1,219,1.578,223,1.352,224,1.89,228,0.75,229,0.547,230,0.445,284,2.398,304,2.448,306,2.255,322,1.996,323,1.996,427,3.583,446,3.583,452,5.294,460,1.402,461,1.486,462,0.846,464,1.2,465,1.828,466,2.222,467,1.486,468,1.402,474,2.276,486,1.694,488,5.739,489,1.996,498,1.996,564,1.828,565,2.222,566,2.222,575,1.694,608,3.551,609,3.059,617,1.486,624,2.284,625,1.582,626,1.582,631,3.061,632,2.564,633,4.781,634,4.781,635,4.143,636,4.781,637,4.781,638,4.781,639,4.781,640,4.781,641,4.945,642,2.564,643,3.931,644,6.551,645,5.36,646,3.931,647,3.931,648,5.821,649,3.931,650,2.564,651,3.931,652,3.931,653,3.931,654,3.931,655,2.564,656,3.931,657,4.645,658,5.36,659,2.564,660,3.931,661,3.931,662,3.931,663,3.931,664,2.564,665,3.931,666,2.564,667,3.931,668,3.931,669,3.931,670,2.564,671,3.931,672,4.645,673,3.931,674,6.856,675,5.36,676,3.931,677,5.36,678,2.803,679,5.36,680,2.564,681,3.931,682,3.931,683,3.931,684,3.931,685,2.564,686,1.996,687,2.222,688,2.222,689,1.828,690,1.694,691,2.222,692,2.222,693,2.222]],["title/interfaces/MessageManifestEntry.html",[0,0.007,625,2.462]],["body/interfaces/MessageManifestEntry.html",[0,0.009,2,0.795,3,0.239,4,0.239,5,0.218,6,0.177,10,0.327,11,0.612,14,0.512,15,0.015,17,0.642,45,0.31,73,1.096,210,0.011,211,0.011,216,3.107,229,1.485,230,1.366,287,3.266,306,2.973,326,3.258,450,4.231,474,1.395,479,3.026,525,2.826,543,2.044,559,2.044,589,3.566,590,4.45,593,5.142,596,3.969,603,4.296,607,3.026,608,2.372,609,2.044,610,3.439,621,3.266,622,4.965,623,3.266,624,3.283,625,3.661,626,3.661,678,3.266,694,5.422,695,3.969,696,3.026,697,4.58,698,4.58]],["title/interfaces/MessageManifestEntryMessage.html",[0,0.007,699,2.846]],["body/interfaces/MessageManifestEntryMessage.html",[0,0.01,2,0.937,3,0.282,4,0.282,5,0.257,6,0.209,10,0.385,11,0.678,12,2.408,14,0.472,15,0.015,17,0.692,45,0.282,73,1.103,210,0.012,211,0.012,230,1.142,284,1.856,462,1.781,474,1.644,543,2.408,599,5.753,600,5.753,607,3.566,608,2.795,609,2.408,610,3.813,621,3.848,623,3.848,624,3.282,699,4.691,700,5.397]],["title/interfaces/MessageManifestState.html",[0,0.007,701,3.458]],["body/interfaces/MessageManifestState.html",[0,0.004,2,0.373,3,0.112,4,0.112,5,0.102,6,0.083,10,0.153,11,0.353,12,2.171,14,0.227,15,0.016,17,0.518,45,0.354,48,2.26,73,0.299,93,2.747,135,1.986,137,1.907,179,3.299,180,3.145,182,1.526,195,2.216,210,0.006,211,0.006,284,1.673,326,3.114,423,3.685,461,2.82,462,0.708,474,2.189,477,3.511,509,4.138,540,3.041,571,1.418,572,1.53,575,1.418,608,1.112,609,0.958,617,1.983,620,3.789,624,3.11,627,1.671,629,4.216,630,4.41,678,1.53,686,1.671,699,3.469,701,4.907,702,1.671,703,3.041,704,6.517,705,5.941,706,2.439,707,2.439,708,1.418,709,1.983,710,2.146,711,2.964,712,2.664,713,2.964,714,2.664,715,1.671,716,1.671,717,1.418,718,1.671,719,5.648,720,1.53,721,1.53,722,1.871,723,1.53,724,2.146,725,2.146,726,1.86,727,2.146,728,1.86,729,2.146,730,1.86,731,2.146,732,2.146,733,1.86,734,2.146,735,1.86,736,1.86,737,2.146,738,1.86,739,1.86,740,2.146,741,1.86,742,2.146,743,2.964,744,1.86,745,2.146,746,1.86,747,2.146,748,1.86,749,2.146,750,1.53,751,1.86,752,2.146,753,1.86,754,1.86,755,2.146,756,1.86,757,2.146,758,1.86,759,5.274,760,5.274,761,2.146,762,4.533,763,3.922,764,4.866,765,3.696,766,4.803,767,2.146,768,1.86,769,2.146,770,4.265,771,2.146,772,2.146,773,2.146,774,2.146,775,2.146,776,2.146,777,2.146,778,2.146,779,2.146,780,2.146,781,2.146,782,2.146,783,2.146,784,2.146,785,2.146,786,2.146,787,2.146,788,2.146,789,2.146,790,2.146,791,1.671,792,1.671,793,2.146,794,1.418,795,2.964,796,2.964,797,2.964,798,2.964,799,1.86,800,1.671,801,1.671,802,1.86,803,1.86,804,1.86,805,1.671,806,1.86,807,1.86,808,1.671,809,2.146,810,2.146,811,2.146,812,2.146]],["title/injectables/MessageService.html",[212,0.886,641,3.108]],["body/injectables/MessageService.html",[3,0.085,4,0.085,5,0.078,6,0.255,10,0.117,11,0.282,14,0.351,15,0.016,17,0.541,24,0.377,45,0.085,46,0.425,73,0.575,83,2.162,93,1.817,125,1.265,137,1.547,161,2.655,180,2.22,195,1.831,210,0.005,211,0.005,212,0.607,213,0.637,216,2.728,219,1.363,220,1.363,223,0.562,224,1.827,228,1.831,229,1.334,230,0.798,231,0.947,232,1.42,235,0.893,236,0.846,284,1.817,287,2.945,304,2.071,305,1.576,306,1.377,320,0.893,322,3.875,323,3.875,326,2.153,366,2.729,373,1.008,427,0.893,445,1.165,446,2.891,462,0.539,464,0.764,468,0.893,474,2.3,498,1.272,559,1.576,575,1.079,585,1.808,590,2.549,609,0.729,610,4.305,612,1.416,613,1.416,614,1.416,615,1.416,616,1.416,617,3.823,619,1.416,622,1.165,624,3.292,625,2.549,626,3.07,630,4.487,635,3.06,641,3.217,686,1.272,687,4.58,688,4.312,689,3.548,690,3.287,691,4.312,693,4.312,694,2.131,695,3.58,699,1.165,712,1.272,714,2.131,813,1.633,814,4.599,815,3.531,816,3.531,817,4.599,818,4.599,819,4.599,820,4.599,821,4.599,822,3.58,823,4.131,824,5.543,825,2.736,826,2.736,827,1.633,828,5.156,829,4.131,830,3.938,831,5.762,832,2.736,833,1.633,834,2.736,835,2.736,836,2.736,837,2.736,838,1.633,839,2.736,840,1.633,841,1.633,842,5.421,843,6.256,844,6.256,845,1.633,846,3.58,847,2.131,848,2.736,849,2.736,850,2.75,851,2.371,852,2.371,853,3.531,854,2.736,855,2.371,856,2.736,857,3.58,858,3.06,859,1.633,860,2.736,861,2.736,862,1.633,863,1.633,864,2.736,865,4.976,866,2.371,867,1.633,868,2.736,869,1.633,870,4.633,871,3.58,872,4.131,873,2.736,874,1.633,875,2.736,876,4.131,877,2.736,878,1.633,879,1.416,880,1.633,881,5.628,882,2.736,883,1.633,884,2.736,885,1.416,886,1.633,887,1.416,888,1.633,889,1.633,890,1.633,891,1.272,892,1.633,893,2.736,894,2.736,895,1.633,896,1.633,897,1.633,898,1.633,899,1.633,900,2.736,901,1.633,902,1.633,903,1.633,904,1.633,905,1.633,906,3.531,907,1.633,908,2.736,909,1.633,910,1.633,911,2.736,912,1.633,913,2.736,914,1.633,915,1.633,916,1.633,917,1.633,918,1.633,919,1.416,920,1.633,921,5.285,922,1.633,923,1.633,924,1.633,925,1.633,926,1.633,927,1.633,928,1.633,929,1.633,930,1.633,931,1.633,932,1.633,933,1.633,934,1.633,935,1.633,936,1.633,937,1.633,938,1.633,939,1.633,940,2.131,941,2.736,942,2.371,943,2.736,944,1.633,945,1.633,946,1.633,947,1.633,948,1.633,949,1.633,950,1.633,951,1.633,952,2.736,953,1.633,954,1.633]],["title/interfaces/Modal.html",[0,0.007,955,1.962]],["body/interfaces/Modal.html",[0,0.011,2,1.016,3,0.306,4,0.306,5,0.279,6,0.226,10,0.418,11,0.712,14,0.459,15,0.015,45,0.306,73,1.022,146,3.613,210,0.013,211,0.013,229,1.618,955,3.396,956,5.852,957,5.91]],["title/injectables/ModalEffects.html",[212,0.886,958,3.458]],["body/injectables/ModalEffects.html",[3,0.299,4,0.299,5,0.273,6,0.264,14,0.38,15,0.015,17,0.665,24,1.322,45,0.299,46,1.488,200,4.271,210,0.013,211,0.013,212,1.513,213,2.233,219,1.889,223,1.968,224,1.61,228,1.675,229,1.221,230,0.994,320,3.131,460,3.131,486,3.782,958,5.907,959,5.724,960,5.724]],["title/injectables/NgBindingsService.html",[212,0.886,961,2.637]],["body/injectables/NgBindingsService.html",[0,0.009,3,0.244,4,0.244,5,0.222,6,0.271,10,0.333,11,0.619,14,0.441,15,0.016,17,0.586,24,1.079,45,0.314,46,1.214,73,0.976,125,2.381,135,2.483,195,1.367,210,0.011,211,0.011,212,1.334,213,1.822,216,2.084,217,3.708,219,2.193,220,1.983,223,2.284,224,1.869,228,1.367,229,0.996,230,0.811,231,3.483,232,1.606,235,2.554,236,2.419,268,2.554,464,2.186,961,3.97,962,6.078,963,4.047,964,4.679,965,4.679,966,6.701,967,6.009,968,6.009,969,5.207,970,5.462,971,5.462,972,4.67,973,5.207,974,3.708,975,5.207,976,4.047,977,3.085,978,4.047,979,5.757,980,4.047]],["title/interfaces/RefBindingSubject.html",[0,0.007,971,3.108]],["body/interfaces/RefBindingSubject.html",[0,0.009,2,0.858,3,0.258,4,0.258,5,0.235,6,0.191,10,0.353,11,0.642,14,0.453,15,0.016,17,0.608,24,1.142,45,0.325,46,1.286,73,0.867,125,1.772,135,2.329,195,1.447,210,0.012,211,0.012,212,1.383,217,3.051,219,1.632,223,1.7,231,2.866,235,2.704,236,2.561,464,2.314,961,3.267,962,4.285,963,4.285,964,3.85,965,3.85,966,6.533,969,4.285,970,5.75,971,5.313,973,6.207,974,4.42,975,6.207,976,6.207,977,4.732,978,4.285,979,5.913,980,4.285]],["title/interfaces/Request.html",[0,0.007,512,2.067]],["body/interfaces/Request.html",[0,0.009,2,0.856,3,0.258,4,0.258,5,0.235,6,0.191,10,0.352,11,0.641,14,0.514,15,0.015,17,0.607,45,0.258,73,0.949,135,2.547,184,3.144,210,0.012,211,0.012,230,1.366,306,3.018,512,3.707,541,4.416,543,3.293,551,4.416,553,5.574,555,5.574,559,2.202,567,4.729,591,4.729,601,5.907,602,5.907,981,4.276]],["title/interfaces/RequestOptions.html",[0,0.007,591,2.637]],["body/interfaces/RequestOptions.html",[0,0.008,2,0.778,3,0.234,4,0.234,5,0.214,6,0.173,10,0.32,11,0.603,14,0.524,15,0.016,17,0.437,45,0.234,73,1.022,120,3.563,135,2.187,146,3.613,210,0.011,211,0.011,230,1.376,268,4.019,357,5.985,451,5.646,529,5.985,551,4.02,559,2.907,591,3.866,611,3.492,881,3.886,942,5.985,982,3.886,983,6.906,984,6.906,985,6.906,986,6.906,987,5.985,988,6.515,989,6.515,990,5.646,991,3.492,992,2.767,993,4.484]],["title/injectables/RestEffects.html",[212,0.886,994,3.108]],["body/injectables/RestEffects.html",[3,0.117,4,0.117,5,0.107,6,0.28,10,0.16,11,0.365,12,1.581,14,0.149,15,0.016,17,0.59,24,0.518,45,0.117,46,0.583,83,2.776,125,2.653,179,1.659,180,1.581,184,2.919,195,1.46,200,3.158,210,0.007,211,0.007,212,0.787,213,0.875,219,2.444,223,1.219,224,2.022,228,0.657,229,0.479,230,0.39,304,2.66,306,0.875,383,2.76,427,1.938,452,5.246,460,1.227,464,1.05,465,1.6,467,1.301,486,1.483,488,5.689,489,1.748,512,3.984,537,2.527,543,1.96,558,5.019,559,2.576,561,5.481,564,1.6,569,1.748,579,3.132,581,3.132,583,2.902,585,2.902,590,2.187,648,1.945,657,4.323,672,3.071,759,2.76,760,2.76,830,3.73,994,2.76,995,2.244,996,4.392,997,4.392,998,4.392,999,4.392,1000,4.392,1001,4.392,1002,4.392,1003,4.392,1004,3.806,1005,3.885,1006,2.244,1007,2.244,1008,3.544,1009,6.851,1010,6.851,1011,6.851,1012,3.544,1013,7.039,1014,7.039,1015,2.244,1016,2.244,1017,3.544,1018,3.544,1019,2.244,1020,2.244,1021,3.544,1022,3.544,1023,2.244,1024,2.244,1025,3.544,1026,3.544,1027,2.244,1028,2.244,1029,3.544,1030,3.544,1031,2.244,1032,2.244,1033,3.544,1034,3.544,1035,2.244,1036,3.544,1037,3.544,1038,3.544,1039,3.544,1040,3.544,1041,3.544,1042,3.544,1043,3.544,1044,4.989,1045,2.244,1046,3.544,1047,3.544,1048,3.544,1049,3.544,1050,2.244,1051,3.544,1052,3.544,1053,2.244,1054,1.945,1055,2.244,1056,2.244,1057,2.244,1058,2.244,1059,2.244,1060,2.244,1061,2.244]],["title/injectables/RestService.html",[212,0.886,1005,3.108]],["body/injectables/RestService.html",[3,0.152,4,0.152,5,0.139,6,0.278,10,0.208,14,0.471,15,0.016,17,0.596,24,0.674,45,0.152,46,0.759,73,0.949,116,1.929,125,2.495,137,1.269,161,1.935,179,2.029,180,1.935,181,2.082,182,2.308,183,2.273,184,1.244,195,2.074,210,0.008,211,0.008,212,0.962,213,1.139,219,0.964,220,1.431,223,1.004,224,1.994,228,2.074,229,1.511,230,1.23,232,2.394,235,1.597,236,1.512,305,1.935,320,1.597,383,2.273,464,1.366,467,1.692,512,4.156,527,2.53,541,4.373,543,3.435,551,4.437,552,2.53,554,2.53,556,2.53,564,2.082,579,3.092,581,3.092,583,2.864,585,2.864,830,4.769,842,5.554,987,2.53,991,2.273,1005,3.376,1062,2.919,1063,4.336,1064,4.336,1065,4.336,1066,2.919,1067,5.725,1068,2.919,1069,4.336,1070,4.336,1071,2.919,1072,4.336,1073,2.919,1074,4.336,1075,2.919,1076,4.336,1077,2.919,1078,4.336,1079,2.919,1080,4.336,1081,2.919,1082,4.336,1083,2.919,1084,2.919,1085,4.336,1086,2.919,1087,2.919,1088,2.919,1089,4.336,1090,2.919,1091,5.172,1092,5.172,1093,2.919,1094,2.919,1095,5.172,1096,2.919,1097,2.919,1098,2.919,1099,2.919,1100,4.336,1101,4.336,1102,4.336,1103,2.53,1104,2.53,1105,2.919,1106,2.919,1107,2.919,1108,2.919,1109,2.919,1110,2.919,1111,2.919,1112,2.919,1113,2.919,1114,2.919,1115,2.53,1116,2.919,1117,2.919,1118,2.919,1119,2.919]],["title/interfaces/RootState.html",[0,0.007,468,2.183]],["body/interfaces/RootState.html",[0,0.005,2,0.435,3,0.131,4,0.131,5,0.119,6,0.097,10,0.179,11,0.398,14,0.419,15,0.016,17,0.695,24,0.579,45,0.411,73,0.965,135,0.937,137,2.317,195,1.55,210,0.007,211,0.007,229,0.534,284,1.328,305,1.118,326,1.173,370,3.098,381,2.172,423,3.07,438,4.161,462,0.827,468,2.578,469,2.172,474,1.981,478,4.31,508,3.348,509,3.008,537,2.755,540,4.31,571,1.656,572,3.777,573,1.952,599,5.065,600,4.125,609,2.103,617,2.239,624,2.257,625,2.384,628,2.172,722,1.371,794,4.161,801,1.952,804,5.238,805,1.952,808,1.952,855,2.172,955,1.233,1004,5.459,1120,2.507,1121,6.045,1122,2.811,1123,5.297,1124,4.714,1125,4.714,1126,5.297,1127,4.714,1128,5.722,1129,5.297,1130,3.863,1131,2.507,1132,7.639,1133,2.507,1134,3.863,1135,2.507,1136,2.507,1137,2.507,1138,2.507,1139,2.507,1140,2.507,1141,2.507,1142,2.507,1143,2.507,1144,2.507,1145,2.507,1146,2.507,1147,2.507,1148,2.507,1149,2.507,1150,2.507,1151,2.507,1152,2.507,1153,2.507,1154,2.507,1155,3.863,1156,2.507,1157,2.507,1158,2.507,1159,2.507,1160,2.507,1161,2.507,1162,2.507,1163,2.172,1164,2.507,1165,1.453,1166,2.172,1167,6.299,1168,2.507,1169,2.507,1170,2.507,1171,2.507,1172,2.507,1173,2.507,1174,2.172,1175,2.507,1176,2.507,1177,4.714,1178,4.714,1179,2.507,1180,3.863,1181,2.507,1182,2.507,1183,2.507,1184,3.863,1185,2.507,1186,2.507,1187,2.507,1188,6.299,1189,2.507,1190,2.507,1191,2.507,1192,2.507,1193,3.863,1194,2.507,1195,2.507,1196,2.507,1197,2.507,1198,2.507,1199,2.507,1200,2.507,1201,2.507,1202,2.507,1203,2.507,1204,2.507,1205,2.507,1206,4.085,1207,2.507,1208,2.507,1209,3.348,1210,2.507,1211,2.507,1212,2.507,1213,3.863,1214,2.507,1215,3.863,1216,3.863,1217,3.863,1218,3.348,1219,3.008,1220,3.863,1221,3.863,1222,3.863,1223,2.507,1224,2.507,1225,3.863,1226,2.507,1227,1.952,1228,2.507,1229,2.507,1230,2.507,1231,3.863,1232,2.507,1233,1.952,1234,2.507,1235,2.507]],["title/pipes/SafePipe.html",[427,2.183,1236,2.846]],["body/pipes/SafePipe.html",[3,0.237,4,0.237,5,0.216,6,0.228,14,0.499,15,0.016,17,0.576,24,1.05,45,0.237,46,1.182,49,2.354,73,0.913,83,1.772,174,3.422,195,2.106,210,0.011,211,0.011,220,1.5,224,1.278,228,1.33,229,1.398,230,0.789,232,1.562,304,1.698,305,2.028,409,4.283,427,3.229,429,3.24,431,2.804,432,4.597,433,3.938,434,5.116,437,5.116,541,4.283,576,3.539,577,5.603,1236,4.21,1237,4.544,1238,5.904,1239,5.406,1240,6.016,1241,6.942,1242,4.544,1243,6.557,1244,5.683,1245,6.557,1246,6.557,1247,6.557,1248,5.904,1249,3.24,1250,3.002,1251,4.544,1252,4.544,1253,4.544,1254,4.544,1255,4.544,1256,4.544,1257,4.544,1258,3.938,1259,4.544,1260,4.544,1261,4.544,1262,3.938]],["title/interfaces/SelectOptions.html",[0,0.007,1263,3.108]],["body/interfaces/SelectOptions.html",[0,0.008,2,0.738,3,0.222,4,0.222,5,0.202,6,0.164,10,0.303,11,0.582,14,0.282,15,0.016,17,0.66,36,3.502,45,0.295,52,2.463,73,0.786,75,2.324,137,1.857,174,2.463,179,3.554,180,3.389,182,2.832,184,1.811,195,1.979,210,0.011,211,0.011,263,3.03,461,2.463,462,1.403,464,1.989,467,2.463,499,3.309,690,2.808,715,4.941,716,4.941,717,4.192,791,4.399,830,3.486,1262,5.86,1263,4.941,1264,3.683,1265,6.763,1266,3.309,1267,4.895,1268,3.683,1269,4.399,1270,3.683,1271,3.683,1272,3.683,1273,3.309,1274,3.683,1275,3.683,1276,3.683,1277,3.683,1278,3.683,1279,6.346,1280,5.649,1281,4.25,1282,4.25,1283,4.25,1284,4.25,1285,5.649,1286,4.25,1287,5.86,1288,6.346,1289,4.25,1290,4.25,1291,3.683,1292,3.683,1293,4.25,1294,5.649,1295,4.25,1296,4.25,1297,4.25,1298,4.25,1299,4.25,1300,4.25,1301,3.683,1302,3.683]],["title/interfaces/State.html",[0,0.007,93,1.372]],["body/interfaces/State.html",[0,0.01,2,0.928,3,0.279,4,0.279,5,0.255,6,0.207,10,0.382,11,0.674,14,0.355,15,0.016,17,0.689,45,0.369,75,2.925,93,2.597,137,1.915,210,0.012,211,0.012,438,5.288,440,5.504,462,1.765,470,4.635,471,4.635,709,3.792,722,3.578,1165,3.1,1303,5.348,1304,5.348,1305,5.348]],["title/interfaces/State-1.html",[0,0.006,93,1.151,410,2.901]],["body/interfaces/State-1.html",[0,0.005,2,0.483,3,0.145,4,0.145,5,0.132,6,0.108,10,0.199,11,0.431,12,2.494,14,0.278,15,0.016,17,0.584,45,0.371,48,2.763,73,0.387,93,2.774,135,2.239,137,2.05,179,3.217,180,3.067,182,1.866,195,2.203,210,0.008,211,0.008,284,2.06,326,2.352,423,3.649,461,3.24,462,0.918,474,2.194,477,2.763,504,5.659,510,4.355,512,3.627,540,3.985,559,2.494,571,1.838,572,1.983,573,2.166,574,2.41,575,1.838,597,4.352,703,3.583,706,2.982,707,2.982,708,1.838,709,2.424,715,2.166,716,2.166,717,1.838,718,2.166,719,4.355,720,1.983,721,1.983,722,2.287,723,1.983,726,2.41,728,2.41,730,2.41,733,2.41,735,2.41,736,2.41,738,2.41,739,2.41,741,2.41,743,3.624,744,2.41,746,2.41,748,2.41,750,1.983,751,2.41,753,2.41,754,2.41,756,2.41,758,2.41,759,4.902,760,4.902,762,2.982,763,2.58,765,3.624,768,2.41,791,2.166,792,2.166,794,1.838,795,3.624,796,3.624,797,3.624,798,3.624,799,2.41,800,2.166,801,2.166,802,2.41,805,2.166,806,2.41,807,2.41,808,2.166,1174,2.41,1306,2.41,1307,6.874,1308,2.781,1309,2.781,1310,2.781,1311,2.781,1312,2.781,1313,2.781,1314,2.781,1315,2.781,1316,2.781,1317,2.781,1318,2.781,1319,2.781,1320,2.781,1321,2.781,1322,2.781,1323,2.781,1324,2.781,1325,2.781,1326,4.182,1327,2.781,1328,2.781,1329,2.781,1330,2.781,1331,2.781,1332,2.781,1333,2.781,1334,2.781,1335,2.781,1336,2.781,1337,2.781,1338,2.781]],["title/interfaces/State-2.html",[0,0.006,93,1.151,189,2.387]],["body/interfaces/State-2.html",[0,0.009,2,0.855,3,0.257,4,0.257,5,0.234,6,0.191,15,0.016,17,0.698,45,0.385,48,4.106,73,0.685,75,2.693,93,2.684,137,1.993,174,2.854,182,2.197,195,1.441,210,0.012,211,0.012,326,3.347,462,1.625,703,4.856,706,4.431,707,4.431,708,3.253,709,3.602,720,3.511,721,3.511,722,3.399,723,3.511,762,4.431,763,3.835,955,3.517,957,4.839,1165,2.854,1227,3.834,1339,4.267,1340,4.924,1341,4.924,1342,4.267,1343,4.924,1344,4.924,1345,4.924,1346,4.924,1347,4.924]],["title/interfaces/State-3.html",[0,0.006,93,1.151,1348,3.348]],["body/interfaces/State-3.html",[0,0.009,2,0.844,3,0.254,4,0.254,5,0.232,6,0.188,10,0.347,11,0.636,14,0.41,15,0.016,17,0.66,45,0.384,93,2.742,137,2.084,210,0.012,211,0.012,423,4.127,462,1.605,512,4.111,559,3.502,569,3.787,590,3.001,709,3.574,722,3.372,1054,4.214,1165,2.819,1349,4.863,1350,4.863,1351,4.863,1352,4.863,1353,4.863,1354,4.863,1355,4.863,1356,4.863]],["title/interfaces/State-4.html",[0,0.006,93,1.151,1357,2.901]],["body/interfaces/State-4.html",[0,0.009,2,0.801,3,0.241,4,0.241,5,0.22,6,0.179,10,0.329,11,0.615,14,0.464,15,0.016,17,0.705,30,3.291,45,0.345,73,0.972,93,2.591,137,2.167,195,1.351,210,0.011,211,0.011,229,1.489,268,3.262,304,2.228,370,3.249,462,1.523,709,3.457,722,3.262,1165,2.675,1358,4.616,1359,6.417,1360,6.53,1361,4.777,1362,6.606,1363,5.963,1364,3.594,1365,5.963,1366,6.606,1367,4,1368,4.616,1369,3.594,1370,4.616,1371,4.616,1372,4.616,1373,4.616,1374,4.616,1375,4.616,1376,5.963,1377,4.616]],["title/interfaces/State-5.html",[0,0.006,93,1.151,1378,2.901]],["body/interfaces/State-5.html",[0,0.009,2,0.849,3,0.255,4,0.255,5,0.233,6,0.189,15,0.016,17,0.696,45,0.384,48,4.09,73,0.681,93,2.681,137,1.987,159,3.903,182,2.183,195,1.432,210,0.012,211,0.012,326,3.34,462,1.615,703,4.842,706,4.414,707,4.414,708,3.233,709,3.588,720,3.489,721,3.489,722,3.386,723,3.489,762,4.414,763,3.819,1122,3.184,1165,2.836,1233,3.81,1379,4.24,1380,4.893,1381,4.893,1382,4.24,1383,4.893,1384,4.893,1385,4.893,1386,4.893,1387,4.24,1388,4.893,1389,4.893]],["title/injectables/ThemeEffects.html",[212,0.886,1390,3.108]],["body/injectables/ThemeEffects.html",[3,0.288,4,0.288,5,0.263,6,0.258,14,0.367,15,0.015,17,0.699,24,1.276,45,0.288,46,1.436,125,2.391,200,4.236,210,0.013,211,0.013,212,1.481,213,2.154,219,2.202,223,2.294,224,1.554,228,1.617,229,1.178,230,0.959,460,3.021,486,3.649,1390,5.195,1391,5.523,1392,5.176,1393,5.523,1394,5.523]],["title/injectables/ThemeService.html",[212,0.886,1392,2.637]],["body/injectables/ThemeService.html",[3,0.09,4,0.09,5,0.082,6,0.246,10,0.123,11,0.295,14,0.413,15,0.016,17,0.553,24,0.398,30,1.228,34,1.137,38,3.509,45,0.09,46,0.448,49,0.892,73,0.789,82,5.048,83,2.75,84,3.978,86,4.412,88,4.323,95,3.699,96,3.699,99,3.652,116,1.889,120,1.564,125,1.831,137,2.315,161,2.776,179,1.716,180,1.636,181,1.228,182,0.768,183,1.341,184,0.734,195,0.504,210,0.005,211,0.005,212,0.635,213,0.672,219,0.568,220,0.944,223,0.592,224,1.75,228,1.495,229,1.154,230,0.887,231,1.657,232,1.756,235,0.942,236,0.892,268,0.942,276,3.885,304,2.561,305,0.768,306,1.43,320,0.942,326,1.716,370,2.512,394,2.478,402,2.478,425,1.341,445,1.228,446,2.961,461,0.998,462,0.568,464,0.806,467,0.998,468,0.942,499,1.341,532,2.478,576,1.341,577,3.978,678,3.643,750,4.323,891,1.341,1103,2.478,1104,2.478,1206,1.492,1209,1.492,1266,1.341,1359,3.177,1360,3.177,1361,4.006,1364,1.341,1378,3.699,1392,1.889,1395,1.722,1396,3.666,1397,2.859,1398,2.859,1399,4.269,1400,2.859,1401,2.859,1402,2.859,1403,2.859,1404,6.854,1405,5.132,1406,1.722,1407,2.859,1408,1.722,1409,1.722,1410,1.722,1411,2.859,1412,1.722,1413,2.859,1414,1.722,1415,1.722,1416,1.722,1417,1.722,1418,1.722,1419,2.859,1420,1.722,1421,1.722,1422,1.722,1423,4.269,1424,1.722,1425,1.722,1426,1.722,1427,1.722,1428,1.722,1429,1.722,1430,1.722,1431,1.722,1432,1.722,1433,1.722,1434,1.722,1435,1.722,1436,2.859,1437,1.722,1438,1.722,1439,1.722,1440,1.722,1441,1.722,1442,4.691,1443,1.722,1444,1.722,1445,1.722,1446,1.722,1447,2.859,1448,5.666,1449,1.722,1450,1.722,1451,6.482,1452,2.859,1453,4.269,1454,2.859,1455,1.492,1456,5.666,1457,1.722,1458,1.722,1459,3.666,1460,3.666,1461,1.722,1462,5.88,1463,1.722,1464,1.722,1465,3.177,1466,2.859,1467,1.228,1468,1.492,1469,1.722,1470,1.722,1471,1.722,1472,1.722,1473,1.341,1474,3.099,1475,1.722,1476,1.722,1477,1.722,1478,4.412,1479,2.859,1480,1.722,1481,1.722,1482,7.58,1483,2.859,1484,1.722,1485,1.722,1486,2.859,1487,1.722,1488,1.722,1489,5.413,1490,3.324,1491,2.859,1492,2.859,1493,4.736,1494,5.666,1495,2.859,1496,2.859,1497,1.722,1498,2.859,1499,2.859,1500,1.722,1501,1.722,1502,1.722,1503,2.859,1504,2.859,1505,3.666,1506,2.859,1507,4.269,1508,5.109,1509,2.859,1510,5.666,1511,2.859,1512,5.109,1513,2.859,1514,2.859,1515,2.859,1516,2.859,1517,1.722,1518,1.722,1519,2.478,1520,2.859,1521,1.722,1522,1.722,1523,1.722,1524,2.859,1525,2.859,1526,1.722,1527,2.859,1528,1.722,1529,1.722,1530,1.722,1531,2.859,1532,2.859,1533,3.666,1534,2.859,1535,2.859,1536,2.859,1537,2.859,1538,2.859,1539,2.859,1540,1.722,1541,1.722,1542,2.859,1543,1.722,1544,1.722,1545,1.722,1546,2.512,1547,3.643,1548,2.794,1549,1.722,1550,1.722,1551,2.859,1552,1.722,1553,1.722,1554,2.859,1555,1.722,1556,1.722,1557,3.643,1558,1.722,1559,1.722,1560,2.859,1561,1.722,1562,1.722,1563,2.859,1564,1.722,1565,1.722]],["title/interfaces/ThemeVariant.html",[0,0.007,54,2.846]],["body/interfaces/ThemeVariant.html",[0,0.009,2,0.867,3,0.261,4,0.261,5,0.238,6,0.193,10,0.357,11,0.647,14,0.516,15,0.015,45,0.261,54,4.473,73,1.14,99,3.724,210,0.012,211,0.012,230,1.394,1566,3.891,1567,4.997,1568,7.19,1569,7.19,1570,7.19,1571,7.19,1572,7.19,1573,7.19,1574,7.19]],["title/interfaces/ThemeVariants.html",[0,0.007,1361,2.637]],["body/interfaces/ThemeVariants.html",[0,0.009,2,0.819,3,0.38,4,0.246,5,0.225,6,0.183,10,0.337,11,0.623,14,0.525,15,0.015,17,0.46,45,0.246,54,5.881,55,5.482,210,0.011,211,0.011,370,2.32,558,5.02,1361,3.995,1364,5.482,1455,6.101,1467,3.364,1566,3.673,1575,4.717,1576,6.101,1577,7.04,1578,7.04,1579,6.101,1580,7.04,1581,7.04,1582,6.101]],["title/interfaces/WvrAnimationComponent.html",[0,0.007,317,3.108]],["body/interfaces/WvrAnimationComponent.html",[0,0.01,2,0.906,3,0.272,4,0.272,5,0.248,6,0.29,10,0.372,14,0.428,15,0.015,45,0.272,73,0.973,161,3.49,210,0.012,211,0.012,220,2.127,224,2.054,228,1.886,229,1.374,230,1.119,232,2.51,249,6.328,317,5.018,870,5.686,1583,4.956,1584,5.218,1585,7.302,1586,6.444,1587,6.444,1588,5.218,1589,5.218,1590,6.444,1591,5.218,1592,6.444,1593,5.218,1594,5.218]],["title/directives/WvrContentProjectionDirective.html",[1595,2.637,1596,2.313]],["body/directives/WvrContentProjectionDirective.html",[3,0.254,4,0.254,5,0.232,6,0.284,10,0.347,14,0.45,15,0.015,17,0.601,18,5.867,23,3.804,24,1.123,36,3.193,45,0.254,46,1.264,49,3.193,73,0.858,159,4.019,160,6.17,161,2.751,179,2.276,180,2.17,210,0.012,211,0.012,219,1.605,220,2.035,223,1.672,224,2.003,228,1.423,229,1.037,230,0.844,232,1.672,242,3.787,320,2.66,431,3.001,974,4.761,1287,4.214,1595,4.074,1596,3.574,1597,3.001,1598,7.347,1599,4.863,1600,5.077,1601,4.397,1602,4.178,1603,4.863,1604,6.166,1605,4.863,1606,4.863,1607,4.863,1608,4.863,1609,4.863,1610,4.863,1611,4.863,1612,4.863,1613,4.863,1614,4.863]],["title/modules/WvrCoreModule.html",[1615,2.462,1616,2.846]],["body/modules/WvrCoreModule.html",[3,0.116,4,0.116,5,0.106,6,0.086,8,1.734,12,0.994,15,0.016,17,0.772,20,3.202,22,4.481,24,0.514,26,3.802,28,2.512,36,3.892,37,3.873,38,1.153,45,0.259,46,0.579,47,2.042,64,1.588,71,1.588,75,3.148,99,2.263,120,1.218,135,1.633,137,1.684,159,1.927,174,4.159,210,0.007,211,0.007,230,0.387,239,4.104,284,1.211,305,0.994,370,1.095,379,1.042,386,3.551,441,2.743,446,1.218,460,1.218,462,0.735,474,1.903,480,2.743,609,0.994,624,2.663,631,2.743,766,1.734,955,1.095,961,3.802,991,1.734,992,1.374,994,2.743,1122,0.994,1163,1.93,1166,3.053,1258,1.93,1390,2.743,1392,3.802,1474,1.218,1546,2.83,1548,1.218,1615,1.374,1616,5.066,1617,2.887,1618,1.374,1619,1.374,1620,2.743,1621,1.471,1622,4.214,1623,2.743,1624,1.93,1625,1.93,1626,2.743,1627,1.471,1628,2.227,1629,2.227,1630,3.053,1631,3.787,1632,2.227,1633,1.93,1634,3.523,1635,3.053,1636,3.523,1637,1.93,1638,1.734,1639,2.227,1640,2.227,1641,3.523,1642,2.227,1643,1.734,1644,2.227,1645,2.174,1646,1.93,1647,1.93,1648,1.93,1649,2.174,1650,1.93,1651,1.93,1652,2.174,1653,1.93,1654,1.93,1655,2.174,1656,1.93,1657,1.93,1658,2.174,1659,1.93,1660,1.93,1661,2.174,1662,1.93,1663,1.93,1664,2.174,1665,1.93,1666,1.93,1667,2.174,1668,1.93,1669,1.93,1670,2.174,1671,4.305,1672,3.053,1673,2.174,1674,1.93,1675,1.93,1676,2.042,1677,3.543,1678,2.512,1679,3.053,1680,2.174,1681,2.512,1682,2.042,1683,2.174,1684,2.174,1685,1.93,1686,1.93,1687,2.174,1688,3.494,1689,1.93,1690,1.93,1691,2.174,1692,2.174,1693,1.93,1694,1.93,1695,2.174,1696,1.93,1697,1.93,1698,2.042,1699,1.734,1700,1.93,1701,2.174,1702,1.588,1703,1.93,1704,2.227,1705,2.227,1706,2.227,1707,2.227,1708,1.588,1709,2.227,1710,2.227,1711,2.227,1712,2.227,1713,2.743,1714,2.227,1715,1.93,1716,2.227,1717,2.227,1718,5.823,1719,6.48,1720,1.471,1721,1.471,1722,1.471,1723,1.471,1724,1.471,1725,1.588,1726,1.588,1727,1.471,1728,2.227,1729,1.734,1730,2.227,1731,1.93,1732,2.227,1733,2.227,1734,1.93,1735,1.93,1736,2.227,1737,2.227,1738,2.227,1739,2.227,1740,3.053,1741,1.93,1742,1.93,1743,2.227,1744,2.227,1745,1.93,1746,1.93,1747,2.227,1748,3.523,1749,2.227,1750,2.227,1751,2.227,1752,2.227]],["title/interfaces/WvrDataComponent.html",[0,0.007,1753,3.458]],["body/interfaces/WvrDataComponent.html",[0,0.01,2,0.954,3,0.287,4,0.287,5,0.262,6,0.277,10,0.392,11,0.686,14,0.475,15,0.015,17,0.536,45,0.287,73,0.996,146,3.272,176,5.301,210,0.013,211,0.013,220,2.196,224,1.872,232,2.287,268,3.639,464,2.573,830,4.105,1583,4.726,1753,5.765,1754,5.498,1755,7.434,1756,7.434,1757,5.498,1758,5.498]],["title/interfaces/WvrDataSelect.html",[0,0.007,1759,3.458]],["body/interfaces/WvrDataSelect.html",[0,0.011,2,1.001,3,0.301,4,0.301,5,0.275,6,0.223,10,0.412,11,0.706,14,0.485,15,0.015,45,0.301,73,1.115,210,0.013,211,0.013,284,2.597,474,2.3,1759,5.933,1760,5.766,1761,5.766]],["title/interfaces/WvrElementDesc.html",[0,0.007,1643,3.108]],["body/interfaces/WvrElementDesc.html",[0,0.005,2,0.507,3,0.152,4,0.152,5,0.139,6,0.113,10,0.208,11,0.447,14,0.426,15,0.016,17,0.596,20,2.439,22,4.458,24,0.674,36,2.965,45,0.152,46,0.759,53,2.53,69,2.53,73,0.851,75,1.597,117,2.273,135,1.62,137,2.219,146,2.815,154,3.376,159,2.371,174,1.692,195,1.676,210,0.008,211,0.008,217,1.801,278,3.417,305,1.303,361,4.028,366,2.864,372,2.53,373,3.954,379,2.421,384,3.757,399,3.846,423,1.692,525,1.801,551,3.191,559,1.303,766,2.273,794,4.041,846,2.53,850,2.273,858,2.53,891,2.273,1240,2.53,1249,2.082,1250,2.864,1266,2.273,1267,3.757,1268,2.53,1278,2.53,1369,2.273,1602,3.191,1615,2.675,1637,2.53,1638,2.273,1643,4.028,1719,5.554,1729,4.991,1731,2.53,1734,3.757,1735,2.53,1740,3.757,1741,2.53,1742,2.53,1762,2.919,1763,4.336,1764,2.919,1765,4.336,1766,2.273,1767,2.919,1768,2.919,1769,2.919,1770,2.919,1771,2.919,1772,2.919,1773,5.172,1774,2.919,1775,2.919,1776,2.919,1777,2.919,1778,2.919,1779,2.919,1780,2.919,1781,2.919,1782,4.336,1783,2.919,1784,2.919,1785,2.919,1786,2.919,1787,4.336,1788,2.919,1789,2.919,1790,2.919,1791,2.919,1792,2.919,1793,2.919,1794,2.919,1795,2.919,1796,4.336,1797,2.919,1798,2.919,1799,2.919,1800,2.919,1801,2.53,1802,2.919,1803,2.919,1804,2.919,1805,2.919,1806,2.919,1807,2.919,1808,2.919,1809,2.919,1810,2.919,1811,3.757,1812,4.336,1813,4.336,1814,2.919,1815,4.336,1816,2.919,1817,2.919,1818,2.919,1819,2.082,1820,4.961,1821,2.919,1822,2.919,1823,2.919,1824,2.919,1825,2.919,1826,2.919,1827,2.919,1828,5.172,1829,2.919,1830,2.919,1831,2.919,1832,2.919,1833,2.919,1834,2.919,1835,2.919,1836,2.919,1837,2.919,1838,2.919,1839,2.919,1840,5.725,1841,2.919,1842,5.172,1843,4.336,1844,4.336,1845,2.919,1846,2.919,1847,2.53,1848,2.919,1849,2.919,1850,3.757,1851,2.919,1852,2.919,1853,2.919,1854,2.919,1855,2.919,1856,5.172,1857,2.919,1858,2.53,1859,2.919,1860,2.919,1861,2.919,1862,4.336,1863,2.919,1864,2.919,1865,2.919,1866,4.336,1867,2.919,1868,2.919,1869,4.336,1870,2.919]],["title/components/WvrManifestEntryComponent.html",[20,1.701,1676,2.313]],["body/components/WvrManifestEntryComponent.html",[3,0.16,4,0.16,5,0.146,6,0.277,7,4.154,10,0.218,11,0.463,14,0.459,15,0.015,17,0.571,19,2.181,20,2.87,23,4.156,24,0.707,28,2.181,33,2.769,34,2.021,35,2.382,36,4.087,37,4.087,38,1.584,43,3.2,44,3.2,45,0.16,46,0.795,47,1.773,49,2.324,99,1.584,120,1.673,125,2.235,137,0.895,161,2.003,210,0.009,211,0.009,216,2.372,219,1.481,220,2.058,223,1.543,224,1.983,228,0.895,229,1.473,230,0.531,232,1.052,278,2.021,284,2.013,370,1.504,379,2.1,386,3.613,399,2.602,409,2.769,431,1.888,474,2.414,525,3.28,543,2.372,603,3.28,624,1.913,955,1.504,974,3.613,977,2.965,992,1.888,1122,1.365,1474,1.673,1546,2.614,1548,1.673,1595,2.021,1596,1.773,1597,1.888,1600,2.181,1601,3.2,1602,1.888,1619,1.888,1645,1.888,1649,1.888,1652,1.888,1655,1.888,1658,1.888,1661,1.888,1664,1.888,1667,1.888,1670,1.888,1673,1.888,1676,3.394,1677,5.11,1678,5.11,1680,4.022,1681,2.181,1682,1.773,1683,1.888,1684,1.888,1687,1.888,1688,2.602,1691,1.888,1692,1.888,1695,1.888,1698,1.773,1701,1.888,1720,2.021,1721,2.021,1722,2.021,1723,2.021,1724,2.021,1725,2.181,1726,2.181,1727,2.021,1819,3.791,1871,2.181,1872,2.382,1873,2.651,1874,4.607,1875,5.075,1876,2.651,1877,4.607,1878,4.488,1879,3.059,1880,2.651,1881,2.651,1882,3.059,1883,3.059,1884,3.059,1885,3.059,1886,2.651,1887,3.889,1888,2.651,1889,2.651,1890,2.651,1891,2.651,1892,3.059,1893,2.382,1894,2.651,1895,4.56,1896,2.382,1897,6.054,1898,2.382]],["title/components/WvrMessageManifestEntryComponent.html",[20,1.701,1682,2.313]],["body/components/WvrMessageManifestEntryComponent.html",[3,0.142,4,0.142,5,0.13,6,0.269,7,4.037,10,0.194,11,0.424,14,0.444,15,0.015,17,0.539,19,1.942,20,2.763,23,4.001,24,0.629,28,1.942,33,2.54,34,1.799,35,2.121,36,4.037,37,4.037,38,1.411,43,2.935,44,2.935,45,0.142,46,0.708,47,1.579,49,2.132,99,1.411,120,1.49,125,2.128,137,0.797,161,1.837,176,2.935,210,0.008,211,0.008,216,2.65,219,1.359,220,1.359,223,1.415,224,1.923,228,0.797,229,1.485,230,0.473,232,0.936,278,1.799,284,2.147,366,2.719,370,1.339,379,1.926,386,3.412,399,2.386,409,2.54,431,1.681,474,2.398,543,2.65,559,1.837,603,3.062,621,4.234,624,3.406,626,2.54,694,4.624,696,2.719,822,3.567,955,1.339,974,3.412,977,2.719,992,1.681,1122,1.215,1369,3.205,1474,1.49,1546,2.44,1548,1.49,1595,1.799,1596,1.579,1597,1.681,1600,1.942,1601,2.935,1602,1.681,1619,1.681,1645,1.681,1649,1.681,1652,1.681,1655,1.681,1658,1.681,1661,1.681,1664,1.681,1667,1.681,1670,1.681,1673,1.681,1676,1.579,1677,4.967,1678,4.967,1680,1.681,1681,1.942,1682,3.62,1683,3.853,1684,1.681,1687,1.681,1688,2.386,1691,1.681,1692,1.681,1695,1.681,1698,1.579,1701,1.681,1720,1.799,1721,1.799,1722,1.799,1723,1.799,1724,1.799,1725,1.942,1726,1.942,1727,1.799,1819,3.538,1850,3.567,1871,1.942,1872,2.121,1873,2.36,1874,4.3,1875,4.792,1876,2.36,1877,4.3,1880,2.36,1881,2.36,1886,2.36,1887,3.567,1888,2.36,1889,2.36,1890,2.36,1891,2.36,1893,2.121,1894,2.36,1895,4.306,1896,2.121,1897,5.965,1898,2.121,1899,4.116,1900,4.116,1901,4.116,1902,2.724,1903,2.724,1904,4.116,1905,2.724,1906,3.567,1907,2.724,1908,3.567,1909,2.724,1910,3.567,1911,2.724]],["title/modules/WvrSharedModule.html",[1615,2.462,1912,2.846]],["body/modules/WvrSharedModule.html",[3,0.117,4,0.117,5,0.107,6,0.087,8,1.743,15,0.016,17,0.752,24,0.517,37,3.875,45,0.229,46,0.582,47,3.902,64,1.596,71,1.596,99,1.831,137,1.283,159,1.224,210,0.007,211,0.007,379,1.047,428,4.8,474,1.517,624,2.311,1236,4.8,1546,2.156,1583,1.478,1596,3.902,1615,1.381,1617,2.896,1618,1.381,1619,1.381,1620,3.414,1621,2.336,1622,2.754,1623,3.414,1626,2.754,1627,1.478,1630,3.064,1631,3.799,1633,1.939,1635,3.064,1645,4.153,1646,1.939,1647,1.939,1648,1.939,1649,4.153,1650,1.939,1651,1.939,1652,4.153,1653,1.939,1654,1.939,1655,4.153,1656,1.939,1657,1.939,1658,4.153,1659,1.939,1660,1.939,1661,4.153,1662,1.939,1663,1.939,1664,4.153,1665,1.939,1666,1.939,1667,4.153,1668,1.939,1669,1.939,1670,4.153,1671,4.317,1672,3.064,1673,4.153,1674,1.939,1675,1.939,1676,3.902,1677,3.552,1678,2.522,1679,3.064,1680,4.153,1681,2.522,1682,3.902,1683,4.153,1684,4.153,1685,1.939,1686,1.939,1687,4.153,1688,3.144,1689,1.939,1690,1.939,1691,4.153,1692,4.153,1693,1.939,1694,1.939,1695,4.153,1696,1.939,1697,1.939,1698,3.902,1699,1.743,1700,1.939,1701,4.153,1702,1.596,1703,1.939,1708,1.596,1715,1.939,1745,1.939,1746,1.939,1912,5.803,1913,1.939,1914,1.939,1915,1.939,1916,2.238,1917,3.536,1918,3.536,1919,3.536,1920,1.939,1921,3.536,1922,3.536,1923,1.939,1924,3.536,1925,1.939,1926,1.743,1927,2.238,1928,2.238,1929,2.238,1930,2.238,1931,2.238,1932,4.384,1933,4.384]],["title/components/WvrThemeComponent.html",[20,1.701,1698,2.313]],["body/components/WvrThemeComponent.html",[3,0.161,4,0.161,5,0.147,6,0.268,7,4.012,10,0.22,11,0.465,14,0.449,15,0.015,17,0.637,19,2.196,20,2.784,23,3.625,24,0.711,25,3.908,30,2.196,33,1.9,36,4.089,37,4.068,38,1.595,43,3.216,44,3.216,45,0.161,46,0.801,47,1.785,49,2.336,73,0.909,75,2.467,78,2.398,83,1.759,84,4.155,99,1.595,116,3.525,120,1.684,125,2.241,133,2.668,146,1.514,161,2.381,179,2.497,180,2.381,210,0.009,211,0.009,219,1.939,220,1.489,223,1.059,224,1.899,228,1.562,229,1.569,230,0.926,232,1.551,284,1.551,304,1.151,320,1.684,370,2.889,379,2.111,399,2.614,409,2.783,431,1.9,445,2.196,446,3.573,462,1.016,468,1.684,474,1.789,624,1.922,763,1.9,955,1.514,992,1.9,1122,1.374,1361,3.525,1367,2.668,1474,1.684,1478,4.574,1546,2.624,1548,1.684,1595,2.034,1596,1.785,1597,1.9,1600,2.196,1601,3.216,1602,2.783,1619,1.9,1645,1.9,1649,1.9,1652,1.9,1655,1.9,1658,1.9,1661,1.9,1664,1.9,1667,1.9,1670,1.9,1673,1.9,1676,1.785,1680,1.9,1682,1.785,1683,1.9,1684,1.9,1687,1.9,1688,2.614,1691,1.9,1692,1.9,1695,1.9,1698,3.405,1699,5.39,1701,1.9,1720,2.034,1721,2.034,1722,2.034,1723,2.034,1724,2.034,1725,2.196,1726,2.196,1727,2.034,1871,2.196,1872,2.398,1893,4.574,1895,4.574,1896,2.398,1897,6.058,1898,2.398,1934,3.079,1935,5.336,1936,5.336,1937,4.51,1938,4.51,1939,3.079,1940,3.079,1941,3.079,1942,4.51,1943,4.51,1944,5.874,1945,3.079,1946,3.079,1947,3.079,1948,3.079,1949,3.079,1950,5.336,1951,3.079,1952,5.336,1953,3.079,1954,3.079,1955,3.079]],["title/interfaces/WvrThemeableComponent.html",[0,0.007,1405,3.108]],["body/interfaces/WvrThemeableComponent.html",[0,0.009,2,0.837,3,0.252,4,0.252,5,0.23,6,0.237,10,0.344,11,0.632,14,0.512,15,0.015,17,0.598,24,1.114,38,2.498,45,0.32,73,1.072,83,2.631,88,3.439,135,2.521,147,6.151,161,2.737,210,0.012,211,0.012,219,2.025,220,2.025,224,1.357,228,1.412,229,1.028,230,0.837,231,2.796,232,1.658,268,3.355,304,1.802,974,4.38,977,4.69,1239,5.528,1244,6.151,1249,3.439,1250,3.186,1405,4.776,1465,4.18,1473,3.756,1474,2.638,1490,3.756,1546,2.372,1547,3.439,1548,2.638,1557,3.439,1583,4.052,1956,4.18,1957,7.099,1958,6.134,1959,6.134,1960,4.823]],["title/interfaces/WvrWysiwygMenu.html",[0,0.007,1961,3.458]],["body/interfaces/WvrWysiwygMenu.html",[0,0.009,2,0.856,3,0.258,4,0.258,5,0.351,6,0.191,7,2.86,10,0.352,11,0.641,14,0.514,15,0.015,17,0.481,37,2.555,45,0.258,154,5.574,210,0.012,211,0.012,230,1.366,1122,2.777,1557,5.104,1702,3.518,1961,5.393,1962,4.276,1963,7.158,1964,7.158,1965,7.158,1966,7.158,1967,7.158,1968,6.379,1969,3.842,1970,4.276]],["title/interfaces/WvrwysiwygSubMenu.html",[0,0.007,1968,3.108]],["body/interfaces/WvrwysiwygSubMenu.html",[0,0.011,2,1.006,3,0.303,4,0.303,5,0.276,6,0.224,7,3.359,10,0.414,11,0.708,14,0.456,15,0.015,45,0.303,73,1.09,210,0.013,211,0.013,1122,2.586,1702,4.132,1962,5.022,1968,5.347,1969,4.512,1971,6.556,1972,6.556]],["title/interfaces/Wysiwyg.html",[0,0.007,1122,1.781]],["body/interfaces/Wysiwyg.html",[0,0.011,2,0.994,3,0.299,4,0.299,5,0.273,6,0.221,10,0.409,11,0.703,14,0.484,15,0.015,45,0.299,73,1.114,159,4.121,210,0.013,211,0.013,326,3.526,1122,3.042,1387,6.53,1973,5.724]],["title/injectables/WysiwygEffects.html",[212,0.886,1713,3.108]],["body/injectables/WysiwygEffects.html",[3,0.317,4,0.317,5,0.289,6,0.235,15,0.015,17,0.593,24,1.404,45,0.317,46,1.58,210,0.013,211,0.013,212,1.567,213,2.371,1713,5.499,1974,6.079]],["title/changelog.html",[1975,2.212,1976,2.212,1977,2.901]],["body/changelog.html",[10,0.117,12,0.731,15,0.01,20,3.127,23,1.011,36,0.848,37,3.546,38,2.874,52,0.949,55,1.276,56,1.419,65,1.419,71,1.956,76,1.419,82,1.276,86,1.276,92,1.419,93,1.584,99,2.386,105,1.419,108,1.419,116,1.082,117,2.136,119,1.419,120,1.5,146,0.805,159,2.52,182,1.224,189,1.956,200,0.896,210,0.005,211,0.005,223,0.563,229,0.349,242,2.136,244,1.419,263,1.168,273,2.136,274,1.419,284,0.563,303,1.419,304,0.612,305,0.731,306,0.639,366,1.082,370,2.035,373,4.839,374,3.066,377,2.377,379,3.58,388,2.136,399,2.051,406,1.419,425,2.755,429,1.168,432,1.276,438,1.082,446,2.263,474,1.612,477,1.812,479,1.082,482,1.419,512,1.42,525,1.692,541,1.011,559,0.731,583,1.082,590,1.011,624,0.698,626,2.842,689,1.956,690,1.082,696,3.496,750,1.168,794,1.082,800,1.276,803,1.419,830,1.011,847,2.136,852,1.419,866,1.419,871,1.419,885,1.419,887,3.586,940,1.276,955,2.45,957,2.136,964,2.136,965,2.136,990,1.419,992,3.265,1115,1.419,1122,1.579,1218,1.419,1219,1.276,1239,2.136,1269,2.136,1273,2.136,1357,1.419,1467,1.168,1468,1.419,1474,0.896,1478,2.136,1519,3.586,1546,2.837,1547,1.168,1548,1.5,1576,1.419,1579,1.419,1582,1.419,1597,1.011,1602,2.183,1618,1.692,1621,1.082,1627,1.082,1688,2.051,1708,1.168,1718,2.136,1720,3.496,1721,1.082,1722,2.734,1723,2.337,1724,2.337,1727,3.043,1766,1.276,1801,4.586,1811,2.377,1819,1.168,1820,1.419,1847,3.586,1858,1.419,1871,1.168,1908,1.419,1926,2.136,1970,3.066,1971,2.377,1972,1.419,1977,1.419,1978,2.377,1979,1.419,1980,3.538,1981,2.743,1982,1.638,1983,7.266,1984,1.638,1985,1.638,1986,4.607,1987,3.586,1988,4.999,1989,3.066,1990,1.638,1991,2.743,1992,1.638,1993,1.638,1994,1.638,1995,1.638,1996,1.638,1997,1.638,1998,1.638,1999,1.638,2000,1.638,2001,1.638,2002,1.638,2003,1.638,2004,5.292,2005,1.638,2006,3.992,2007,1.638,2008,1.638,2009,1.638,2010,1.638,2011,4.607,2012,1.638,2013,1.419,2014,1.638,2015,1.638,2016,1.638,2017,2.743,2018,1.419,2019,3.538,2020,1.638,2021,1.638,2022,1.638,2023,1.638,2024,1.638,2025,1.638,2026,1.638,2027,1.638,2028,1.638,2029,1.638,2030,2.377,2031,3.538,2032,1.638,2033,1.638,2034,2.743,2035,1.419,2036,1.638,2037,1.638,2038,1.638,2039,2.743,2040,2.377,2041,1.638,2042,4.983,2043,1.638,2044,1.638,2045,2.743,2046,1.638,2047,1.638,2048,1.638,2049,1.638,2050,2.743,2051,4.607,2052,4.607,2053,1.638,2054,1.419,2055,2.743,2056,1.638,2057,2.377,2058,2.377,2059,1.419,2060,1.638,2061,1.638,2062,1.638,2063,4.983,2064,1.638,2065,1.638,2066,1.638,2067,1.419,2068,1.638,2069,1.638,2070,1.638,2071,1.638,2072,1.638,2073,4.607,2074,1.638,2075,2.743,2076,1.638,2077,1.638,2078,1.419,2079,1.638,2080,4.138,2081,3.066,2082,1.638,2083,1.638,2084,1.638,2085,1.638,2086,3.587,2087,1.638,2088,1.638,2089,1.638,2090,3.538,2091,3.538,2092,1.638,2093,2.743,2094,1.638,2095,1.168,2096,1.638,2097,1.638,2098,3.538,2099,2.743,2100,1.638,2101,2.743,2102,2.743,2103,1.638,2104,1.638,2105,1.638,2106,1.638,2107,1.638,2108,1.638,2109,4.983,2110,1.638,2111,1.638,2112,1.638,2113,2.743,2114,1.638,2115,1.638,2116,2.743,2117,1.638,2118,1.638,2119,1.638,2120,2.743,2121,1.638,2122,1.638,2123,1.638,2124,1.638,2125,1.419,2126,1.638,2127,1.638,2128,3.992,2129,1.638,2130,1.638,2131,1.638,2132,3.538,2133,2.743,2134,2.743,2135,1.638,2136,5.633,2137,1.638,2138,1.638,2139,2.743,2140,1.638,2141,1.638,2142,1.638,2143,3.538,2144,4.607,2145,1.638,2146,1.638,2147,1.638,2148,1.638,2149,1.638,2150,1.638,2151,1.419,2152,1.638,2153,1.638,2154,1.638,2155,1.638,2156,1.638,2157,1.638,2158,3.538,2159,1.638,2160,1.638,2161,1.638,2162,3.538,2163,2.743,2164,2.743,2165,2.743,2166,1.638,2167,1.638,2168,1.638,2169,1.638,2170,1.638,2171,1.638,2172,1.638,2173,1.638,2174,3.538,2175,2.743,2176,3.586,2177,4.138,2178,3.538,2179,1.638,2180,2.743,2181,2.743,2182,2.377,2183,2.743,2184,2.743,2185,1.638,2186,1.638,2187,1.638,2188,4.138,2189,1.638,2190,1.638,2191,1.638,2192,1.638,2193,1.638,2194,1.638,2195,1.638,2196,2.743,2197,1.638,2198,1.638,2199,1.638,2200,1.638,2201,3.538,2202,1.638,2203,1.638,2204,1.638,2205,1.638,2206,1.638,2207,1.638,2208,1.638,2209,3.538,2210,1.638,2211,1.638,2212,1.638,2213,2.743,2214,1.638,2215,1.638,2216,1.638,2217,2.743,2218,1.638,2219,1.638,2220,1.638,2221,1.638,2222,3.992,2223,1.638,2224,1.638,2225,3.538,2226,1.419,2227,1.638,2228,1.638,2229,1.638,2230,1.638,2231,1.638,2232,1.638,2233,1.638,2234,1.638,2235,1.638,2236,1.638,2237,1.638,2238,1.638,2239,1.638,2240,1.638,2241,1.638,2242,1.638,2243,1.638,2244,6.691,2245,1.638,2246,1.638,2247,1.638,2248,1.638,2249,1.638,2250,1.638,2251,1.638,2252,1.638,2253,1.638,2254,1.638,2255,1.638,2256,1.638,2257,1.638,2258,3.538,2259,1.638,2260,2.377,2261,2.743,2262,1.638,2263,1.638,2264,2.377,2265,1.638,2266,1.638,2267,1.638,2268,1.638,2269,1.638,2270,1.638,2271,1.638,2272,1.638,2273,1.638,2274,2.743,2275,1.638,2276,1.638,2277,1.638,2278,1.638,2279,1.638,2280,1.638,2281,2.743,2282,1.638,2283,1.638,2284,1.638,2285,1.638,2286,2.743,2287,1.419,2288,1.638,2289,2.743,2290,1.638,2291,1.419,2292,1.638,2293,1.638,2294,1.638,2295,1.638,2296,1.638,2297,1.638,2298,1.638,2299,1.419,2300,1.419,2301,1.638,2302,1.638,2303,1.638,2304,1.638,2305,1.638,2306,1.638,2307,1.638,2308,1.638,2309,1.638,2310,1.638,2311,2.743,2312,1.638,2313,1.638,2314,1.638,2315,2.743,2316,1.638,2317,2.743,2318,1.638,2319,1.638,2320,2.743,2321,1.638,2322,1.638,2323,1.419,2324,1.638,2325,1.638,2326,1.638,2327,1.638,2328,1.638,2329,1.638,2330,1.638,2331,1.638,2332,1.638,2333,1.419,2334,2.743,2335,1.638,2336,2.743,2337,1.638,2338,1.638,2339,1.638,2340,1.638,2341,1.638,2342,1.638,2343,1.638,2344,1.638,2345,2.743,2346,1.638,2347,1.638,2348,1.638,2349,1.638,2350,1.638,2351,1.638,2352,1.638,2353,1.638,2354,1.638,2355,1.638,2356,1.638,2357,1.638,2358,1.638,2359,1.638,2360,1.638,2361,1.638,2362,1.638,2363,1.638,2364,1.638,2365,1.419,2366,1.638,2367,1.638,2368,1.638,2369,1.638,2370,1.638,2371,1.638,2372,1.638,2373,1.638,2374,1.419,2375,1.638,2376,1.638,2377,1.638,2378,1.638,2379,1.638,2380,1.638,2381,1.638,2382,1.638,2383,1.638,2384,2.743,2385,1.638,2386,1.638,2387,1.638,2388,1.638,2389,1.638,2390,1.638,2391,1.638,2392,1.638,2393,1.638,2394,1.638,2395,1.638,2396,1.638,2397,1.638,2398,1.638,2399,1.419,2400,1.419,2401,1.638,2402,1.638,2403,1.638,2404,1.638,2405,1.638,2406,1.638,2407,1.638,2408,1.638,2409,1.638,2410,1.638,2411,1.638]],["title/contributing.html",[1975,2.212,1976,2.212,2412,3.348]],["body/contributing.html",[15,0.014,210,0.014,211,0.014]],["title/dependencies.html",[1618,2.956,2095,2.387]],["body/dependencies.html",[15,0.016,210,0.013,211,0.013,311,4.832,460,3.05,462,1.84,610,3.232,708,3.684,857,4.832,879,4.832,1249,3.976,1250,3.684,1618,3.44,1621,4.433,1638,4.342,1708,3.976,1766,4.342,1920,4.832,1923,4.832,1925,4.832,1926,4.342,2013,4.832,2291,4.832,2413,7.642,2414,5.576,2415,5.576,2416,7.198,2417,5.576,2418,5.576,2419,5.576,2420,5.576,2421,5.576,2422,5.576,2423,5.576]],["title/miscellaneous/enumerations.html",[2424,2.066,2425,4.152]],["body/miscellaneous/enumerations.html",[6,0.258,10,0.393,15,0.015,20,2.348,52,3.194,78,4.291,83,3.055,210,0.013,211,0.013,608,2.854,609,2.459,627,5.188,702,5.188,711,5.773,712,5.188,713,5.773,714,5.188,1546,3.276,1688,3.194,1718,4.291,2081,5.773,2300,4.775,2424,3.4,2425,4.775,2426,6.662,2427,5.511,2428,4.291,2429,5.511,2430,5.511,2431,5.511,2432,5.511,2433,5.511,2434,5.511,2435,6.662,2436,6.662]],["title/miscellaneous/functions.html",[717,3.165,2424,2.066]],["body/miscellaneous/functions.html",[6,0.279,10,0.325,12,3.397,14,0.506,15,0.015,52,2.639,73,0.967,83,1.776,93,2.032,184,1.94,210,0.011,211,0.011,228,2.229,229,1.624,230,1.322,232,2.537,263,3.247,276,3.905,304,1.702,474,2.116,571,4.589,608,2.358,609,2.032,617,3.426,690,3.008,702,5.111,717,3.008,718,4.603,792,4.603,955,3.228,1122,2.929,1165,4.027,1227,4.603,1233,4.603,1263,4.603,1264,3.946,1269,4.603,1270,3.946,1271,3.946,1272,3.946,1273,3.546,1274,3.946,1275,3.946,1276,3.946,1277,3.946,1291,3.946,1292,3.946,1301,5.122,1302,5.122,1306,3.946,1339,3.946,1342,3.946,1379,3.946,1382,3.946,2151,3.946,2424,2.809,2428,4.603,2437,5.911,2438,5.911,2439,4.553,2440,4.553]],["title/index.html",[10,0.239,1975,2.212,1976,2.212]],["body/index.html",[5,0.306,15,0.011,52,2.184,201,5.577,210,0.01,211,0.01,236,2.696,373,4.712,379,3.269,388,2.934,399,3.73,409,4.31,541,2.325,689,2.687,692,3.265,696,2.489,763,2.325,828,3.265,847,5.011,850,2.934,851,5.853,940,5.259,1442,3.265,1729,4.646,1906,4.512,1910,3.265,1969,2.934,1987,5.853,1988,5.853,1989,4.512,2035,4.512,2040,3.265,2057,4.512,2058,6.053,2059,3.265,2067,4.512,2078,5.17,2086,5.575,2095,4.254,2125,5.17,2128,3.265,2176,3.265,2222,3.265,2226,4.512,2264,4.512,2287,6.497,2299,5.577,2323,3.265,2333,4.512,2374,6.053,2400,4.512,2441,3.768,2442,3.768,2443,5.207,2444,5.207,2445,3.768,2446,3.768,2447,5.207,2448,5.207,2449,3.768,2450,5.207,2451,5.966,2452,3.768,2453,3.768,2454,3.768,2455,3.768,2456,3.768,2457,5.207,2458,3.768,2459,3.768,2460,7.159,2461,3.768,2462,3.768,2463,3.265,2464,5.207,2465,3.768,2466,3.768,2467,6.204,2468,6.754,2469,6.754,2470,3.768,2471,3.768,2472,6.754,2473,5.966,2474,5.207,2475,3.768,2476,3.768,2477,3.768,2478,5.207,2479,3.768,2480,3.768,2481,6.435,2482,3.768,2483,5.207,2484,5.207,2485,3.768,2486,3.768,2487,3.768,2488,3.768,2489,3.768,2490,3.768,2491,3.768,2492,3.768,2493,3.768,2494,3.768,2495,3.768,2496,3.768,2497,3.768,2498,3.768,2499,3.768,2500,3.768,2501,3.768,2502,3.768,2503,3.768,2504,3.265,2505,3.768,2506,3.768,2507,3.768,2508,3.768,2509,3.768,2510,3.768]],["title/license.html",[1975,2.212,1976,2.212,2511,2.607]],["body/license.html",[12,2.263,15,0.012,210,0.012,211,0.012,302,4.395,620,3.95,696,4.183,870,3.95,970,3.95,1219,5.375,1627,3.351,2054,4.395,2086,3.95,2365,4.395,2399,4.395,2467,4.395,2504,4.395,2511,3.95,2512,4.395,2513,6.903,2514,5.072,2515,5.072,2516,5.072,2517,5.072,2518,6.332,2519,5.072,2520,5.072,2521,5.072,2522,5.072,2523,5.072,2524,5.072,2525,6.332,2526,7.847,2527,5.072,2528,5.072,2529,6.332,2530,5.072,2531,5.072,2532,5.072,2533,5.072,2534,5.072,2535,5.072,2536,5.072,2537,5.072,2538,5.072,2539,6.332,2540,5.072,2541,5.072,2542,5.072,2543,5.072,2544,5.072,2545,6.332,2546,6.332,2547,5.072,2548,5.072,2549,5.072,2550,5.072,2551,5.072,2552,5.072,2553,5.072,2554,5.072,2555,5.072,2556,5.072,2557,5.072,2558,5.072,2559,5.072,2560,5.072,2561,5.072,2562,5.072,2563,5.072,2564,5.072,2565,5.072,2566,5.072,2567,5.072,2568,5.072,2569,5.072,2570,5.072,2571,5.072,2572,5.072]],["title/modules.html",[1617,3.578]],["body/modules.html",[15,0.014,210,0.014,211,0.014,1250,4.714,1616,4.414,1617,4.089,1912,4.414,2030,6.184,2136,6.184,2573,7.136]],["title/overview.html",[2574,4.693]],["body/overview.html",[2,0.559,15,0.016,26,3.615,47,3.966,64,2.294,189,3.902,210,0.009,211,0.009,213,1.255,239,3.902,379,1.506,386,3.376,428,4.879,429,2.294,961,3.615,1236,4.879,1392,3.615,1596,3.966,1597,1.985,1615,1.985,1616,5.293,1617,2.126,1618,1.985,1619,1.985,1620,2.506,1621,2.126,1622,2.506,1623,2.506,1624,2.788,1625,2.788,1626,3.626,1627,2.126,1645,4.222,1649,4.222,1652,4.222,1655,4.222,1658,4.222,1661,4.222,1664,4.222,1667,4.222,1670,4.222,1673,4.222,1676,3.966,1680,4.222,1682,3.966,1683,4.222,1684,4.222,1687,4.222,1691,4.222,1692,4.222,1695,4.222,1698,3.966,1701,4.222,1912,5.882,1913,2.788,1914,2.788,1915,2.788,2006,2.788,2260,2.788,2574,2.788,2575,3.218]],["title/properties.html",[11,0.494,2095,2.387]],["body/properties.html",[11,0.636,15,0.015,210,0.014,211,0.014,1978,5.35,1979,5.35,2018,5.35,2463,5.35,2511,4.808,2512,5.35,2576,6.174,2577,6.174]],["title/todo.html",[537,2.387,1975,2.212,1976,2.212]],["body/todo.html",[15,0.014,210,0.014,211,0.014]],["title/miscellaneous/typealiases.html",[2424,2.066,2578,4.791]],["body/miscellaneous/typealiases.html",[6,0.302,10,0.335,14,0.312,15,0.015,29,5.227,38,2.433,88,3.35,182,3.376,184,2.57,210,0.011,211,0.011,304,1.756,306,2.989,373,2.899,450,4.301,474,1.837,543,2.096,558,4.301,561,4.697,567,3.985,579,3.35,581,3.35,583,3.104,585,3.104,588,3.659,589,5.474,605,5.227,608,3.641,609,3.137,610,4.075,611,4.697,622,4.301,623,4.301,919,4.071,981,4.071,982,4.071,1467,4.301,1473,4.697,1474,2.57,1490,3.659,1546,2.31,1547,3.35,1548,2.57,1557,3.35,1566,3.659,1583,3.104,1956,5.227,2182,4.071,2424,2.899,2428,5.474,2579,4.698,2580,6.662,2581,4.698,2582,4.698,2583,6.032,2584,4.698,2585,6.032,2586,4.698,2587,6.032,2588,4.698,2589,4.698,2590,4.698,2591,4.698,2592,4.698]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"interfaces/Layout.html":{},"injectables/LayoutEffects.html":{},"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/Modal.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"pipes/SafePipe.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrDataSelect.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{},"injectables/WysiwygEffects.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":891,"title":{},"body":{"injectables/MessageService.html":{},"injectables/ThemeService.html":{},"interfaces/WvrElementDesc.html":{}}}],["0.0.5",{"_index":2398,"title":{},"body":{"changelog.html":{}}}],["0.1165",{"_index":1508,"title":{},"body":{"injectables/ThemeService.html":{}}}],["0.1415",{"_index":1512,"title":{},"body":{"injectables/ThemeService.html":{}}}],["0.17",{"_index":1516,"title":{},"body":{"injectables/ThemeService.html":{}}}],["02",{"_index":2005,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2235,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":2175,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2201,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":2174,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2359,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1980,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1856,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["1",{"_index":410,"title":{"interfaces/State-1.html":{}},"body":{"injectables/ComponentRegistryService.html":{}}}],["1.0.0",{"_index":1991,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":2371,"title":{},"body":{"changelog.html":{}}}],["1.10.0",{"_index":2216,"title":{},"body":{"changelog.html":{}}}],["1.11.0",{"_index":2202,"title":{},"body":{"changelog.html":{}}}],["1.11.1",{"_index":2200,"title":{},"body":{"changelog.html":{}}}],["1.12.0",{"_index":2173,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":2358,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":2340,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":2330,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":2310,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":2280,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":2422,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":2265,"title":{},"body":{"changelog.html":{}}}],["1.7.1",{"_index":2262,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["1.7.3",{"_index":2257,"title":{},"body":{"changelog.html":{}}}],["1.7.4",{"_index":2255,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":2242,"title":{},"body":{"changelog.html":{}}}],["1.9.0",{"_index":2234,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":425,"title":{},"body":{"injectables/ComponentRegistryService.html":{},"injectables/ThemeService.html":{},"changelog.html":{}}}],["10.0.0",{"_index":2415,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":2410,"title":{},"body":{"changelog.html":{}}}],["102",{"_index":2288,"title":{},"body":{"changelog.html":{}}}],["103",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["105",{"_index":2394,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":2011,"title":{},"body":{"changelog.html":{}}}],["116",{"_index":2395,"title":{},"body":{"changelog.html":{}}}],["119",{"_index":2388,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":2004,"title":{},"body":{"changelog.html":{}}}],["12.2.16",{"_index":1985,"title":{},"body":{"changelog.html":{}}}],["12.2.17",{"_index":2413,"title":{},"body":{"dependencies.html":{}}}],["12.5.1",{"_index":2416,"title":{},"body":{"dependencies.html":{}}}],["125",{"_index":2397,"title":{},"body":{"changelog.html":{}}}],["128",{"_index":2346,"title":{},"body":{"changelog.html":{}}}],["129",{"_index":2367,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1981,"title":{},"body":{"changelog.html":{}}}],["133",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["135",{"_index":2377,"title":{},"body":{"changelog.html":{}}}],["136",{"_index":2383,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":2260,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["15",{"_index":1519,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["150",{"_index":2370,"title":{},"body":{"changelog.html":{}}}],["158",{"_index":2248,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2019,"title":{},"body":{"changelog.html":{}}}],["163",{"_index":2350,"title":{},"body":{"changelog.html":{}}}],["164",{"_index":2351,"title":{},"body":{"changelog.html":{}}}],["165",{"_index":2352,"title":{},"body":{"changelog.html":{}}}],["167",{"_index":2354,"title":{},"body":{"changelog.html":{}}}],["168",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":2243,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":2045,"title":{},"body":{"changelog.html":{}}}],["195",{"_index":2314,"title":{},"body":{"changelog.html":{}}}],["199",{"_index":2339,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":189,"title":{"interfaces/State-2.html":{}},"body":{"interfaces/ActionAndProps.html":{},"changelog.html":{},"overview.html":{}}}],["2.0.0",{"_index":2107,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":2055,"title":{},"body":{"changelog.html":{}}}],["2.0.2",{"_index":2044,"title":{},"body":{"changelog.html":{}}}],["2.0.3",{"_index":2021,"title":{},"body":{"changelog.html":{}}}],["2.0.4",{"_index":2010,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":1978,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["20",{"_index":2244,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":2399,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["206",{"_index":2321,"title":{},"body":{"changelog.html":{}}}],["207",{"_index":2322,"title":{},"body":{"changelog.html":{}}}],["208",{"_index":2325,"title":{},"body":{"changelog.html":{}}}],["209",{"_index":2328,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2109,"title":{},"body":{"changelog.html":{}}}],["210",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2006,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["223",{"_index":2290,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2217,"title":{},"body":{"changelog.html":{}}}],["232",{"_index":2295,"title":{},"body":{"changelog.html":{}}}],["233",{"_index":2301,"title":{},"body":{"changelog.html":{}}}],["234",{"_index":2303,"title":{},"body":{"changelog.html":{}}}],["236",{"_index":2111,"title":{},"body":{"changelog.html":{}}}],["237",{"_index":2306,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":1982,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2372,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["256",{"_index":2268,"title":{},"body":{"changelog.html":{}}}],["257",{"_index":2271,"title":{},"body":{"changelog.html":{}}}],["260",{"_index":2272,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":2276,"title":{},"body":{"changelog.html":{}}}],["263",{"_index":2278,"title":{},"body":{"changelog.html":{}}}],["264",{"_index":2279,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["276",{"_index":2254,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":2108,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1348,"title":{"interfaces/State-3.html":{}},"body":{}}],["3.0.0",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["300",{"_index":1276,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["306",{"_index":2096,"title":{},"body":{"changelog.html":{}}}],["308",{"_index":2115,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":2236,"title":{},"body":{"changelog.html":{}}}],["314",{"_index":2237,"title":{},"body":{"changelog.html":{}}}],["315",{"_index":2238,"title":{},"body":{"changelog.html":{}}}],["319",{"_index":2240,"title":{},"body":{"changelog.html":{}}}],["322",{"_index":2241,"title":{},"body":{"changelog.html":{}}}],["328",{"_index":2205,"title":{},"body":{"changelog.html":{}}}],["329",{"_index":2219,"title":{},"body":{"changelog.html":{}}}],["330",{"_index":2223,"title":{},"body":{"changelog.html":{}}}],["333",{"_index":2179,"title":{},"body":{"changelog.html":{}}}],["334",{"_index":2227,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":2575,"title":{},"body":{"overview.html":{}}}],["341",{"_index":2229,"title":{},"body":{"changelog.html":{}}}],["342",{"_index":2230,"title":{},"body":{"changelog.html":{}}}],["344",{"_index":2233,"title":{},"body":{"changelog.html":{}}}],["346",{"_index":2208,"title":{},"body":{"changelog.html":{}}}],["347",{"_index":2211,"title":{},"body":{"changelog.html":{}}}],["348",{"_index":2163,"title":{},"body":{"changelog.html":{}}}],["350",{"_index":2212,"title":{},"body":{"changelog.html":{}}}],["356",{"_index":2215,"title":{},"body":{"changelog.html":{}}}],["363",{"_index":2184,"title":{},"body":{"changelog.html":{}}}],["364",{"_index":2185,"title":{},"body":{"changelog.html":{}}}],["365",{"_index":2187,"title":{},"body":{"changelog.html":{}}}],["379",{"_index":2189,"title":{},"body":{"changelog.html":{}}}],["380",{"_index":2190,"title":{},"body":{"changelog.html":{}}}],["381",{"_index":2193,"title":{},"body":{"changelog.html":{}}}],["382",{"_index":2194,"title":{},"body":{"changelog.html":{}}}],["387",{"_index":2118,"title":{},"body":{"changelog.html":{}}}],["388",{"_index":2195,"title":{},"body":{"changelog.html":{}}}],["390",{"_index":2198,"title":{},"body":{"changelog.html":{}}}],["398",{"_index":2199,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1357,"title":{"interfaces/State-4.html":{}},"body":{"changelog.html":{}}}],["4.2.3",{"_index":1999,"title":{},"body":{"changelog.html":{}}}],["4.2.4",{"_index":2419,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":2420,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":2421,"title":{},"body":{"dependencies.html":{}}}],["405",{"_index":2123,"title":{},"body":{"changelog.html":{}}}],["407",{"_index":2170,"title":{},"body":{"changelog.html":{}}}],["408",{"_index":2127,"title":{},"body":{"changelog.html":{}}}],["410",{"_index":2129,"title":{},"body":{"changelog.html":{}}}],["414",{"_index":2130,"title":{},"body":{"changelog.html":{}}}],["417",{"_index":2135,"title":{},"body":{"changelog.html":{}}}],["421",{"_index":2138,"title":{},"body":{"changelog.html":{}}}],["425",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["428",{"_index":2146,"title":{},"body":{"changelog.html":{}}}],["430",{"_index":2152,"title":{},"body":{"changelog.html":{}}}],["438",{"_index":2157,"title":{},"body":{"changelog.html":{}}}],["439",{"_index":2165,"title":{},"body":{"changelog.html":{}}}],["442",{"_index":2161,"title":{},"body":{"changelog.html":{}}}],["445",{"_index":2172,"title":{},"body":{"changelog.html":{}}}],["451",{"_index":2168,"title":{},"body":{"changelog.html":{}}}],["472",{"_index":2062,"title":{},"body":{"changelog.html":{}}}],["474",{"_index":2070,"title":{},"body":{"changelog.html":{}}}],["479",{"_index":2074,"title":{},"body":{"changelog.html":{}}}],["482",{"_index":2084,"title":{},"body":{"changelog.html":{}}}],["483",{"_index":2077,"title":{},"body":{"changelog.html":{}}}],["484",{"_index":2088,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1378,"title":{"interfaces/State-5.html":{}},"body":{"injectables/ThemeService.html":{}}}],["502",{"_index":2033,"title":{},"body":{"changelog.html":{}}}],["503",{"_index":2028,"title":{},"body":{"changelog.html":{}}}],["504",{"_index":2025,"title":{},"body":{"changelog.html":{}}}],["505",{"_index":2043,"title":{},"body":{"changelog.html":{}}}],["507",{"_index":2038,"title":{},"body":{"changelog.html":{}}}],["512",{"_index":2015,"title":{},"body":{"changelog.html":{}}}],["515",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["516",{"_index":2009,"title":{},"body":{"changelog.html":{}}}],["5px",{"_index":1857,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["6.1.2",{"_index":2418,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2423,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":2361,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":2391,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2311,"title":{},"body":{"changelog.html":{}}}],["81",{"_index":2402,"title":{},"body":{"changelog.html":{}}}],["82",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["83",{"_index":2404,"title":{},"body":{"changelog.html":{}}}],["84",{"_index":2407,"title":{},"body":{"changelog.html":{}}}],["85",{"_index":2366,"title":{},"body":{"changelog.html":{}}}],["86",{"_index":2284,"title":{},"body":{"changelog.html":{}}}],["89",{"_index":2411,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":2331,"title":{},"body":{"changelog.html":{}}}],["_action",{"_index":126,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["_actionprops",{"_index":130,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["_animationtargetsregistry",{"_index":246,"title":{},"body":{"injectables/AnimationService.html":{}}}],["_dispatchactions",{"_index":134,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["_sanitizer",{"_index":1252,"title":{},"body":{"pipes/SafePipe.html":{}}}],["_variants",{"_index":1936,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["a&m",{"_index":2516,"title":{},"body":{"license.html":{}}}],["a(this.animationstates.get(stateid",{"_index":360,"title":{},"body":{"injectables/AnimationService.html":{}}}],["above",{"_index":2544,"title":{},"body":{"license.html":{}}}],["access",{"_index":1114,"title":{},"body":{"injectables/RestService.html":{}}}],["accessible",{"_index":406,"title":{},"body":{"injectables/ComponentRegistryService.html":{},"changelog.html":{}}}],["accessors",{"_index":1938,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["action",{"_index":12,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/LayoutEffects.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/RestEffects.html":{},"interfaces/State-1.html":{},"modules/WvrCoreModule.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["action.entry",{"_index":674,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["action.entry.id",{"_index":683,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["action.failure",{"_index":1014,"title":{},"body":{"injectables/RestEffects.html":{}}}],["action.failure(action.response",{"_index":1049,"title":{},"body":{"injectables/RestEffects.html":{}}}],["action.manifest",{"_index":677,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["action.method(action.request",{"_index":1037,"title":{},"body":{"injectables/RestEffects.html":{}}}],["action.request",{"_index":1011,"title":{},"body":{"injectables/RestEffects.html":{}}}],["action.request.map",{"_index":1040,"title":{},"body":{"injectables/RestEffects.html":{}}}],["action.request.map(response",{"_index":1041,"title":{},"body":{"injectables/RestEffects.html":{}}}],["action.success",{"_index":1013,"title":{},"body":{"injectables/RestEffects.html":{}}}],["action.success(action.response",{"_index":1052,"title":{},"body":{"injectables/RestEffects.html":{}}}],["actionandprop.props",{"_index":168,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["actionandprops",{"_index":1,"title":{"interfaces/ActionAndProps.html":{}},"body":{"interfaces/ActionAndProps.html":{}}}],["actioninputs",{"_index":138,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["actioninputs.map(ai",{"_index":140,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["actionreducermap",{"_index":1130,"title":{},"body":{"interfaces/RootState.html":{}}}],["actionregistry",{"_index":148,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["actionregistryservice",{"_index":26,"title":{"injectables/ActionRegistryService.html":{}},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"modules/WvrCoreModule.html":{},"overview.html":{}}}],["actions",{"_index":200,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/ModalEffects.html":{},"injectables/RestEffects.html":{},"injectables/ThemeEffects.html":{},"changelog.html":{}}}],["actiontype].[actionname",{"_index":194,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["activation",{"_index":864,"title":{},"body":{"injectables/MessageService.html":{}}}],["activationstate",{"_index":875,"title":{},"body":{"injectables/MessageService.html":{}}}],["active",{"_index":84,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ThemeService.html":{},"components/WvrThemeComponent.html":{}}}],["activecolor",{"_index":1568,"title":{},"body":{"interfaces/ThemeVariant.html":{}}}],["actual_component",{"_index":1898,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["ada",{"_index":2097,"title":{},"body":{"changelog.html":{}}}],["adapter",{"_index":720,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{}}}],["adapter.addmany(manifests",{"_index":728,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["adapter.addone(manifest",{"_index":726,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["adapter.addone(modal",{"_index":1345,"title":{},"body":{"interfaces/State-2.html":{}}}],["adapter.addone(wysiwyg",{"_index":1385,"title":{},"body":{"interfaces/State-5.html":{}}}],["adapter.getinitialstate",{"_index":723,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{}}}],["adapter.getselectors",{"_index":799,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["adapter.map(entitymap",{"_index":746,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["adapter.mapone(entitymap",{"_index":744,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["adapter.removeall",{"_index":730,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["adapter.removemany(ids",{"_index":736,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["adapter.removemany(predicate",{"_index":739,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["adapter.removeone(id",{"_index":733,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["adapter.setall(manifests",{"_index":741,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["adapter.setone(manifest",{"_index":748,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["adapter.updatemany(updates",{"_index":754,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["adapter.updateone",{"_index":762,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{}}}],["adapter.updateone(update",{"_index":751,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["adapter.upsertmany(manifests",{"_index":758,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["adapter.upsertone(manifest",{"_index":756,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["add",{"_index":1858,"title":{},"body":{"interfaces/WvrElementDesc.html":{},"changelog.html":{}}}],["added",{"_index":1989,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["additional",{"_index":1908,"title":{},"body":{"components/WvrMessageManifestEntryComponent.html":{},"changelog.html":{}}}],["adds",{"_index":291,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{}}}],["affected",{"_index":2369,"title":{},"body":{"changelog.html":{}}}],["afford",{"_index":2132,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":18,"title":{},"body":{"interfaces/ActionAndProps.html":{},"directives/WvrContentProjectionDirective.html":{}}}],["against",{"_index":2499,"title":{},"body":{"index.html":{}}}],["ai.props",{"_index":142,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["alert",{"_index":1474,"title":{},"body":{"injectables/ThemeService.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["alert.component",{"_index":1647,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["alert/wvr",{"_index":1646,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["alertbackgroundlevel",{"_index":1475,"title":{},"body":{"injectables/ThemeService.html":{}}}],["alertbgvalue",{"_index":1479,"title":{},"body":{"injectables/ThemeService.html":{}}}],["alertborderlevel",{"_index":1476,"title":{},"body":{"injectables/ThemeService.html":{}}}],["alertbordervalue",{"_index":1483,"title":{},"body":{"injectables/ThemeService.html":{}}}],["alertcolorlevel",{"_index":1477,"title":{},"body":{"injectables/ThemeService.html":{}}}],["alertcolorvalue",{"_index":1486,"title":{},"body":{"injectables/ThemeService.html":{}}}],["aliases",{"_index":2579,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":121,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["alignment",{"_index":2426,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["allow",{"_index":885,"title":{},"body":{"injectables/MessageService.html":{},"changelog.html":{}}}],["allowed",{"_index":539,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{}}}],["allows",{"_index":67,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["already",{"_index":1750,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["alternate",{"_index":2180,"title":{},"body":{"changelog.html":{}}}],["anchor",{"_index":68,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["and/or",{"_index":2537,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1926,"title":{},"body":{"modules/WvrSharedModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":311,"title":{},"body":{"injectables/AnimationService.html":{},"dependencies.html":{}}}],["angular/common",{"_index":1633,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["angular/common/http",{"_index":991,"title":{},"body":{"interfaces/RequestOptions.html":{},"injectables/RestService.html":{},"modules/WvrCoreModule.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"pipes/SafePipe.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"directives/WvrContentProjectionDirective.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"injectables/WysiwygEffects.html":{}}}],["angular/elements",{"_index":1638,"title":{},"body":{"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1920,"title":{},"body":{"modules/WvrSharedModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":2414,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1249,"title":{},"body":{"pipes/SafePipe.html":{},"interfaces/WvrElementDesc.html":{},"interfaces/WvrThemeableComponent.html":{},"dependencies.html":{}}}],["angularjs",{"_index":964,"title":{},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"changelog.html":{}}}],["animation",{"_index":244,"title":{},"body":{"injectables/AnimationService.html":{},"changelog.html":{}}}],["animation.component",{"_index":318,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animation.component.ts",{"_index":1584,"title":{},"body":{"interfaces/WvrAnimationComponent.html":{}}}],["animation.component.ts:2",{"_index":1588,"title":{},"body":{"interfaces/WvrAnimationComponent.html":{}}}],["animation.component.ts:3",{"_index":1589,"title":{},"body":{"interfaces/WvrAnimationComponent.html":{}}}],["animation.component.ts:4",{"_index":1591,"title":{},"body":{"interfaces/WvrAnimationComponent.html":{}}}],["animation.component.ts:5",{"_index":1593,"title":{},"body":{"interfaces/WvrAnimationComponent.html":{}}}],["animation.service",{"_index":1704,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["animationbuilder",{"_index":256,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationconfig",{"_index":267,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationconfig[animationname",{"_index":341,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationconfig[animationname].from",{"_index":346,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationconfig[animationname].timing",{"_index":342,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationconfig[animationname].to",{"_index":344,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationconfig[animname",{"_index":334,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationfactory",{"_index":349,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationfactory.create(animationroot",{"_index":352,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationinput",{"_index":354,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationmetadata",{"_index":265,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationname",{"_index":260,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationplayer",{"_index":281,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationreferencemetadata",{"_index":298,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationroot",{"_index":277,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationrootelem",{"_index":269,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationrootelem.nativeelement",{"_index":340,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animations",{"_index":303,"title":{},"body":{"injectables/AnimationService.html":{},"changelog.html":{}}}],["animationservice",{"_index":239,"title":{"injectables/AnimationService.html":{}},"body":{"injectables/AnimationService.html":{},"modules/WvrCoreModule.html":{},"overview.html":{}}}],["animationstates",{"_index":247,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationtriggertype",{"_index":1594,"title":{},"body":{"interfaces/WvrAnimationComponent.html":{}}}],["animconf",{"_index":333,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animconf.from",{"_index":337,"title":{},"body":{"injectables/AnimationService.html":{}}}],["any,options",{"_index":1087,"title":{},"body":{"injectables/RestService.html":{}}}],["api",{"_index":2122,"title":{},"body":{"changelog.html":{}}}],["app_config",{"_index":384,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/WvrElementDesc.html":{}}}],["appconfig",{"_index":361,"title":{"interfaces/AppConfig.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/WvrElementDesc.html":{}}}],["appearing",{"_index":2221,"title":{},"body":{"changelog.html":{}}}],["appendmissingnullonincoming",{"_index":612,"title":{},"body":{"interfaces/MessageClientOptions.html":{},"injectables/MessageService.html":{}}}],["appendstyle",{"_index":1464,"title":{},"body":{"injectables/ThemeService.html":{}}}],["appendstyle(`${key",{"_index":1482,"title":{},"body":{"injectables/ThemeService.html":{}}}],["application",{"_index":365,"title":{},"body":{"interfaces/AppConfig.html":{}}}],["apply",{"_index":380,"title":{},"body":{"interfaces/AppConfig.html":{}}}],["applytheme",{"_index":1397,"title":{},"body":{"injectables/ThemeService.html":{}}}],["applytheme(theme",{"_index":1403,"title":{},"body":{"injectables/ThemeService.html":{}}}],["applythemebyname",{"_index":1398,"title":{},"body":{"injectables/ThemeService.html":{}}}],["applythemebyname(themename",{"_index":1407,"title":{},"body":{"injectables/ThemeService.html":{}}}],["applythemeoverride",{"_index":1958,"title":{},"body":{"interfaces/WvrThemeableComponent.html":{}}}],["applythemeoverride(customproperty",{"_index":1959,"title":{},"body":{"interfaces/WvrThemeableComponent.html":{}}}],["appmodule",{"_index":1752,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["appropriate",{"_index":2456,"title":{},"body":{"index.html":{}}}],["args",{"_index":1290,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["aria",{"_index":2318,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":2571,"title":{},"body":{"license.html":{}}}],["array",{"_index":135,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/AnimationService.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MessageManifest.html":{},"interfaces/MessageManifestState.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"interfaces/RootState.html":{},"interfaces/State-1.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{},"interfaces/WvrThemeableComponent.html":{}}}],["array.from(document.getelementsbytagname(wvrelement.selector",{"_index":1827,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["array.from(document.queryselectorall('div[element",{"_index":1859,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["arraybuffer",{"_index":988,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["arrow",{"_index":716,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/SelectOptions.html":{},"interfaces/State-1.html":{}}}],["asset",{"_index":2307,"title":{},"body":{"changelog.html":{}}}],["assets",{"_index":375,"title":{},"body":{"interfaces/AppConfig.html":{}}}],["assetsurl",{"_index":368,"title":{},"body":{"interfaces/AppConfig.html":{}}}],["assign",{"_index":2317,"title":{},"body":{"changelog.html":{}}}],["assigned",{"_index":856,"title":{},"body":{"injectables/MessageService.html":{}}}],["assigns",{"_index":285,"title":{},"body":{"injectables/AnimationService.html":{}}}],["associated",{"_index":302,"title":{},"body":{"injectables/AnimationService.html":{},"license.html":{}}}],["asynchronous",{"_index":953,"title":{},"body":{"injectables/MessageService.html":{}}}],["attached",{"_index":2449,"title":{},"body":{"index.html":{}}}],["attempting",{"_index":889,"title":{},"body":{"injectables/MessageService.html":{}}}],["attempts",{"_index":886,"title":{},"body":{"injectables/MessageService.html":{}}}],["attr",{"_index":2337,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2320,"title":{},"body":{"changelog.html":{}}}],["audit",{"_index":2510,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":476,"title":{},"body":{"interfaces/Manifest.html":{}}}],["authors",{"_index":2561,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":2316,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":2447,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":887,"title":{},"body":{"injectables/MessageService.html":{},"changelog.html":{}}}],["background",{"_index":77,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["background(value",{"_index":79,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["backgroundactive(value",{"_index":85,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["backgroundcolor",{"_index":1569,"title":{},"body":{"interfaces/ThemeVariant.html":{}}}],["backgroundhover(value",{"_index":87,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["bad",{"_index":2022,"title":{},"body":{"changelog.html":{}}}],["badge",{"_index":1490,"title":{},"body":{"injectables/ThemeService.html":{},"interfaces/WvrThemeableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["badgebgvalue",{"_index":1491,"title":{},"body":{"injectables/ThemeService.html":{}}}],["badgecolorvalue",{"_index":1492,"title":{},"body":{"injectables/ThemeService.html":{}}}],["base",{"_index":2192,"title":{},"body":{"changelog.html":{}}}],["base.component",{"_index":35,"title":{},"body":{"interfaces/ActionAndProps.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["base64",{"_index":1108,"title":{},"body":{"injectables/RestService.html":{}}}],["basecolor",{"_index":1570,"title":{},"body":{"interfaces/ThemeVariant.html":{}}}],["baseurl",{"_index":369,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/Manifest.html":{}}}],["bbsrgba",{"_index":1517,"title":{},"body":{"injectables/ThemeService.html":{}}}],["bbsrgba.b",{"_index":1523,"title":{},"body":{"injectables/ThemeService.html":{}}}],["bbsrgba.g",{"_index":1522,"title":{},"body":{"injectables/ThemeService.html":{}}}],["becoming",{"_index":2026,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":836,"title":{},"body":{"injectables/MessageService.html":{}}}],["beforeconnect",{"_index":814,"title":{},"body":{"injectables/MessageService.html":{}}}],["behaviorsubject",{"_index":975,"title":{},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{}}}],["being",{"_index":377,"title":{},"body":{"interfaces/AppConfig.html":{},"changelog.html":{}}}],["below",{"_index":2473,"title":{},"body":{"index.html":{}}}],["bg",{"_index":82,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ThemeService.html":{},"changelog.html":{}}}],["bind",{"_index":853,"title":{},"body":{"injectables/MessageService.html":{}}}],["binding",{"_index":965,"title":{},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"changelog.html":{}}}],["bindings.service",{"_index":1709,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["bindings.service.ts",{"_index":963,"title":{},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{}}}],["bindings.service.ts:18",{"_index":968,"title":{},"body":{"injectables/NgBindingsService.html":{}}}],["bindings.service.ts:24",{"_index":972,"title":{},"body":{"injectables/NgBindingsService.html":{}}}],["black",{"_index":1459,"title":{},"body":{"injectables/ThemeService.html":{}}}],["blob",{"_index":989,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["block",{"_index":60,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["bobsrgba",{"_index":1497,"title":{},"body":{"injectables/ThemeService.html":{}}}],["bobsrgba.b",{"_index":1502,"title":{},"body":{"injectables/ThemeService.html":{}}}],["bobsrgba.g",{"_index":1501,"title":{},"body":{"injectables/ThemeService.html":{}}}],["body",{"_index":551,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestService.html":{},"interfaces/WvrElementDesc.html":{}}}],["body.classlist.remove('wvr",{"_index":1869,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["body[prop",{"_index":1106,"title":{},"body":{"injectables/RestService.html":{}}}],["bodyhttpparams",{"_index":555,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/Request.html":{}}}],["boolean",{"_index":146,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/Layout.html":{},"injectables/LayoutEffects.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/Modal.html":{},"interfaces/RequestOptions.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["bootstrap",{"_index":1621,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":1923,"title":{},"body":{"modules/WvrSharedModule.html":{},"dependencies.html":{}}}],["bootstrapmodule(module",{"_index":1803,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["bootstrapping",{"_index":2139,"title":{},"body":{"changelog.html":{}}}],["border",{"_index":88,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ThemeService.html":{},"interfaces/WvrThemeableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["borderactive(value",{"_index":90,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["bordercolor",{"_index":1571,"title":{},"body":{"interfaces/ThemeVariant.html":{}}}],["bordercolor(value",{"_index":89,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["borderfocus(value",{"_index":94,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["borderhover(value",{"_index":91,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["borderradius",{"_index":106,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["bottom",{"_index":2080,"title":{},"body":{"changelog.html":{}}}],["box",{"_index":95,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ThemeService.html":{}}}],["boxshadowfocus(value",{"_index":98,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["branded",{"_index":2274,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":1489,"title":{},"body":{"injectables/ThemeService.html":{}}}],["broken",{"_index":2406,"title":{},"body":{"changelog.html":{}}}],["broker",{"_index":829,"title":{},"body":{"injectables/MessageService.html":{}}}],["brokerurl",{"_index":619,"title":{},"body":{"interfaces/MessageManifest.html":{},"injectables/MessageService.html":{}}}],["brought",{"_index":2197,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":2573,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1250,"title":{},"body":{"pipes/SafePipe.html":{},"interfaces/WvrElementDesc.html":{},"interfaces/WvrThemeableComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["btn",{"_index":105,"title":{},"body":{"interfaces/ActionAndProps.html":{},"changelog.html":{}}}],["btnsize",{"_index":57,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["btntxt",{"_index":144,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["btntype",{"_index":61,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["bubbles",{"_index":173,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["buffer.from(body[prop",{"_index":1107,"title":{},"body":{"injectables/RestService.html":{}}}],["bug",{"_index":2256,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1988,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["builder",{"_index":258,"title":{},"body":{"injectables/AnimationService.html":{}}}],["building",{"_index":2472,"title":{},"body":{"index.html":{}}}],["buildonce",{"_index":2484,"title":{},"body":{"index.html":{}}}],["built",{"_index":851,"title":{},"body":{"injectables/MessageService.html":{},"index.html":{}}}],["bundle",{"_index":2247,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":38,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ThemeService.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["button.component",{"_index":1648,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["button.component.html",{"_index":40,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["button.component.scss",{"_index":42,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["button.component.ts",{"_index":9,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["button/wvr",{"_index":8,"title":{},"body":{"interfaces/ActionAndProps.html":{},"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["buttonactivebgvalue",{"_index":1514,"title":{},"body":{"injectables/ThemeService.html":{}}}],["buttonactivebordervalue",{"_index":1515,"title":{},"body":{"injectables/ThemeService.html":{}}}],["buttonactivecolorvalue",{"_index":1513,"title":{},"body":{"injectables/ThemeService.html":{}}}],["buttonbgvalue",{"_index":1504,"title":{},"body":{"injectables/ThemeService.html":{}}}],["buttonbordervalue",{"_index":1505,"title":{},"body":{"injectables/ThemeService.html":{}}}],["buttonboxshadowcolorvalue",{"_index":1520,"title":{},"body":{"injectables/ThemeService.html":{}}}],["buttoncolorvalue",{"_index":1503,"title":{},"body":{"injectables/ThemeService.html":{}}}],["buttonhoverbgvalue",{"_index":1509,"title":{},"body":{"injectables/ThemeService.html":{}}}],["buttonhoverbordervalue",{"_index":1511,"title":{},"body":{"injectables/ThemeService.html":{}}}],["buttonhovercolorvalue",{"_index":1506,"title":{},"body":{"injectables/ThemeService.html":{}}}],["buttonoutlineboxshadowcolorvalue",{"_index":1499,"title":{},"body":{"injectables/ThemeService.html":{}}}],["buttonoutlinecolorhovervalue",{"_index":1496,"title":{},"body":{"injectables/ThemeService.html":{}}}],["buttonoutlinecolorvalue",{"_index":1495,"title":{},"body":{"injectables/ThemeService.html":{}}}],["buttons",{"_index":2098,"title":{},"body":{"changelog.html":{}}}],["bypass",{"_index":1260,"title":{},"body":{"pipes/SafePipe.html":{}}}],["c",{"_index":2514,"title":{},"body":{"license.html":{}}}],["callback",{"_index":842,"title":{},"body":{"injectables/MessageService.html":{},"injectables/RestService.html":{}}}],["callback(request.url",{"_index":1102,"title":{},"body":{"injectables/RestService.html":{}}}],["called",{"_index":153,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["calls",{"_index":844,"title":{},"body":{"injectables/MessageService.html":{}}}],["card",{"_index":1720,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["card.component",{"_index":1651,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["card/wvr",{"_index":1650,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["cards",{"_index":2302,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":577,"title":{},"body":{"injectables/ManifestEffects.html":{},"pipes/SafePipe.html":{},"injectables/ThemeService.html":{}}}],["catch",{"_index":1734,"title":{},"body":{"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{}}}],["catch((err",{"_index":1805,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["catcherror",{"_index":648,"title":{},"body":{"injectables/MessageManifestEffects.html":{},"injectables/RestEffects.html":{}}}],["catcherror(response",{"_index":1042,"title":{},"body":{"injectables/RestEffects.html":{}}}],["cd",{"_index":2483,"title":{},"body":{"index.html":{}}}],["cdn",{"_index":2374,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cdref",{"_index":976,"title":{},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{}}}],["center",{"_index":2436,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["centralized",{"_index":241,"title":{},"body":{"injectables/AnimationService.html":{}}}],["certain",{"_index":2049,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":866,"title":{},"body":{"injectables/MessageService.html":{},"changelog.html":{}}}],["changedetection",{"_index":43,"title":{},"body":{"interfaces/ActionAndProps.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["changedetectionstrategy",{"_index":19,"title":{},"body":{"interfaces/ActionAndProps.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["changedetectionstrategy.default",{"_index":44,"title":{},"body":{"interfaces/ActionAndProps.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["changedetectorref",{"_index":973,"title":{},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{}}}],["changelog",{"_index":1977,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":763,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{},"components/WvrThemeComponent.html":{},"index.html":{}}}],["charge",{"_index":2522,"title":{},"body":{"license.html":{}}}],["check",{"_index":2297,"title":{},"body":{"changelog.html":{}}}],["checkbox",{"_index":62,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["checks",{"_index":1222,"title":{},"body":{"interfaces/RootState.html":{}}}],["cheerio",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["child",{"_index":1850,"title":{},"body":{"interfaces/WvrElementDesc.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["ci",{"_index":2392,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":2564,"title":{},"body":{"license.html":{}}}],["class",{"_index":46,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"pipes/SafePipe.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"directives/WvrContentProjectionDirective.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"injectables/WysiwygEffects.html":{}}}],["classes",{"_index":1931,"title":{},"body":{"modules/WvrSharedModule.html":{}}}],["click",{"_index":2171,"title":{},"body":{"changelog.html":{}}}],["clicked",{"_index":2068,"title":{},"body":{"changelog.html":{}}}],["clicks",{"_index":2048,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":610,"title":{},"body":{"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"injectables/MessageService.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["client.activate",{"_index":897,"title":{},"body":{"injectables/MessageService.html":{}}}],["client.beforeconnect",{"_index":926,"title":{},"body":{"injectables/MessageService.html":{}}}],["client.configure(config",{"_index":946,"title":{},"body":{"injectables/MessageService.html":{}}}],["client.debug",{"_index":930,"title":{},"body":{"injectables/MessageService.html":{}}}],["client.onchangestate",{"_index":928,"title":{},"body":{"injectables/MessageService.html":{}}}],["client.onconnect",{"_index":938,"title":{},"body":{"injectables/MessageService.html":{}}}],["client.ondisconnect",{"_index":944,"title":{},"body":{"injectables/MessageService.html":{}}}],["client.onstomperror",{"_index":932,"title":{},"body":{"injectables/MessageService.html":{}}}],["client.onwebsocketclose",{"_index":934,"title":{},"body":{"injectables/MessageService.html":{}}}],["client.onwebsocketerror",{"_index":936,"title":{},"body":{"injectables/MessageService.html":{}}}],["client.websocketfactory",{"_index":947,"title":{},"body":{"injectables/MessageService.html":{}}}],["clients",{"_index":815,"title":{},"body":{"injectables/MessageService.html":{}}}],["close",{"_index":873,"title":{},"body":{"injectables/MessageService.html":{}}}],["closed",{"_index":2069,"title":{},"body":{"changelog.html":{}}}],["cluster_wvrcoremodule",{"_index":1624,"title":{},"body":{"modules/WvrCoreModule.html":{},"overview.html":{}}}],["cluster_wvrcoremodule_providers",{"_index":1625,"title":{},"body":{"modules/WvrCoreModule.html":{},"overview.html":{}}}],["cluster_wvrsharedmodule",{"_index":1913,"title":{},"body":{"modules/WvrSharedModule.html":{},"overview.html":{}}}],["cluster_wvrsharedmodule_declarations",{"_index":1914,"title":{},"body":{"modules/WvrSharedModule.html":{},"overview.html":{}}}],["cluster_wvrsharedmodule_exports",{"_index":1915,"title":{},"body":{"modules/WvrSharedModule.html":{},"overview.html":{}}}],["code",{"_index":2085,"title":{},"body":{"changelog.html":{}}}],["collapsible",{"_index":2075,"title":{},"body":{"changelog.html":{}}}],["collapsing",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["collection",{"_index":1910,"title":{},"body":{"components/WvrMessageManifestEntryComponent.html":{},"index.html":{}}}],["collision",{"_index":2305,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":99,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariant.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["color(value",{"_index":100,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["coloractive(value",{"_index":101,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["colorhover(value",{"_index":102,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["colors",{"_index":2196,"title":{},"body":{"changelog.html":{}}}],["combinelatest",{"_index":498,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{}}}],["combinelatest(unsubscriptions",{"_index":904,"title":{},"body":{"injectables/MessageService.html":{}}}],["command",{"_index":940,"title":{},"body":{"injectables/MessageService.html":{},"changelog.html":{},"index.html":{}}}],["common",{"_index":2131,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":1917,"title":{},"body":{"modules/WvrSharedModule.html":{}}}],["communicate",{"_index":2312,"title":{},"body":{"changelog.html":{}}}],["compile",{"_index":2147,"title":{},"body":{"changelog.html":{}}}],["compileanimation",{"_index":248,"title":{},"body":{"injectables/AnimationService.html":{}}}],["compileanimation(stateid",{"_index":259,"title":{},"body":{"injectables/AnimationService.html":{}}}],["compiler",{"_index":2150,"title":{},"body":{"changelog.html":{}}}],["compiles",{"_index":262,"title":{},"body":{"injectables/AnimationService.html":{}}}],["completed",{"_index":2486,"title":{},"body":{"index.html":{}}}],["completel",{"_index":834,"title":{},"body":{"injectables/MessageService.html":{}}}],["completely",{"_index":2076,"title":{},"body":{"changelog.html":{}}}],["compodocs",{"_index":1995,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":20,"title":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}},"body":{"interfaces/ActionAndProps.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["component's",{"_index":374,"title":{},"body":{"interfaces/AppConfig.html":{},"changelog.html":{}}}],["component'},{'name",{"_index":1897,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["component_template",{"_index":1896,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["componentregistry",{"_index":1877,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["componentregistryservice",{"_index":386,"title":{"injectables/ComponentRegistryService.html":{}},"body":{"injectables/ComponentRegistryService.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"overview.html":{}}}],["components",{"_index":379,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["components#423",{"_index":2103,"title":{},"body":{"changelog.html":{}}}],["components#425",{"_index":2106,"title":{},"body":{"changelog.html":{}}}],["components#429",{"_index":2092,"title":{},"body":{"changelog.html":{}}}],["components.git",{"_index":2577,"title":{},"body":{"properties.html":{}}}],["components.js",{"_index":2468,"title":{},"body":{"index.html":{}}}],["components.jsbuilding",{"_index":2492,"title":{},"body":{"index.html":{}}}],["componentscript",{"_index":1767,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["componentscript.getattribute('src",{"_index":1775,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["componentscriptsrc",{"_index":1774,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["componentscriptsrc.split",{"_index":1777,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["componentscriptsrcpathparts",{"_index":1776,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["componentscriptsrcpathparts.join",{"_index":1780,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["componentscriptsrcpathparts.pop",{"_index":1778,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["computedstyle",{"_index":1445,"title":{},"body":{"injectables/ThemeService.html":{}}}],["computedstyle.getpropertyvalue",{"_index":1453,"title":{},"body":{"injectables/ThemeService.html":{}}}],["concerns",{"_index":2145,"title":{},"body":{"changelog.html":{}}}],["condition",{"_index":2140,"title":{},"body":{"changelog.html":{}}}],["conditionally",{"_index":2401,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":2543,"title":{},"body":{"license.html":{}}}],["config",{"_index":858,"title":{},"body":{"injectables/MessageService.html":{},"interfaces/WvrElementDesc.html":{}}}],["config.json",{"_index":1791,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["config.ts",{"_index":363,"title":{},"body":{"interfaces/AppConfig.html":{}}}],["configbasepath",{"_index":1779,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["configbasepath}/config.json",{"_index":1781,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["configpath",{"_index":1796,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["configurable",{"_index":1300,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["configuration",{"_index":366,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/MessageService.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrMessageManifestEntryComponent.html":{},"changelog.html":{}}}],["configured",{"_index":274,"title":{},"body":{"injectables/AnimationService.html":{},"changelog.html":{}}}],["connect",{"_index":822,"title":{},"body":{"injectables/MessageService.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["connect(manifest",{"_index":826,"title":{},"body":{"injectables/MessageService.html":{}}}],["connected",{"_index":711,"title":{},"body":{"interfaces/MessageManifestState.html":{},"miscellaneous/enumerations.html":{}}}],["connectheaders",{"_index":613,"title":{},"body":{"interfaces/MessageClientOptions.html":{},"injectables/MessageService.html":{}}}],["connecting",{"_index":712,"title":{},"body":{"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["connection",{"_index":620,"title":{},"body":{"interfaces/MessageManifest.html":{},"interfaces/MessageManifestState.html":{},"license.html":{}}}],["connectionstatus",{"_index":627,"title":{},"body":{"interfaces/MessageManifest.html":{},"interfaces/MessageManifestState.html":{},"miscellaneous/enumerations.html":{}}}],["connectionstatus.connected",{"_index":782,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["connectionstatus.connecting",{"_index":780,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["connectionstatus.disconnected",{"_index":786,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["connectionstatus.disconnecting",{"_index":784,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["connectmanifest",{"_index":633,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["connectmanifestconnected",{"_index":634,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["consistent",{"_index":2110,"title":{},"body":{"changelog.html":{}}}],["console.error(err",{"_index":1806,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["console.warn(`${animationname",{"_index":359,"title":{},"body":{"injectables/AnimationService.html":{}}}],["console.warn(`'${nameandtype",{"_index":190,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["console.warn(`'${parts[1",{"_index":207,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["console.warn(`no",{"_index":198,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["console.warn(`wvrmanifestentrycomponent",{"_index":1892,"title":{},"body":{"components/WvrManifestEntryComponent.html":{}}}],["console.warn(`wvrmessagemanifestentrycomponent",{"_index":1911,"title":{},"body":{"components/WvrMessageManifestEntryComponent.html":{}}}],["console.warn(e",{"_index":1735,"title":{},"body":{"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{}}}],["const",{"_index":137,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"injectables/ManifestEffects.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"injectables/ThemeService.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{}}}],["constants",{"_index":2431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["constrast",{"_index":1461,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor",{"_index":223,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"directives/WvrContentProjectionDirective.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["constructor(@optional",{"_index":1747,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["constructor(actions",{"_index":486,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/ModalEffects.html":{},"injectables/RestEffects.html":{},"injectables/ThemeEffects.html":{}}}],["constructor(builder",{"_index":255,"title":{},"body":{"injectables/AnimationService.html":{}}}],["constructor(elementref",{"_index":1603,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{}}}],["constructor(eref",{"_index":1876,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["constructor(http",{"_index":1066,"title":{},"body":{"injectables/RestService.html":{}}}],["constructor(injector",{"_index":149,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["constructor(private",{"_index":320,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/LayoutEffects.html":{},"injectables/MessageService.html":{},"injectables/ModalEffects.html":{},"injectables/RestService.html":{},"injectables/ThemeService.html":{},"directives/WvrContentProjectionDirective.html":{},"components/WvrThemeComponent.html":{}}}],["constructor(protected",{"_index":1251,"title":{},"body":{"pipes/SafePipe.html":{}}}],["constructor(store",{"_index":445,"title":{},"body":{"injectables/LayoutEffects.html":{},"injectables/MessageService.html":{},"injectables/ThemeService.html":{},"components/WvrThemeComponent.html":{}}}],["contained",{"_index":1894,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["contains",{"_index":1715,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["content",{"_index":159,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/State-5.html":{},"directives/WvrContentProjectionDirective.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{},"modules/WvrSharedModule.html":{},"interfaces/Wysiwyg.html":{},"changelog.html":{}}}],["context",{"_index":2336,"title":{},"body":{"changelog.html":{}}}],["continues",{"_index":2066,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":2568,"title":{},"body":{"license.html":{}}}],["contrasted",{"_index":1449,"title":{},"body":{"injectables/ThemeService.html":{}}}],["contributing",{"_index":2412,"title":{"contributing.html":{}},"body":{}}],["convert",{"_index":2112,"title":{},"body":{"changelog.html":{}}}],["converted",{"_index":2286,"title":{},"body":{"changelog.html":{}}}],["copies",{"_index":2539,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2525,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2513,"title":{},"body":{"license.html":{}}}],["core.module.ts",{"_index":1629,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["core/action",{"_index":27,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["core/component",{"_index":1886,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["core/store",{"_index":1948,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["core/theme/theme.actions",{"_index":1949,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["correctly",{"_index":1997,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":807,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["coverage",{"_index":689,"title":{},"body":{"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"changelog.html":{},"index.html":{}}}],["coveralls",{"_index":2353,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":846,"title":{},"body":{"injectables/MessageService.html":{},"interfaces/WvrElementDesc.html":{}}}],["createclient",{"_index":816,"title":{},"body":{"injectables/MessageService.html":{}}}],["createcustomelement",{"_index":1637,"title":{},"body":{"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{}}}],["createcustomelement(element.component",{"_index":1733,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["createcustomelement(wvrelement.component",{"_index":1839,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["created",{"_index":924,"title":{},"body":{"injectables/MessageService.html":{}}}],["createeffect",{"_index":452,"title":{},"body":{"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/RestEffects.html":{}}}],["createentityadapter",{"_index":706,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{}}}],["createfeatureselector",{"_index":1131,"title":{},"body":{"interfaces/RootState.html":{}}}],["createfeatureselector('layout",{"_index":1214,"title":{},"body":{"interfaces/RootState.html":{}}}],["createfeatureselector('manifests",{"_index":1168,"title":{},"body":{"interfaces/RootState.html":{}}}],["createfeatureselector('messagemanifests",{"_index":1189,"title":{},"body":{"interfaces/RootState.html":{}}}],["createfeatureselector('modals",{"_index":1226,"title":{},"body":{"interfaces/RootState.html":{}}}],["createfeatureselector('rest",{"_index":1185,"title":{},"body":{"interfaces/RootState.html":{}}}],["createfeatureselector('theme",{"_index":1207,"title":{},"body":{"interfaces/RootState.html":{}}}],["createfeatureselector('wysiwyg",{"_index":1232,"title":{},"body":{"interfaces/RootState.html":{}}}],["createreducer",{"_index":709,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{}}}],["creates",{"_index":283,"title":{},"body":{"injectables/AnimationService.html":{}}}],["createselector",{"_index":1132,"title":{},"body":{"interfaces/RootState.html":{}}}],["css",{"_index":2125,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["current",{"_index":1770,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["currently",{"_index":376,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{}}}],["currentmessage",{"_index":704,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["currentrequest",{"_index":1307,"title":{},"body":{"interfaces/State-1.html":{}}}],["currenttheme",{"_index":1359,"title":{},"body":{"interfaces/State-4.html":{},"injectables/ThemeService.html":{}}}],["cursor",{"_index":107,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["custom",{"_index":850,"title":{},"body":{"injectables/MessageService.html":{},"interfaces/WvrElementDesc.html":{},"index.html":{}}}],["custom_elements_schema",{"_index":1631,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["customelements.define(element.selector",{"_index":1732,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["customelements.define(wvrelement.selector",{"_index":1838,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["customevent(this.emitevent",{"_index":172,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["customproperty",{"_index":1465,"title":{},"body":{"injectables/ThemeService.html":{},"interfaces/WvrThemeableComponent.html":{}}}],["damages",{"_index":2565,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1576,"title":{},"body":{"interfaces/ThemeVariants.html":{},"changelog.html":{}}}],["dark",{"_index":1364,"title":{},"body":{"interfaces/State-4.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariants.html":{}}}],["data",{"_index":176,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/MappingStrategy.html":{},"interfaces/WvrDataComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["data.component.ts",{"_index":1754,"title":{},"body":{"interfaces/WvrDataComponent.html":{}}}],["data.component.ts:5",{"_index":1758,"title":{},"body":{"interfaces/WvrDataComponent.html":{}}}],["data.component.ts:6",{"_index":1757,"title":{},"body":{"interfaces/WvrDataComponent.html":{}}}],["dbsrgba",{"_index":1540,"title":{},"body":{"injectables/ThemeService.html":{}}}],["dbsrgba.b",{"_index":1545,"title":{},"body":{"injectables/ThemeService.html":{}}}],["dbsrgba.g",{"_index":1544,"title":{},"body":{"injectables/ThemeService.html":{}}}],["deactivate",{"_index":907,"title":{},"body":{"injectables/MessageService.html":{}}}],["deal",{"_index":2527,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2572,"title":{},"body":{"license.html":{}}}],["debounce",{"_index":1301,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["debounce(delay",{"_index":1275,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["debug",{"_index":817,"title":{},"body":{"injectables/MessageService.html":{}}}],["debugger",{"_index":861,"title":{},"body":{"injectables/MessageService.html":{}}}],["declarations",{"_index":1620,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{},"overview.html":{}}}],["declared",{"_index":2293,"title":{},"body":{"changelog.html":{}}}],["decode",{"_index":553,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/Request.html":{}}}],["decorated",{"_index":1272,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["decrement",{"_index":414,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["default",{"_index":304,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/RestEffects.html":{},"pipes/SafePipe.html":{},"interfaces/State-4.html":{},"injectables/ThemeService.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["defaultactivebgvalue",{"_index":1538,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaultactivebordervalue",{"_index":1539,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaultactivecolorvalue",{"_index":1537,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaultbgvalue",{"_index":1532,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaultbordervalue",{"_index":1533,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaultboxshadowcolorvalue",{"_index":1542,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaultcolorvalue",{"_index":1531,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaultdark",{"_index":1372,"title":{},"body":{"interfaces/State-4.html":{}}}],["defaultdarktheme",{"_index":1362,"title":{},"body":{"interfaces/State-4.html":{}}}],["defaulthoverbgvalue",{"_index":1535,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaulthoverbordervalue",{"_index":1536,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaulthovercolorvalue",{"_index":1534,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaultoutlineboxshadowcolorvalue",{"_index":1527,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaultoutlinecolorhovervalue",{"_index":1525,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaultoutlinecolorvalue",{"_index":1524,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaultpipe",{"_index":428,"title":{"pipes/DefaultPipe.html":{}},"body":{"pipes/DefaultPipe.html":{},"modules/WvrSharedModule.html":{},"overview.html":{}}}],["defaults",{"_index":314,"title":{},"body":{"injectables/AnimationService.html":{}}}],["defaulttheme",{"_index":1366,"title":{},"body":{"interfaces/State-4.html":{}}}],["defaultvalue",{"_index":435,"title":{},"body":{"pipes/DefaultPipe.html":{}}}],["define",{"_index":53,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/WvrElementDesc.html":{}}}],["defined",{"_index":224,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"pipes/SafePipe.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"interfaces/WvrDataComponent.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{}}}],["defines",{"_index":2430,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["degradation",{"_index":2154,"title":{},"body":{"changelog.html":{}}}],["delay",{"_index":1269,"title":{},"body":{"interfaces/SelectOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["delete",{"_index":585,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"miscellaneous/typealiases.html":{}}}],["delete(request",{"_index":1070,"title":{},"body":{"injectables/RestService.html":{}}}],["deleteclient",{"_index":635,"title":{},"body":{"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{}}}],["deleterequest",{"_index":996,"title":{},"body":{"injectables/RestEffects.html":{}}}],["dependencies",{"_index":1618,"title":{"dependencies.html":{}},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":2035,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deprecated",{"_index":2093,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":319,"title":{},"body":{"injectables/AnimationService.html":{}}}],["dequeue",{"_index":482,"title":{},"body":{"injectables/ManifestEffects.html":{},"changelog.html":{}}}],["deriving",{"_index":408,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["describe",{"_index":2433,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["describes",{"_index":364,"title":{},"body":{"interfaces/AppConfig.html":{}}}],["description",{"_index":216,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestEntry.html":{},"interfaces/MessageManifest.html":{},"interfaces/MessageManifestEntry.html":{},"injectables/MessageService.html":{},"injectables/NgBindingsService.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["descriptor",{"_index":1280,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["descriptor.value",{"_index":1285,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["deserialization",{"_index":697,"title":{},"body":{"interfaces/MessageManifestEntry.html":{}}}],["designs",{"_index":2050,"title":{},"body":{"changelog.html":{}}}],["destination",{"_index":694,"title":{},"body":{"interfaces/MessageManifestEntry.html":{},"injectables/MessageService.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["detail",{"_index":175,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["detailed",{"_index":2481,"title":{},"body":{"index.html":{}}}],["details",{"_index":2474,"title":{},"body":{"index.html":{}}}],["detect",{"_index":1841,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["detection",{"_index":2382,"title":{},"body":{"changelog.html":{}}}],["determine",{"_index":1215,"title":{},"body":{"interfaces/RootState.html":{}}}],["determined",{"_index":693,"title":{},"body":{"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{}}}],["develop",{"_index":2498,"title":{},"body":{"index.html":{}}}],["development",{"_index":2478,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":2417,"title":{},"body":{"dependencies.html":{}}}],["devtools/instrument",{"_index":1642,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["dictionary",{"_index":802,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["difference",{"_index":2495,"title":{},"body":{"index.html":{}}}],["directive",{"_index":1595,"title":{"directives/WvrContentProjectionDirective.html":{}},"body":{"directives/WvrContentProjectionDirective.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["directives",{"_index":1597,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{},"overview.html":{}}}],["directives/wvr",{"_index":1927,"title":{},"body":{"modules/WvrSharedModule.html":{}}}],["directly",{"_index":2448,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2078,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["disable",{"_index":687,"title":{},"body":{"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{}}}],["disabled",{"_index":74,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["disconnect",{"_index":823,"title":{},"body":{"injectables/MessageService.html":{}}}],["disconnect(manifest",{"_index":832,"title":{},"body":{"injectables/MessageService.html":{}}}],["disconnected",{"_index":713,"title":{},"body":{"interfaces/MessageManifestState.html":{},"miscellaneous/enumerations.html":{}}}],["disconnectheaders",{"_index":614,"title":{},"body":{"interfaces/MessageClientOptions.html":{},"injectables/MessageService.html":{}}}],["disconnecting",{"_index":714,"title":{},"body":{"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["disconnectmanifest",{"_index":636,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["disconnectmanifestdisconnected",{"_index":637,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["dispatch",{"_index":192,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/MessageManifestEffects.html":{}}}],["dispatchaction(value",{"_index":127,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["dispatchactionprops(value",{"_index":131,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["dispatchactions(value",{"_index":136,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["dispatched",{"_index":218,"title":{},"body":{"injectables/ActionRegistryService.html":{}}}],["display",{"_index":2042,"title":{},"body":{"changelog.html":{}}}],["displayed",{"_index":2203,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":2232,"title":{},"body":{"changelog.html":{}}}],["dist/bundle",{"_index":2489,"title":{},"body":{"index.html":{}}}],["dist/bundle/styles.css",{"_index":2490,"title":{},"body":{"index.html":{}}}],["dist/bundle/weaver",{"_index":2491,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":2535,"title":{},"body":{"license.html":{}}}],["div",{"_index":1820,"title":{},"body":{"interfaces/WvrElementDesc.html":{},"changelog.html":{}}}],["div.appendchild(template",{"_index":1834,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["div.setattribute('element",{"_index":1831,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["doc",{"_index":1737,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["doc.queryselectorall('[wvr",{"_index":1739,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["docs",{"_index":2285,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1632,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["document.addeventlistener(win.weaverbootstrapevent",{"_index":1789,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["document.createelement('div",{"_index":1830,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["document.createelement('template",{"_index":1833,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["document.currentscript",{"_index":1768,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["document.queryselector('body",{"_index":1868,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["document.queryselectorall('.wvr",{"_index":1863,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["document.queryselectorall('[wvr",{"_index":1867,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["documentation",{"_index":2086,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":1871,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["domcontentloaded",{"_index":1788,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["domsanitizer",{"_index":1248,"title":{},"body":{"pipes/SafePipe.html":{}}}],["down",{"_index":2052,"title":{},"body":{"changelog.html":{}}}],["downgrading",{"_index":1984,"title":{},"body":{"changelog.html":{}}}],["drop",{"_index":2051,"title":{},"body":{"changelog.html":{}}}],["dropdown",{"_index":1722,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["dropdown.component",{"_index":1657,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["dropdown/wvr",{"_index":1656,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["dropped",{"_index":2452,"title":{},"body":{"index.html":{}}}],["dvobsrgba",{"_index":1526,"title":{},"body":{"injectables/ThemeService.html":{}}}],["dvobsrgba.b",{"_index":1530,"title":{},"body":{"injectables/ThemeService.html":{}}}],["dvobsrgba.g",{"_index":1529,"title":{},"body":{"injectables/ThemeService.html":{}}}],["dynamic",{"_index":1766,"title":{},"body":{"interfaces/WvrElementDesc.html":{},"changelog.html":{},"dependencies.html":{}}}],["dynamically",{"_index":2323,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["e",{"_index":766,"title":{},"body":{"interfaces/MessageManifestState.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{}}}],["e.name",{"_index":509,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/MessageManifestState.html":{},"interfaces/RootState.html":{}}}],["each",{"_index":273,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"changelog.html":{}}}],["edit",{"_index":1963,"title":{},"body":{"interfaces/WvrWysiwygMenu.html":{}}}],["editor",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["editormodule",{"_index":1924,"title":{},"body":{"modules/WvrSharedModule.html":{}}}],["effects",{"_index":692,"title":{},"body":{"injectables/MessageManifestEffects.html":{},"index.html":{}}}],["effectsmodule",{"_index":1639,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["effectsmodule.forroot",{"_index":1743,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["elapsed",{"_index":1274,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["elem.removeattribute('wvr",{"_index":1742,"title":{},"body":{"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{}}}],["element",{"_index":399,"title":{},"body":{"injectables/ComponentRegistryService.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{},"index.html":{}}}],["element.classlist.remove('wvr",{"_index":1865,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["element.getattribute('id",{"_index":422,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["element.getattribute('wvr",{"_index":421,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["element.hasattribute('wvr",{"_index":420,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["element.insertadjacentelement('beforebegin",{"_index":1835,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["element.parentnode.nodename",{"_index":1809,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["elementref",{"_index":974,"title":{},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"directives/WvrContentProjectionDirective.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"interfaces/WvrThemeableComponent.html":{}}}],["elements",{"_index":1729,"title":{},"body":{"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{},"index.html":{}}}],["elements.foreach(element",{"_index":1730,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["elements/src/lib/core/action",{"_index":214,"title":{},"body":{"injectables/ActionRegistryService.html":{}}}],["elements/src/lib/core/animation.service.ts",{"_index":240,"title":{},"body":{"injectables/AnimationService.html":{}}}],["elements/src/lib/core/animation.service.ts:106",{"_index":261,"title":{},"body":{"injectables/AnimationService.html":{}}}],["elements/src/lib/core/animation.service.ts:20",{"_index":307,"title":{},"body":{"injectables/AnimationService.html":{}}}],["elements/src/lib/core/animation.service.ts:23",{"_index":257,"title":{},"body":{"injectables/AnimationService.html":{}}}],["elements/src/lib/core/animation.service.ts:28",{"_index":290,"title":{},"body":{"injectables/AnimationService.html":{}}}],["elements/src/lib/core/animation.service.ts:39",{"_index":282,"title":{},"body":{"injectables/AnimationService.html":{}}}],["elements/src/lib/core/animation.service.ts:47",{"_index":300,"title":{},"body":{"injectables/AnimationService.html":{}}}],["elements/src/lib/core/animation.service.ts:57",{"_index":270,"title":{},"body":{"injectables/AnimationService.html":{}}}],["elements/src/lib/core/animation.service.ts:70",{"_index":279,"title":{},"body":{"injectables/AnimationService.html":{}}}],["elements/src/lib/core/animation.service.ts:91",{"_index":296,"title":{},"body":{"injectables/AnimationService.html":{}}}],["elements/src/lib/core/component",{"_index":387,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["elements/src/lib/core/data",{"_index":1760,"title":{},"body":{"interfaces/WvrDataSelect.html":{}}}],["elements/src/lib/core/layout/layout.effects.ts",{"_index":442,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["elements/src/lib/core/layout/layout.effects.ts:10",{"_index":447,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["elements/src/lib/core/layout/layout.effects.ts:16",{"_index":458,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["elements/src/lib/core/layout/layout.effects.ts:25",{"_index":448,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["elements/src/lib/core/layout/layout.effects.ts:32",{"_index":449,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["elements/src/lib/core/layout/layout.reducers.ts",{"_index":1303,"title":{},"body":{"interfaces/State.html":{}}}],["elements/src/lib/core/layout/layout.ts",{"_index":439,"title":{},"body":{"interfaces/Layout.html":{}}}],["elements/src/lib/core/manifest/manifest",{"_index":588,"title":{},"body":{"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"miscellaneous/typealiases.html":{}}}],["elements/src/lib/core/manifest/manifest.effects.ts",{"_index":481,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["elements/src/lib/core/manifest/manifest.effects.ts:118",{"_index":519,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["elements/src/lib/core/manifest/manifest.effects.ts:126",{"_index":514,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["elements/src/lib/core/manifest/manifest.effects.ts:13",{"_index":487,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["elements/src/lib/core/manifest/manifest.effects.ts:22",{"_index":563,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["elements/src/lib/core/manifest/manifest.effects.ts:79",{"_index":513,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["elements/src/lib/core/manifest/manifest.reducers.ts",{"_index":1306,"title":{},"body":{"interfaces/State-1.html":{},"miscellaneous/functions.html":{}}}],["elements/src/lib/core/manifest/manifest.ts",{"_index":475,"title":{},"body":{"interfaces/Manifest.html":{}}}],["elements/src/lib/core/message",{"_index":608,"title":{},"body":{"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["elements/src/lib/core/message/message.service.ts",{"_index":813,"title":{},"body":{"injectables/MessageService.html":{}}}],["elements/src/lib/core/message/message.service.ts:116",{"_index":840,"title":{},"body":{"injectables/MessageService.html":{}}}],["elements/src/lib/core/message/message.service.ts:139",{"_index":845,"title":{},"body":{"injectables/MessageService.html":{}}}],["elements/src/lib/core/message/message.service.ts:14",{"_index":825,"title":{},"body":{"injectables/MessageService.html":{}}}],["elements/src/lib/core/message/message.service.ts:187",{"_index":862,"title":{},"body":{"injectables/MessageService.html":{}}}],["elements/src/lib/core/message/message.service.ts:200",{"_index":841,"title":{},"body":{"injectables/MessageService.html":{}}}],["elements/src/lib/core/message/message.service.ts:209",{"_index":863,"title":{},"body":{"injectables/MessageService.html":{}}}],["elements/src/lib/core/message/message.service.ts:218",{"_index":859,"title":{},"body":{"injectables/MessageService.html":{}}}],["elements/src/lib/core/message/message.service.ts:227",{"_index":867,"title":{},"body":{"injectables/MessageService.html":{}}}],["elements/src/lib/core/message/message.service.ts:236",{"_index":869,"title":{},"body":{"injectables/MessageService.html":{}}}],["elements/src/lib/core/message/message.service.ts:245",{"_index":874,"title":{},"body":{"injectables/MessageService.html":{}}}],["elements/src/lib/core/message/message.service.ts:29",{"_index":827,"title":{},"body":{"injectables/MessageService.html":{}}}],["elements/src/lib/core/message/message.service.ts:59",{"_index":833,"title":{},"body":{"injectables/MessageService.html":{}}}],["elements/src/lib/core/message/message.service.ts:79",{"_index":838,"title":{},"body":{"injectables/MessageService.html":{}}}],["elements/src/lib/core/modal/modal.effects.ts",{"_index":959,"title":{},"body":{"injectables/ModalEffects.html":{}}}],["elements/src/lib/core/modal/modal.effects.ts:5",{"_index":960,"title":{},"body":{"injectables/ModalEffects.html":{}}}],["elements/src/lib/core/modal/modal.reducers.ts",{"_index":1339,"title":{},"body":{"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["elements/src/lib/core/modal/modal.ts",{"_index":956,"title":{},"body":{"interfaces/Modal.html":{}}}],["elements/src/lib/core/ng",{"_index":962,"title":{},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{}}}],["elements/src/lib/core/rest/request",{"_index":982,"title":{},"body":{"interfaces/RequestOptions.html":{},"miscellaneous/typealiases.html":{}}}],["elements/src/lib/core/rest/request.ts",{"_index":981,"title":{},"body":{"interfaces/Request.html":{},"miscellaneous/typealiases.html":{}}}],["elements/src/lib/core/rest/rest.actions.ts",{"_index":2589,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts",{"_index":995,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:10",{"_index":1006,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:103",{"_index":1027,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:115",{"_index":1015,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:127",{"_index":1020,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:129",{"_index":1016,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:131",{"_index":1028,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:133",{"_index":1032,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:135",{"_index":1024,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:137",{"_index":1007,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:19",{"_index":1045,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:37",{"_index":1053,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:44",{"_index":1050,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:55",{"_index":1023,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:67",{"_index":1019,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:79",{"_index":1031,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.effects.ts:91",{"_index":1035,"title":{},"body":{"injectables/RestEffects.html":{}}}],["elements/src/lib/core/rest/rest.reducers.ts",{"_index":1349,"title":{},"body":{"interfaces/State-3.html":{}}}],["elements/src/lib/core/rest/rest.service.ts",{"_index":1062,"title":{},"body":{"injectables/RestService.html":{}}}],["elements/src/lib/core/rest/rest.service.ts:10",{"_index":1068,"title":{},"body":{"injectables/RestService.html":{}}}],["elements/src/lib/core/rest/rest.service.ts:16",{"_index":1075,"title":{},"body":{"injectables/RestService.html":{}}}],["elements/src/lib/core/rest/rest.service.ts:20",{"_index":1073,"title":{},"body":{"injectables/RestService.html":{}}}],["elements/src/lib/core/rest/rest.service.ts:24",{"_index":1079,"title":{},"body":{"injectables/RestService.html":{}}}],["elements/src/lib/core/rest/rest.service.ts:28",{"_index":1090,"title":{},"body":{"injectables/RestService.html":{}}}],["elements/src/lib/core/rest/rest.service.ts:32",{"_index":1077,"title":{},"body":{"injectables/RestService.html":{}}}],["elements/src/lib/core/rest/rest.service.ts:36",{"_index":1071,"title":{},"body":{"injectables/RestService.html":{}}}],["elements/src/lib/core/rest/rest.service.ts:40",{"_index":1084,"title":{},"body":{"injectables/RestService.html":{}}}],["elements/src/lib/core/rest/rest.service.ts:46",{"_index":1088,"title":{},"body":{"injectables/RestService.html":{}}}],["elements/src/lib/core/rest/rest.service.ts:70",{"_index":1081,"title":{},"body":{"injectables/RestService.html":{}}}],["elements/src/lib/core/store.ts",{"_index":1120,"title":{},"body":{"interfaces/RootState.html":{}}}],["elements/src/lib/core/theme/theme.effects.ts",{"_index":1391,"title":{},"body":{"injectables/ThemeEffects.html":{}}}],["elements/src/lib/core/theme/theme.effects.ts:6",{"_index":1393,"title":{},"body":{"injectables/ThemeEffects.html":{}}}],["elements/src/lib/core/theme/theme.reducers.ts",{"_index":1358,"title":{},"body":{"interfaces/State-4.html":{}}}],["elements/src/lib/core/theme/theme.service.ts",{"_index":1395,"title":{},"body":{"injectables/ThemeService.html":{}}}],["elements/src/lib/core/theme/theme.service.ts:18",{"_index":1416,"title":{},"body":{"injectables/ThemeService.html":{}}}],["elements/src/lib/core/theme/theme.service.ts:20",{"_index":1418,"title":{},"body":{"injectables/ThemeService.html":{}}}],["elements/src/lib/core/theme/theme.service.ts:22",{"_index":1417,"title":{},"body":{"injectables/ThemeService.html":{}}}],["elements/src/lib/core/theme/theme.service.ts:24",{"_index":1402,"title":{},"body":{"injectables/ThemeService.html":{}}}],["elements/src/lib/core/theme/theme.service.ts:41",{"_index":1410,"title":{},"body":{"injectables/ThemeService.html":{}}}],["elements/src/lib/core/theme/theme.service.ts:45",{"_index":1414,"title":{},"body":{"injectables/ThemeService.html":{}}}],["elements/src/lib/core/theme/theme.service.ts:50",{"_index":1415,"title":{},"body":{"injectables/ThemeService.html":{}}}],["elements/src/lib/core/theme/theme.service.ts:54",{"_index":1408,"title":{},"body":{"injectables/ThemeService.html":{}}}],["elements/src/lib/core/theme/theme.service.ts:59",{"_index":1406,"title":{},"body":{"injectables/ThemeService.html":{}}}],["elements/src/lib/core/theme/theme.service.ts:68",{"_index":1412,"title":{},"body":{"injectables/ThemeService.html":{}}}],["elements/src/lib/core/wvr",{"_index":1628,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["elements/src/lib/core/wysiwyg/wysiwyg.effects.ts",{"_index":1974,"title":{},"body":{"injectables/WysiwygEffects.html":{}}}],["elements/src/lib/core/wysiwyg/wysiwyg.reducers.ts",{"_index":1379,"title":{},"body":{"interfaces/State-5.html":{},"miscellaneous/functions.html":{}}}],["elements/src/lib/core/wysiwyg/wysiwyg.ts",{"_index":1973,"title":{},"body":{"interfaces/Wysiwyg.html":{}}}],["elements/src/lib/shared/alignment.enum.ts",{"_index":2429,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["elements/src/lib/shared/config/app",{"_index":362,"title":{},"body":{"interfaces/AppConfig.html":{}}}],["elements/src/lib/shared/directives/wvr",{"_index":1598,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{}}}],["elements/src/lib/shared/pipes/default.pipe.ts",{"_index":430,"title":{},"body":{"pipes/DefaultPipe.html":{}}}],["elements/src/lib/shared/pipes/default.pipe.ts:9",{"_index":436,"title":{},"body":{"pipes/DefaultPipe.html":{}}}],["elements/src/lib/shared/pipes/safe.pipe.ts",{"_index":1237,"title":{},"body":{"pipes/SafePipe.html":{}}}],["elements/src/lib/shared/pipes/safe.pipe.ts:17",{"_index":1242,"title":{},"body":{"pipes/SafePipe.html":{}}}],["elements/src/lib/shared/theme/theme",{"_index":1566,"title":{},"body":{"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{},"miscellaneous/typealiases.html":{}}}],["elements/src/lib/shared/utility/bootstrap.utility.ts",{"_index":1762,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["elements/src/lib/shared/utility/decorators.utility.ts",{"_index":1264,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["elements/src/lib/shared/wvr",{"_index":1583,"title":{},"body":{"interfaces/WvrAnimationComponent.html":{},"interfaces/WvrDataComponent.html":{},"modules/WvrSharedModule.html":{},"interfaces/WvrThemeableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["elements/src/lib/wvr",{"_index":7,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/MappingStrategy.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{}}}],["emitevent",{"_index":143,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["employed",{"_index":1904,"title":{},"body":{"components/WvrMessageManifestEntryComponent.html":{}}}],["empty",{"_index":831,"title":{},"body":{"injectables/MessageService.html":{}}}],["enableprodmode",{"_index":1763,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["encapsulates",{"_index":2332,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2476,"title":{},"body":{"index.html":{}}}],["enters",{"_index":1843,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["entities",{"_index":1336,"title":{},"body":{"interfaces/State-1.html":{}}}],["entityadapter",{"_index":707,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{}}}],["entitymap",{"_index":743,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["entitystate",{"_index":703,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{}}}],["entries",{"_index":477,"title":{},"body":{"interfaces/Manifest.html":{},"interfaces/MessageManifest.html":{},"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{},"changelog.html":{}}}],["entries.map(entry",{"_index":1846,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["entry",{"_index":284,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/RootState.html":{},"interfaces/State-1.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrDataSelect.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["entry.component",{"_index":1679,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["entry.component.ts",{"_index":1873,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["entry.component.ts:13",{"_index":1882,"title":{},"body":{"components/WvrManifestEntryComponent.html":{}}}],["entry.component.ts:14",{"_index":1905,"title":{},"body":{"components/WvrMessageManifestEntryComponent.html":{}}}],["entry.component.ts:15",{"_index":1879,"title":{},"body":{"components/WvrManifestEntryComponent.html":{}}}],["entry.component.ts:17",{"_index":1881,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["entry.component.ts:19",{"_index":1884,"title":{},"body":{"components/WvrManifestEntryComponent.html":{}}}],["entry.component.ts:20",{"_index":1902,"title":{},"body":{"components/WvrMessageManifestEntryComponent.html":{}}}],["entry.component.ts:21",{"_index":1883,"title":{},"body":{"components/WvrManifestEntryComponent.html":{}}}],["entry.component.ts:23",{"_index":1880,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["entry.component.ts:25",{"_index":1878,"title":{},"body":{"components/WvrManifestEntryComponent.html":{}}}],["entry.component.ts:26",{"_index":1907,"title":{},"body":{"components/WvrMessageManifestEntryComponent.html":{}}}],["entry.component.ts:29",{"_index":1903,"title":{},"body":{"components/WvrMessageManifestEntryComponent.html":{}}}],["entry.component.ts:32",{"_index":1899,"title":{},"body":{"components/WvrMessageManifestEntryComponent.html":{}}}],["entry.component.ts:34",{"_index":1885,"title":{},"body":{"components/WvrManifestEntryComponent.html":{}}}],["entry.component.ts:41",{"_index":1909,"title":{},"body":{"components/WvrMessageManifestEntryComponent.html":{}}}],["entry.id",{"_index":900,"title":{},"body":{"injectables/MessageService.html":{}}}],["entry.isintersecting",{"_index":1848,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["entry.map",{"_index":557,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["entry.mappingstrategy",{"_index":911,"title":{},"body":{"injectables/MessageService.html":{}}}],["entry.methods[0",{"_index":536,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["entry.name",{"_index":765,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["entry.options",{"_index":544,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["entry.path",{"_index":526,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["entry.target.childnodes[0",{"_index":1851,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["entry.target.insertadjacentelement('beforebegin",{"_index":1853,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["entry.target.parentnode.removechild(entry.target",{"_index":1854,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["entry.ts",{"_index":589,"title":{},"body":{"interfaces/ManifestEntry.html":{},"interfaces/MessageManifestEntry.html":{},"miscellaneous/typealiases.html":{}}}],["entry/wvr",{"_index":1678,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{}}}],["entrycomponents",{"_index":1746,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["entryname",{"_index":599,"title":{},"body":{"interfaces/ManifestEntryRequest.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/RootState.html":{}}}],["enum",{"_index":710,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["enumerable",{"_index":1299,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["enumerations",{"_index":2425,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1783,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["environment.production",{"_index":1784,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["eref",{"_index":977,"title":{},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"interfaces/WvrThemeableComponent.html":{}}}],["error",{"_index":590,"title":{},"body":{"interfaces/ManifestEntry.html":{},"interfaces/MessageManifestEntry.html":{},"injectables/MessageService.html":{},"injectables/RestEffects.html":{},"interfaces/State-3.html":{},"changelog.html":{}}}],["error('coremodule",{"_index":1749,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["error(`unable",{"_index":1259,"title":{},"body":{"pipes/SafePipe.html":{}}}],["etc",{"_index":2275,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":870,"title":{},"body":{"injectables/MessageService.html":{},"interfaces/WvrAnimationComponent.html":{},"license.html":{}}}],["events",{"_index":451,"title":{},"body":{"injectables/LayoutEffects.html":{},"interfaces/RequestOptions.html":{}}}],["execution",{"_index":1271,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["existing",{"_index":2465,"title":{},"body":{"index.html":{}}}],["expand/collapse",{"_index":2101,"title":{},"body":{"changelog.html":{}}}],["expanded",{"_index":2224,"title":{},"body":{"changelog.html":{}}}],["expanding",{"_index":2347,"title":{},"body":{"changelog.html":{}}}],["explore",{"_index":2326,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":45,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"interfaces/Layout.html":{},"injectables/LayoutEffects.html":{},"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/Modal.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"pipes/SafePipe.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrDataSelect.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{},"injectables/WysiwygEffects.html":{}}}],["exports",{"_index":1623,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{},"overview.html":{}}}],["expose",{"_index":2119,"title":{},"body":{"changelog.html":{}}}],["exposed",{"_index":2375,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":2552,"title":{},"body":{"license.html":{}}}],["expression",{"_index":922,"title":{},"body":{"injectables/MessageService.html":{}}}],["extends",{"_index":48,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{}}}],["extensible",{"_index":2273,"title":{},"body":{"changelog.html":{}}}],["externals",{"_index":2245,"title":{},"body":{"changelog.html":{}}}],["extract",{"_index":2124,"title":{},"body":{"changelog.html":{}}}],["extracted",{"_index":2292,"title":{},"body":{"changelog.html":{}}}],["extroplates",{"_index":1772,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["factory",{"_index":855,"title":{},"body":{"injectables/MessageService.html":{},"interfaces/RootState.html":{}}}],["failed",{"_index":596,"title":{},"body":{"interfaces/ManifestEntry.html":{},"interfaces/MessageManifestEntry.html":{}}}],["failing",{"_index":2214,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":2403,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":561,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/RestEffects.html":{},"miscellaneous/typealiases.html":{}}}],["fallback",{"_index":2277,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":75,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-2.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrThemeComponent.html":{}}}],["family",{"_index":109,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["features",{"_index":2253,"title":{},"body":{"changelog.html":{}}}],["fetch(configpath",{"_index":1797,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"interfaces/Layout.html":{},"injectables/LayoutEffects.html":{},"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/Modal.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"pipes/SafePipe.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrDataSelect.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{},"injectables/WysiwygEffects.html":{},"index.html":{}}}],["files",{"_index":2467,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":1266,"title":{},"body":{"interfaces/SelectOptions.html":{},"injectables/ThemeService.html":{},"interfaces/WvrElementDesc.html":{}}}],["filter(r",{"_index":1296,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["filter(themestate",{"_index":1429,"title":{},"body":{"injectables/ThemeService.html":{}}}],["filter(wvrelement",{"_index":1825,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["findmanifestentry",{"_index":1169,"title":{},"body":{"interfaces/RootState.html":{}}}],["findmanifestentry(manifestentities[manifestname",{"_index":1180,"title":{},"body":{"interfaces/RootState.html":{}}}],["findmessagemanifestentry",{"_index":1190,"title":{},"body":{"interfaces/RootState.html":{}}}],["firefox",{"_index":2298,"title":{},"body":{"changelog.html":{}}}],["firewall",{"_index":2376,"title":{},"body":{"changelog.html":{}}}],["firing",{"_index":2267,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":2557,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1986,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":2039,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":2263,"title":{},"body":{"changelog.html":{}}}],["flicker",{"_index":2204,"title":{},"body":{"changelog.html":{}}}],["flickers",{"_index":2385,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":92,"title":{},"body":{"interfaces/ActionAndProps.html":{},"changelog.html":{}}}],["focuscolor",{"_index":1572,"title":{},"body":{"interfaces/ThemeVariant.html":{}}}],["following",{"_index":2054,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["font",{"_index":108,"title":{},"body":{"interfaces/ActionAndProps.html":{},"changelog.html":{}}}],["fontfamily",{"_index":112,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["fontsize",{"_index":113,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["fontweight",{"_index":115,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["footer",{"_index":1723,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["footer's",{"_index":2408,"title":{},"body":{"changelog.html":{}}}],["footer.component",{"_index":1660,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["footer/wvr",{"_index":1659,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["foreach(animname",{"_index":332,"title":{},"body":{"injectables/AnimationService.html":{}}}],["foreach(elem",{"_index":1741,"title":{},"body":{"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{}}}],["foreach(element",{"_index":1828,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["foreach(wvrelement",{"_index":1826,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["form",{"_index":193,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["format",{"_index":1964,"title":{},"body":{"interfaces/WvrWysiwygMenu.html":{}}}],["formsmodule",{"_index":1918,"title":{},"body":{"modules/WvrSharedModule.html":{}}}],["found",{"_index":201,"title":{},"body":{"interfaces/ActionAndProps.html":{},"index.html":{}}}],["frame",{"_index":630,"title":{},"body":{"interfaces/MessageManifest.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{}}}],["frame.command",{"_index":941,"title":{},"body":{"injectables/MessageService.html":{}}}],["frame.headers",{"_index":943,"title":{},"body":{"injectables/MessageService.html":{}}}],["free",{"_index":2521,"title":{},"body":{"license.html":{}}}],["from(this.clients",{"_index":905,"title":{},"body":{"injectables/MessageService.html":{}}}],["fromevent",{"_index":463,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["fromevent(window",{"_index":453,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["fromlayout",{"_index":1135,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromlayout.initialstate",{"_index":1148,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromlayout.reducer",{"_index":1156,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromlayout.state",{"_index":1123,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommanifest",{"_index":1137,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommanifest.initialstate",{"_index":1149,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommanifest.reducer",{"_index":1157,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommanifest.selectallmanifests",{"_index":1172,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommanifest.selectcurrentrequest",{"_index":1175,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommanifest.selectmanifestentities",{"_index":1171,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommanifest.selectmanifestnames",{"_index":1170,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommanifest.selectmanifesttotal",{"_index":1173,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommanifest.selectpendingrequests",{"_index":1176,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommanifest.state",{"_index":1124,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommessagemanifest",{"_index":1139,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommessagemanifest.initialstate",{"_index":1150,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommessagemanifest.messagemanifeststate",{"_index":1125,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommessagemanifest.reducer",{"_index":1158,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommessagemanifest.selectallmanifests",{"_index":1196,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommessagemanifest.selectcurrentmessage",{"_index":1200,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommessagemanifest.selectmanifestentities",{"_index":1194,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommessagemanifest.selectmanifestnames",{"_index":1192,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommessagemanifest.selectmanifesttotal",{"_index":1198,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommessagemanifest.selectpendingmessage",{"_index":1202,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommodal",{"_index":1144,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommodal.initialstate",{"_index":1151,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommodal.reducer",{"_index":1159,"title":{},"body":{"interfaces/RootState.html":{}}}],["frommodal.state",{"_index":1126,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromobject",{"_index":601,"title":{},"body":{"interfaces/ManifestEntryRequest.html":{},"interfaces/Request.html":{}}}],["fromrest",{"_index":1140,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromrest.initialstate",{"_index":1152,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromrest.reducer",{"_index":1160,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromrest.selectrequest",{"_index":1187,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromrest.state",{"_index":1127,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromstring",{"_index":602,"title":{},"body":{"interfaces/ManifestEntryRequest.html":{},"interfaces/Request.html":{}}}],["fromtheme",{"_index":1142,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromtheme.initialstate",{"_index":1153,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromtheme.reducer",{"_index":1161,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromtheme.state",{"_index":1128,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromwysiwyg",{"_index":1146,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromwysiwyg.initialstate",{"_index":1154,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromwysiwyg.reducer",{"_index":1162,"title":{},"body":{"interfaces/RootState.html":{}}}],["fromwysiwyg.state",{"_index":1129,"title":{},"body":{"interfaces/RootState.html":{}}}],["function",{"_index":182,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/AnimationService.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageManifestState.html":{},"injectables/RestService.html":{},"interfaces/SelectOptions.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["function(...args",{"_index":1286,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["function(target",{"_index":1293,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["functions",{"_index":717,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/MessageManifestState.html":{},"interfaces/SelectOptions.html":{},"interfaces/State-1.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":2542,"title":{},"body":{"license.html":{}}}],["further",{"_index":2506,"title":{},"body":{"index.html":{}}}],["get(manifest.name",{"_index":906,"title":{},"body":{"injectables/MessageService.html":{}}}],["get(request",{"_index":1072,"title":{},"body":{"injectables/RestService.html":{}}}],["getactions",{"_index":221,"title":{},"body":{"injectables/ActionRegistryService.html":{}}}],["getactions(key",{"_index":226,"title":{},"body":{"injectables/ActionRegistryService.html":{}}}],["getcomponent",{"_index":391,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["getcomponent(id",{"_index":395,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["getcomponentbyelement",{"_index":392,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["getcomponentbyelement(element",{"_index":397,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["getcomputedstyle(themeablecomponent.eref.nativeelement",{"_index":1446,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getrequest",{"_index":997,"title":{},"body":{"injectables/RestEffects.html":{}}}],["getter",{"_index":1294,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["getting",{"_index":1975,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getwvrdata",{"_index":1755,"title":{},"body":{"interfaces/WvrDataComponent.html":{}}}],["gigibytes",{"_index":2156,"title":{},"body":{"changelog.html":{}}}],["git+https://github.com/tamulib/weaver",{"_index":2576,"title":{},"body":{"properties.html":{}}}],["given",{"_index":828,"title":{},"body":{"injectables/MessageService.html":{},"index.html":{}}}],["global",{"_index":2334,"title":{},"body":{"changelog.html":{}}}],["go",{"_index":1116,"title":{},"body":{"injectables/RestService.html":{}}}],["granted",{"_index":2520,"title":{},"body":{"license.html":{}}}],["greater",{"_index":2089,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":1547,"title":{},"body":{"injectables/ThemeService.html":{},"interfaces/WvrThemeableComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["handeling",{"_index":243,"title":{},"body":{"injectables/AnimationService.html":{}}}],["handle",{"_index":1047,"title":{},"body":{"injectables/RestEffects.html":{}}}],["handlebars",{"_index":2291,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["handles",{"_index":156,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["handling",{"_index":2023,"title":{},"body":{"changelog.html":{}}}],["hardcodes",{"_index":2166,"title":{},"body":{"changelog.html":{}}}],["hasnativeid",{"_index":419,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["haswvrdata",{"_index":1756,"title":{},"body":{"interfaces/WvrDataComponent.html":{}}}],["header",{"_index":992,"title":{},"body":{"interfaces/RequestOptions.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["header.component",{"_index":1663,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["header/wvr",{"_index":1662,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["headers",{"_index":942,"title":{},"body":{"injectables/MessageService.html":{},"interfaces/RequestOptions.html":{}}}],["heartbeatincoming",{"_index":615,"title":{},"body":{"interfaces/MessageClientOptions.html":{},"injectables/MessageService.html":{}}}],["heartbeatoutgoing",{"_index":616,"title":{},"body":{"interfaces/MessageClientOptions.html":{},"injectables/MessageService.html":{}}}],["height",{"_index":117,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/WvrElementDesc.html":{},"changelog.html":{}}}],["help",{"_index":1965,"title":{},"body":{"interfaces/WvrWysiwygMenu.html":{}}}],["helpers",{"_index":852,"title":{},"body":{"injectables/MessageService.html":{},"changelog.html":{}}}],["here",{"_index":1117,"title":{},"body":{"injectables/RestService.html":{}}}],["hereby",{"_index":2519,"title":{},"body":{"license.html":{}}}],["hextorgb",{"_index":1420,"title":{},"body":{"injectables/ThemeService.html":{}}}],["hextorgb(mix(yiqconstrast(yiq(luminance(buttonbgvalue",{"_index":1518,"title":{},"body":{"injectables/ThemeService.html":{}}}],["hextorgb(mix(yiqconstrast(yiq(luminance(defaultbgvalue",{"_index":1541,"title":{},"body":{"injectables/ThemeService.html":{}}}],["hextorgb(value",{"_index":1498,"title":{},"body":{"injectables/ThemeService.html":{}}}],["hidden",{"_index":1870,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["hide",{"_index":1740,"title":{},"body":{"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{}}}],["holders",{"_index":2562,"title":{},"body":{"license.html":{}}}],["hooks",{"_index":2393,"title":{},"body":{"changelog.html":{}}}],["hostbinding",{"_index":21,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["hostbinding('style",{"_index":104,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["hours",{"_index":2155,"title":{},"body":{"changelog.html":{}}}],["hover",{"_index":86,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ThemeService.html":{},"changelog.html":{}}}],["hovercolor",{"_index":1573,"title":{},"body":{"interfaces/ThemeVariant.html":{}}}],["href",{"_index":70,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["html",{"_index":409,"title":{},"body":{"injectables/ComponentRegistryService.html":{},"pipes/SafePipe.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"index.html":{}}}],["html_id_base",{"_index":390,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["htmlelement",{"_index":278,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["htmlelement).dataset",{"_index":178,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["htmlid",{"_index":50,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ComponentRegistryService.html":{}}}],["htmltemplateelement).content.childnodes[0",{"_index":1852,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["http",{"_index":1069,"title":{},"body":{"injectables/RestService.html":{}}}],["httpclient",{"_index":1067,"title":{},"body":{"injectables/RestService.html":{}}}],["httpclientmodule",{"_index":1634,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["httpparams",{"_index":987,"title":{},"body":{"interfaces/RequestOptions.html":{},"injectables/RestService.html":{}}}],["httpparams(httpparamsoptions",{"_index":1111,"title":{},"body":{"injectables/RestService.html":{}}}],["httpparamsoptions",{"_index":1091,"title":{},"body":{"injectables/RestService.html":{}}}],["httpparamsoptions[request.bodyhttpparams",{"_index":1110,"title":{},"body":{"injectables/RestService.html":{}}}],["human",{"_index":1900,"title":{},"body":{"components/WvrMessageManifestEntryComponent.html":{}}}],["icon",{"_index":1724,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["icon.component",{"_index":1666,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["icon/wvr",{"_index":1665,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["icons",{"_index":2344,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":326,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/RootState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{},"injectables/ThemeService.html":{},"interfaces/Wysiwyg.html":{}}}],["identifier",{"_index":287,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"interfaces/MessageManifestEntry.html":{},"injectables/MessageService.html":{}}}],["identifiers",{"_index":2324,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":735,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["iframe",{"_index":876,"title":{},"body":{"injectables/MessageService.html":{}}}],["ignore",{"_index":323,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{}}}],["imessage",{"_index":877,"title":{},"body":{"injectables/MessageService.html":{}}}],["immediately",{"_index":2455,"title":{},"body":{"index.html":{}}}],["implements",{"_index":49,"title":{},"body":{"interfaces/ActionAndProps.html":{},"pipes/DefaultPipe.html":{},"injectables/LayoutEffects.html":{},"pipes/SafePipe.html":{},"injectables/ThemeService.html":{},"directives/WvrContentProjectionDirective.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["implied",{"_index":2553,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"injectables/LayoutEffects.html":{},"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"pipes/SafePipe.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariants.html":{},"directives/WvrContentProjectionDirective.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"injectables/WysiwygEffects.html":{}}}],["imports",{"_index":1745,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["improvements",{"_index":2261,"title":{},"body":{"changelog.html":{}}}],["inadequate",{"_index":2160,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":2225,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":2547,"title":{},"body":{"license.html":{}}}],["including",{"_index":2529,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":2158,"title":{},"body":{"changelog.html":{}}}],["incrementing",{"_index":411,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"interfaces/Layout.html":{},"injectables/LayoutEffects.html":{},"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/Modal.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrDataSelect.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indicator",{"_index":2105,"title":{},"body":{"changelog.html":{}}}],["infinitely",{"_index":888,"title":{},"body":{"injectables/MessageService.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"interfaces/Layout.html":{},"injectables/LayoutEffects.html":{},"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/Modal.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"pipes/SafePipe.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrDataSelect.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{},"injectables/WysiwygEffects.html":{}}}],["initialcontent",{"_index":1387,"title":{},"body":{"interfaces/State-5.html":{},"interfaces/Wysiwyg.html":{}}}],["initialization",{"_index":272,"title":{},"body":{"injectables/AnimationService.html":{}}}],["initializationmethod",{"_index":335,"title":{},"body":{"injectables/AnimationService.html":{}}}],["initializationmethod(this.animationstates.get(stateid",{"_index":339,"title":{},"body":{"injectables/AnimationService.html":{}}}],["initializeanimationelement",{"_index":249,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/WvrAnimationComponent.html":{}}}],["initializeanimationelement(stateid",{"_index":266,"title":{},"body":{"injectables/AnimationService.html":{}}}],["initializeanimationregistration",{"_index":1585,"title":{},"body":{"interfaces/WvrAnimationComponent.html":{}}}],["initialstate",{"_index":722,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/RootState.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{}}}],["injectable",{"_index":212,"title":{"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"injectables/WysiwygEffects.html":{}},"body":{"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"injectables/WysiwygEffects.html":{}}}],["injectables",{"_index":213,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"injectables/WysiwygEffects.html":{},"overview.html":{}}}],["injection",{"_index":382,"title":{},"body":{"interfaces/AppConfig.html":{}}}],["injectiontoken",{"_index":381,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/RootState.html":{}}}],["injectiontoken('app_config",{"_index":385,"title":{},"body":{"interfaces/AppConfig.html":{}}}],["injectiontoken>('root",{"_index":1164,"title":{},"body":{"interfaces/RootState.html":{}}}],["injector",{"_index":22,"title":{},"body":{"interfaces/ActionAndProps.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{}}}],["injector.get(actionregistryservice",{"_index":152,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["injector.get(document",{"_index":1738,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["injects",{"_index":1794,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["inline",{"_index":2029,"title":{},"body":{"changelog.html":{}}}],["input",{"_index":23,"title":{},"body":{"interfaces/ActionAndProps.html":{},"directives/WvrContentProjectionDirective.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["input('template",{"_index":1611,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{}}}],["input('wvrcontentprojection",{"_index":1608,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{}}}],["inputs",{"_index":1601,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["insert",{"_index":1966,"title":{},"body":{"interfaces/WvrWysiwygMenu.html":{}}}],["inside",{"_index":2384,"title":{},"body":{"changelog.html":{}}}],["inspection",{"_index":2117,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":2464,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2457,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2458,"title":{},"body":{"index.html":{}}}],["instead",{"_index":2386,"title":{},"body":{"changelog.html":{}}}],["intead",{"_index":2228,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":2345,"title":{},"body":{"changelog.html":{}}}],["intending",{"_index":2482,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionAndProps.html":{},"interfaces/AppConfig.html":{},"interfaces/Layout.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"interfaces/Modal.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"interfaces/RootState.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{},"interfaces/WvrAnimationComponent.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrDataSelect.html":{},"interfaces/WvrElementDesc.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{}},"body":{"interfaces/ActionAndProps.html":{},"interfaces/AppConfig.html":{},"interfaces/Layout.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"interfaces/Modal.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"interfaces/RootState.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{},"interfaces/WvrAnimationComponent.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrDataSelect.html":{},"interfaces/WvrElementDesc.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/AppConfig.html":{},"interfaces/Layout.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"interfaces/Modal.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"interfaces/RootState.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{},"interfaces/WvrAnimationComponent.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrDataSelect.html":{},"interfaces/WvrElementDesc.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{},"overview.html":{}}}],["interigates",{"_index":1769,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["intersectionobserver(entries",{"_index":1845,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["interval",{"_index":1458,"title":{},"body":{"injectables/ThemeService.html":{}}}],["intialized",{"_index":155,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["introduces",{"_index":2335,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":1262,"title":{},"body":{"pipes/SafePipe.html":{},"interfaces/SelectOptions.html":{}}}],["isdevmode",{"_index":1764,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["ismobile",{"_index":440,"title":{},"body":{"interfaces/Layout.html":{},"injectables/LayoutEffects.html":{},"interfaces/State.html":{}}}],["ismobileagent",{"_index":2191,"title":{},"body":{"changelog.html":{}}}],["issue",{"_index":2104,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":1994,"title":{},"body":{"changelog.html":{}}}],["istanbul",{"_index":322,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{}}}],["item",{"_index":1548,"title":{},"body":{"injectables/ThemeService.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["item.component",{"_index":1675,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["item/wvr",{"_index":1674,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["items",{"_index":1971,"title":{},"body":{"interfaces/WvrwysiwygSubMenu.html":{},"changelog.html":{}}}],["ivy",{"_index":2148,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":2450,"title":{},"body":{"index.html":{}}}],["join",{"_index":206,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["join(v",{"_index":534,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["json",{"_index":990,"title":{},"body":{"interfaces/RequestOptions.html":{},"changelog.html":{}}}],["json.parse(response.body",{"_index":913,"title":{},"body":{"injectables/MessageService.html":{}}}],["json5",{"_index":25,"title":{},"body":{"interfaces/ActionAndProps.html":{},"components/WvrThemeComponent.html":{}}}],["json5.parse(value",{"_index":133,"title":{},"body":{"interfaces/ActionAndProps.html":{},"components/WvrThemeComponent.html":{}}}],["jsonparse",{"_index":919,"title":{},"body":{"injectables/MessageService.html":{},"miscellaneous/typealiases.html":{}}}],["k",{"_index":532,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/ThemeService.html":{}}}],["karma",{"_index":2094,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":231,"title":{},"body":{"injectables/ActionRegistryService.html":{},"interfaces/MessageClientOptions.html":{},"injectables/MessageService.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"injectables/ThemeService.html":{},"interfaces/WvrThemeableComponent.html":{}}}],["keys",{"_index":893,"title":{},"body":{"injectables/MessageService.html":{}}}],["kind",{"_index":2551,"title":{},"body":{"license.html":{}}}],["known",{"_index":208,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/AnimationService.html":{}}}],["label",{"_index":2100,"title":{},"body":{"changelog.html":{}}}],["landing",{"_index":2405,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":58,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["last",{"_index":593,"title":{},"body":{"interfaces/ManifestEntry.html":{},"interfaces/MessageManifestEntry.html":{}}}],["latest",{"_index":2461,"title":{},"body":{"index.html":{}}}],["layout",{"_index":438,"title":{"interfaces/Layout.html":{}},"body":{"interfaces/Layout.html":{},"interfaces/RootState.html":{},"interfaces/State.html":{},"changelog.html":{}}}],["layout.actions",{"_index":471,"title":{},"body":{"injectables/LayoutEffects.html":{},"interfaces/State.html":{}}}],["layout/layout.effects",{"_index":1705,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["layout/layout.reducers",{"_index":1136,"title":{},"body":{"interfaces/RootState.html":{}}}],["layoutactions",{"_index":470,"title":{},"body":{"injectables/LayoutEffects.html":{},"interfaces/State.html":{}}}],["layoutactions.setismobile",{"_index":472,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["layouteffects",{"_index":441,"title":{"injectables/LayoutEffects.html":{}},"body":{"injectables/LayoutEffects.html":{},"modules/WvrCoreModule.html":{}}}],["layouts",{"_index":2390,"title":{},"body":{"changelog.html":{}}}],["layoutstate",{"_index":1223,"title":{},"body":{"interfaces/RootState.html":{}}}],["layoutstate?.layout.ismobile",{"_index":1224,"title":{},"body":{"interfaces/RootState.html":{}}}],["lazy",{"_index":1719,"title":{},"body":{"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{}}}],["lazyloadweaverelement",{"_index":1807,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["lazyloadweaverelement(element",{"_index":1829,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["lazyloadweaverelement(element.parentnode",{"_index":1810,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["leak",{"_index":2153,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":2081,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["legend",{"_index":1619,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["length",{"_index":1104,"title":{},"body":{"injectables/RestService.html":{},"injectables/ThemeService.html":{}}}],["level",{"_index":1462,"title":{},"body":{"injectables/ThemeService.html":{}}}],["li",{"_index":1726,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["li.component",{"_index":1690,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["li/wvr",{"_index":1689,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["liability",{"_index":2566,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2563,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":2365,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["library",{"_index":2091,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":2511,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["light",{"_index":1455,"title":{},"body":{"injectables/ThemeService.html":{},"interfaces/ThemeVariants.html":{}}}],["lighthouse",{"_index":2213,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":2530,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2554,"title":{},"body":{"license.html":{}}}],["line",{"_index":116,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/RestService.html":{},"injectables/ThemeService.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["line:arrow",{"_index":759,"title":{},"body":{"interfaces/MessageManifestState.html":{},"injectables/RestEffects.html":{},"interfaces/State-1.html":{}}}],["line:increment",{"_index":413,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["line:max",{"_index":1103,"title":{},"body":{"injectables/RestService.html":{},"injectables/ThemeService.html":{}}}],["line:no",{"_index":1287,"title":{},"body":{"interfaces/SelectOptions.html":{},"directives/WvrContentProjectionDirective.html":{}}}],["line:only",{"_index":715,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/SelectOptions.html":{},"interfaces/State-1.html":{}}}],["line:prefer",{"_index":181,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/MappingStrategy.html":{},"injectables/RestService.html":{},"injectables/ThemeService.html":{}}}],["line:semicolon",{"_index":768,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["line:typedef",{"_index":791,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/SelectOptions.html":{},"interfaces/State-1.html":{}}}],["lineheight",{"_index":118,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["link",{"_index":66,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["links",{"_index":2067,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":1546,"title":{},"body":{"injectables/ThemeService.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["list.component",{"_index":1672,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["list/wvr",{"_index":1671,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["listgroupitembackgroundlevel",{"_index":1549,"title":{},"body":{"injectables/ThemeService.html":{}}}],["listgroupitembgvalue",{"_index":1551,"title":{},"body":{"injectables/ThemeService.html":{}}}],["listgroupitemcolorlevel",{"_index":1550,"title":{},"body":{"injectables/ThemeService.html":{}}}],["listgroupitemcolorvalue",{"_index":1554,"title":{},"body":{"injectables/ThemeService.html":{}}}],["lists",{"_index":2315,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":268,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/MessageManifest.html":{},"injectables/NgBindingsService.html":{},"interfaces/RequestOptions.html":{},"interfaces/State-4.html":{},"injectables/ThemeService.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrThemeableComponent.html":{}}}],["load",{"_index":1811,"title":{},"body":{"interfaces/WvrElementDesc.html":{},"changelog.html":{}}}],["loaded",{"_index":1751,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["loading",{"_index":1866,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["loading:not(body",{"_index":1864,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["local",{"_index":2057,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["locally",{"_index":2477,"title":{},"body":{"index.html":{}}}],["located",{"_index":2487,"title":{},"body":{"index.html":{}}}],["location",{"_index":372,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/WvrElementDesc.html":{}}}],["locked",{"_index":2016,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":2159,"title":{},"body":{"changelog.html":{}}}],["logo",{"_index":2308,"title":{},"body":{"changelog.html":{}}}],["long_polling",{"_index":2590,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["longer",{"_index":2031,"title":{},"body":{"changelog.html":{}}}],["luminance",{"_index":1421,"title":{},"body":{"injectables/ThemeService.html":{}}}],["luminance(value",{"_index":1510,"title":{},"body":{"injectables/ThemeService.html":{}}}],["m.entryname",{"_index":778,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["m.manifestname",{"_index":776,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["made",{"_index":2446,"title":{},"body":{"index.html":{}}}],["maintain",{"_index":2178,"title":{},"body":{"changelog.html":{}}}],["maintained",{"_index":2032,"title":{},"body":{"changelog.html":{}}}],["manifes",{"_index":1901,"title":{},"body":{"components/WvrMessageManifestEntryComponent.html":{}}}],["manifest",{"_index":474,"title":{"interfaces/Manifest.html":{}},"body":{"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/RootState.html":{},"interfaces/State-1.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrDataSelect.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["manifest.actions",{"_index":575,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/State-1.html":{}}}],["manifest.baseurl",{"_index":542,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["manifest.brokerurl",{"_index":883,"title":{},"body":{"injectables/MessageService.html":{}}}],["manifest.component",{"_index":1681,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{}}}],["manifest.effects",{"_index":1707,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["manifest.effects.ts",{"_index":632,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["manifest.effects.ts:107",{"_index":685,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["manifest.effects.ts:123",{"_index":659,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["manifest.effects.ts:15",{"_index":642,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["manifest.effects.ts:25",{"_index":670,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["manifest.effects.ts:33",{"_index":650,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["manifest.effects.ts:49",{"_index":655,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["manifest.effects.ts:64",{"_index":664,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["manifest.effects.ts:80",{"_index":666,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["manifest.effects.ts:90",{"_index":680,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["manifest.entries.filter(e",{"_index":790,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["manifest.entries.filter(entry",{"_index":899,"title":{},"body":{"injectables/MessageService.html":{}}}],["manifest.entries.find(e",{"_index":508,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/RootState.html":{}}}],["manifest.entries.map(entry",{"_index":653,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["manifest.name",{"_index":719,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["manifest.options",{"_index":892,"title":{},"body":{"injectables/MessageService.html":{}}}],["manifest.options[key",{"_index":894,"title":{},"body":{"injectables/MessageService.html":{}}}],["manifest.reducers",{"_index":628,"title":{},"body":{"interfaces/MessageManifest.html":{},"interfaces/RootState.html":{}}}],["manifest.reducers.ts",{"_index":702,"title":{},"body":{"interfaces/MessageManifestState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["manifest.ts",{"_index":618,"title":{},"body":{"interfaces/MessageManifest.html":{}}}],["manifest/manifest",{"_index":1134,"title":{},"body":{"interfaces/RootState.html":{}}}],["manifest/manifest.effects",{"_index":1706,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["manifest/manifest.reducers",{"_index":1138,"title":{},"body":{"interfaces/RootState.html":{}}}],["manifest/mapping",{"_index":604,"title":{},"body":{"interfaces/MappingStrategy.html":{}}}],["manifest/message",{"_index":609,"title":{},"body":{"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/RootState.html":{},"modules/WvrCoreModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["manifest/wvr",{"_index":1677,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{}}}],["manifestactions",{"_index":574,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/State-1.html":{}}}],["manifestactions.addmanifest",{"_index":490,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["manifestactions.addmanifests",{"_index":493,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["manifestactions.queuerequest",{"_index":524,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["manifestactions.setmanifest",{"_index":491,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["manifestactions.submitrequest",{"_index":518,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["manifestactions.updatemanifest",{"_index":495,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["manifestactions.updatemanifests",{"_index":496,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["manifestactions.upsertmanifest",{"_index":492,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["manifestactions.upsertmanifests",{"_index":494,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["manifesteffects",{"_index":480,"title":{"injectables/ManifestEffects.html":{}},"body":{"injectables/ManifestEffects.html":{},"modules/WvrCoreModule.html":{}}}],["manifestentities",{"_index":1177,"title":{},"body":{"interfaces/RootState.html":{}}}],["manifestentities[manifestname",{"_index":1178,"title":{},"body":{"interfaces/RootState.html":{}}}],["manifestentry",{"_index":478,"title":{"interfaces/ManifestEntry.html":{}},"body":{"interfaces/Manifest.html":{},"interfaces/ManifestEntry.html":{},"interfaces/RootState.html":{}}}],["manifestentry.error",{"_index":1183,"title":{},"body":{"interfaces/RootState.html":{}}}],["manifestentry.response",{"_index":1181,"title":{},"body":{"interfaces/RootState.html":{}}}],["manifestentryrequest",{"_index":597,"title":{"interfaces/ManifestEntryRequest.html":{}},"body":{"interfaces/ManifestEntryRequest.html":{},"interfaces/State-1.html":{}}}],["manifestname",{"_index":600,"title":{},"body":{"interfaces/ManifestEntryRequest.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/RootState.html":{}}}],["manifestreducer",{"_index":1308,"title":{},"body":{"interfaces/State-1.html":{}}}],["manifestreducer(state",{"_index":1335,"title":{},"body":{"interfaces/State-1.html":{}}}],["manifests",{"_index":540,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/MessageManifestState.html":{},"interfaces/RootState.html":{},"interfaces/State-1.html":{}}}],["manifests[request.manifestname",{"_index":507,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["map",{"_index":306,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageClientOptions.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"injectables/MessageService.html":{},"interfaces/Request.html":{},"injectables/RestEffects.html":{},"injectables/ThemeService.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["map(([request",{"_index":523,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["map(action",{"_index":1009,"title":{},"body":{"injectables/RestEffects.html":{}}}],["map(entry",{"_index":901,"title":{},"body":{"injectables/MessageService.html":{}}}],["map(id",{"_index":902,"title":{},"body":{"injectables/MessageService.html":{}}}],["map(manifest",{"_index":668,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["map(object.entries(request.options.pathvariables",{"_index":530,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["map(request",{"_index":517,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["map(response",{"_index":1038,"title":{},"body":{"injectables/RestEffects.html":{}}}],["map(subscription",{"_index":675,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["map(wvrelement",{"_index":1816,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["mapping",{"_index":450,"title":{},"body":{"injectables/LayoutEffects.html":{},"interfaces/MessageManifest.html":{},"interfaces/MessageManifestEntry.html":{},"miscellaneous/typealiases.html":{}}}],["mappingstrategy",{"_index":603,"title":{"interfaces/MappingStrategy.html":{}},"body":{"interfaces/MappingStrategy.html":{},"interfaces/MessageManifest.html":{},"interfaces/MessageManifestEntry.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["markup",{"_index":2445,"title":{},"body":{"index.html":{}}}],["matching",{"_index":211,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"interfaces/Layout.html":{},"injectables/LayoutEffects.html":{},"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/Modal.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"pipes/SafePipe.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrDataSelect.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{},"injectables/WysiwygEffects.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["math.abs(alertbackgroundlevel",{"_index":1481,"title":{},"body":{"injectables/ThemeService.html":{}}}],["math.abs(alertborderlevel",{"_index":1485,"title":{},"body":{"injectables/ThemeService.html":{}}}],["math.abs(alertcolorlevel",{"_index":1488,"title":{},"body":{"injectables/ThemeService.html":{}}}],["math.abs(listgroupitembackgroundlevel",{"_index":1553,"title":{},"body":{"injectables/ThemeService.html":{}}}],["math.abs(listgroupitemcolorlevel",{"_index":1556,"title":{},"body":{"injectables/ThemeService.html":{}}}],["math.abs(tablebackgroundlevel",{"_index":1562,"title":{},"body":{"injectables/ThemeService.html":{}}}],["math.abs(tableborderlevel",{"_index":1565,"title":{},"body":{"injectables/ThemeService.html":{}}}],["math.random",{"_index":327,"title":{},"body":{"injectables/AnimationService.html":{}}}],["mechanism",{"_index":2181,"title":{},"body":{"changelog.html":{}}}],["memoizedselector",{"_index":1265,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["memory",{"_index":2143,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1970,"title":{},"body":{"interfaces/WvrWysiwygMenu.html":{},"changelog.html":{}}}],["menu.ts",{"_index":1962,"title":{},"body":{"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{}}}],["menus",{"_index":2053,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":2556,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2533,"title":{},"body":{"license.html":{}}}],["merged",{"_index":592,"title":{},"body":{"interfaces/ManifestEntry.html":{}}}],["mergemap",{"_index":564,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{}}}],["mergemap(action",{"_index":672,"title":{},"body":{"injectables/MessageManifestEffects.html":{},"injectables/RestEffects.html":{}}}],["mergemap(manifest",{"_index":645,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["mergemap(request",{"_index":497,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["message",{"_index":624,"title":{},"body":{"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/RootState.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["message.entryname",{"_index":770,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["message.manifestname",{"_index":777,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["message.ts",{"_index":700,"title":{},"body":{"interfaces/MessageManifestEntryMessage.html":{}}}],["messageclientoptions",{"_index":607,"title":{"interfaces/MessageClientOptions.html":{}},"body":{"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{}}}],["messageclientprotocol",{"_index":623,"title":{},"body":{"interfaces/MessageManifest.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"miscellaneous/typealiases.html":{}}}],["messageconfig",{"_index":882,"title":{},"body":{"injectables/MessageService.html":{}}}],["messageconfig[key",{"_index":895,"title":{},"body":{"injectables/MessageService.html":{}}}],["messagemanifest",{"_index":617,"title":{"interfaces/MessageManifest.html":{}},"body":{"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/RootState.html":{},"miscellaneous/functions.html":{}}}],["messagemanifestactions",{"_index":686,"title":{},"body":{"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{}}}],["messagemanifestactions.connectmanifest",{"_index":669,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["messagemanifestactions.connectmanifestsuccess",{"_index":647,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["messagemanifestactions.disconnectmanifestsuccess",{"_index":662,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["messagemanifestactions.subscribemanifest",{"_index":654,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["messagemanifestactions.subscribemanifestsuccess",{"_index":676,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["messagemanifestactions.unsubscribemanifestsuccess",{"_index":684,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["messagemanifestadded",{"_index":638,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["messagemanifesteffects",{"_index":631,"title":{"injectables/MessageManifestEffects.html":{}},"body":{"injectables/MessageManifestEffects.html":{},"modules/WvrCoreModule.html":{}}}],["messagemanifestentities",{"_index":1204,"title":{},"body":{"interfaces/RootState.html":{}}}],["messagemanifestentities[manifestname",{"_index":1205,"title":{},"body":{"interfaces/RootState.html":{}}}],["messagemanifestentry",{"_index":625,"title":{"interfaces/MessageManifestEntry.html":{}},"body":{"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"injectables/MessageService.html":{},"interfaces/RootState.html":{}}}],["messagemanifestentrymessage",{"_index":699,"title":{"interfaces/MessageManifestEntryMessage.html":{}},"body":{"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{}}}],["messagemanifestreducer",{"_index":724,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["messagemanifestreducer(state",{"_index":793,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["messagemanifests",{"_index":804,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/RootState.html":{}}}],["messagemanifeststate",{"_index":701,"title":{"interfaces/MessageManifestState.html":{}},"body":{"interfaces/MessageManifestState.html":{}}}],["messagemappingstrategy",{"_index":622,"title":{},"body":{"interfaces/MessageManifest.html":{},"interfaces/MessageManifestEntry.html":{},"injectables/MessageService.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice",{"_index":641,"title":{"injectables/MessageService.html":{}},"body":{"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{}}}],["met",{"_index":2141,"title":{},"body":{"changelog.html":{}}}],["meta",{"_index":914,"title":{},"body":{"injectables/MessageService.html":{}}}],["metadata",{"_index":431,"title":{},"body":{"pipes/DefaultPipe.html":{},"pipes/SafePipe.html":{},"directives/WvrContentProjectionDirective.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["metareducer",{"_index":1133,"title":{},"body":{"interfaces/RootState.html":{}}}],["metareducers",{"_index":1166,"title":{},"body":{"interfaces/RootState.html":{},"modules/WvrCoreModule.html":{}}}],["method",{"_index":184,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MappingStrategy.html":{},"interfaces/Request.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/SelectOptions.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["method.ts",{"_index":2585,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["methoddecorator",{"_index":1277,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["methods",{"_index":220,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"injectables/MessageService.html":{},"injectables/NgBindingsService.html":{},"injectables/RestService.html":{},"pipes/SafePipe.html":{},"injectables/ThemeService.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"interfaces/WvrDataComponent.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{}}}],["migrator",{"_index":2061,"title":{},"body":{"changelog.html":{}}}],["mimetype",{"_index":2001,"title":{},"body":{"changelog.html":{}}}],["min",{"_index":1822,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["miscellaneous",{"_index":2424,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["missing",{"_index":2099,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":2512,"title":{},"body":{"license.html":{},"properties.html":{}}}],["mix",{"_index":1422,"title":{},"body":{"injectables/ThemeService.html":{}}}],["mix(constrast(alertbackgroundlevel",{"_index":1480,"title":{},"body":{"injectables/ThemeService.html":{}}}],["mix(constrast(alertborderlevel",{"_index":1484,"title":{},"body":{"injectables/ThemeService.html":{}}}],["mix(constrast(alertcolorlevel",{"_index":1487,"title":{},"body":{"injectables/ThemeService.html":{}}}],["mix(constrast(listgroupitembackgroundlevel",{"_index":1552,"title":{},"body":{"injectables/ThemeService.html":{}}}],["mix(constrast(listgroupitemcolorlevel",{"_index":1555,"title":{},"body":{"injectables/ThemeService.html":{}}}],["mix(constrast(tablebackgroundlevel",{"_index":1561,"title":{},"body":{"injectables/ThemeService.html":{}}}],["mix(constrast(tableborderlevel",{"_index":1564,"title":{},"body":{"injectables/ThemeService.html":{}}}],["mobile",{"_index":2063,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":955,"title":{"interfaces/Modal.html":{}},"body":{"interfaces/Modal.html":{},"interfaces/RootState.html":{},"interfaces/State-2.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["modal.actions",{"_index":1341,"title":{},"body":{"interfaces/State-2.html":{}}}],["modal.component",{"_index":1686,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["modal.name",{"_index":1343,"title":{},"body":{"interfaces/State-2.html":{}}}],["modal/modal.reducers",{"_index":1145,"title":{},"body":{"interfaces/RootState.html":{}}}],["modal/wvr",{"_index":1685,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["modalactions",{"_index":1340,"title":{},"body":{"interfaces/State-2.html":{}}}],["modaleffects",{"_index":958,"title":{"injectables/ModalEffects.html":{}},"body":{"injectables/ModalEffects.html":{}}}],["modalname",{"_index":1228,"title":{},"body":{"interfaces/RootState.html":{}}}],["modals",{"_index":1121,"title":{},"body":{"interfaces/RootState.html":{}}}],["modalstate",{"_index":1229,"title":{},"body":{"interfaces/RootState.html":{}}}],["modalstate.entities[modalname",{"_index":1230,"title":{},"body":{"interfaces/RootState.html":{}}}],["modeled",{"_index":2210,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":2532,"title":{},"body":{"license.html":{}}}],["module",{"_index":1615,"title":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}},"body":{"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{},"modules/WvrSharedModule.html":{},"overview.html":{}}}],["modules",{"_index":1617,"title":{"modules.html":{}},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":2480,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":2047,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":2281,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":229,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"injectables/LayoutEffects.html":{},"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"injectables/MessageService.html":{},"interfaces/Modal.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"pipes/SafePipe.html":{},"interfaces/State-4.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["name.ts",{"_index":2587,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nameandtype",{"_index":202,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["nameandtype.split",{"_index":187,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["names",{"_index":800,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{},"changelog.html":{}}}],["nav",{"_index":1688,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["navbar",{"_index":2409,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":2434,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["need",{"_index":2040,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["needed",{"_index":2226,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["needs",{"_index":2116,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":305,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"pipes/SafePipe.html":{},"injectables/ThemeService.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{},"changelog.html":{}}}],["next",{"_index":180,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ComponentRegistryService.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/SelectOptions.html":{},"interfaces/State-1.html":{},"injectables/ThemeService.html":{},"directives/WvrContentProjectionDirective.html":{},"components/WvrThemeComponent.html":{}}}],["ng",{"_index":1708,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":160,"title":{},"body":{"interfaces/ActionAndProps.html":{},"directives/WvrContentProjectionDirective.html":{}}}],["ngbdropdownmodule",{"_index":1921,"title":{},"body":{"modules/WvrSharedModule.html":{}}}],["ngbindingsservice",{"_index":961,"title":{"injectables/NgBindingsService.html":{}},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"modules/WvrCoreModule.html":{},"overview.html":{}}}],["ngbmodalmodule",{"_index":1922,"title":{},"body":{"modules/WvrSharedModule.html":{}}}],["ngmodule",{"_index":1635,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["ngonchanges",{"_index":1937,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["ngonchanges(changes",{"_index":1943,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["ngondestroy",{"_index":1399,"title":{},"body":{"injectables/ThemeService.html":{}}}],["ngoninit",{"_index":1875,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["ngrx",{"_index":2177,"title":{},"body":{"changelog.html":{}}}],["ngrx/effects",{"_index":460,"title":{},"body":{"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/ModalEffects.html":{},"injectables/RestEffects.html":{},"injectables/ThemeEffects.html":{},"modules/WvrCoreModule.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":708,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":462,"title":{},"body":{"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntryRequest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/RootState.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"injectables/ThemeService.html":{},"modules/WvrCoreModule.html":{},"components/WvrThemeComponent.html":{},"dependencies.html":{}}}],["ngrxoniniteffects",{"_index":444,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["node",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["none",{"_index":2182,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["noninfringement",{"_index":2560,"title":{},"body":{"license.html":{}}}],["normal",{"_index":2046,"title":{},"body":{"changelog.html":{}}}],["notable",{"_index":2494,"title":{},"body":{"index.html":{}}}],["notice",{"_index":2545,"title":{},"body":{"license.html":{}}}],["notification",{"_index":2102,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1987,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npmjs",{"_index":2460,"title":{},"body":{"index.html":{}}}],["null",{"_index":1221,"title":{},"body":{"interfaces/RootState.html":{}}}],["number",{"_index":276,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"interfaces/MessageClientOptions.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["number(computedstyle.getpropertyvalue",{"_index":1448,"title":{},"body":{"injectables/ThemeService.html":{}}}],["object",{"_index":16,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["object.defineproperty(target",{"_index":1298,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["object.keys(animationconfig",{"_index":331,"title":{},"body":{"injectables/AnimationService.html":{}}}],["object.keys(parsed.payload)[0",{"_index":918,"title":{},"body":{"injectables/MessageService.html":{}}}],["object.keys(registeredactions",{"_index":205,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["object.keys(theme",{"_index":1469,"title":{},"body":{"injectables/ThemeService.html":{}}}],["observable",{"_index":830,"title":{},"body":{"injectables/MessageService.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/SelectOptions.html":{},"interfaces/WvrDataComponent.html":{},"changelog.html":{}}}],["observable(observer",{"_index":1112,"title":{},"body":{"injectables/RestService.html":{}}}],["observe",{"_index":983,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["observer",{"_index":1840,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["observer.complete",{"_index":1119,"title":{},"body":{"injectables/RestService.html":{}}}],["observer.next(options",{"_index":1118,"title":{},"body":{"injectables/RestService.html":{}}}],["observer.observe(element",{"_index":1860,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["observer.unobserve(entry.target",{"_index":1849,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["obtainconfigpath",{"_index":1773,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["obtaining",{"_index":2524,"title":{},"body":{"license.html":{}}}],["obtains",{"_index":1792,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["of(messagemanifestactions.connectmanifestfailure",{"_index":649,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["of(messagemanifestactions.disconnectmanifestfailure",{"_index":663,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["of(messagemanifestactions.subscribemanifestfailure",{"_index":679,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["of(request",{"_index":521,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["of(restactions.requestfailure",{"_index":1043,"title":{},"body":{"injectables/RestEffects.html":{}}}],["of(this.clients",{"_index":908,"title":{},"body":{"injectables/MessageService.html":{}}}],["offer",{"_index":2209,"title":{},"body":{"changelog.html":{}}}],["oftype",{"_index":489,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/RestEffects.html":{}}}],["oftype(manifestactions.dequeuerequest",{"_index":515,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["oftype(manifestactions.submitrequest",{"_index":520,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["oftype(messagemanifestactions.addmanifest",{"_index":667,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["oftype(messagemanifestactions.connectmanifest",{"_index":643,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["oftype(messagemanifestactions.connectmanifestconnected",{"_index":651,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["oftype(messagemanifestactions.deleteclient",{"_index":656,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["oftype(messagemanifestactions.disconnectmanifest",{"_index":660,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["oftype(messagemanifestactions.disconnectmanifestdisconnected",{"_index":665,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["oftype(messagemanifestactions.subscribemanifest",{"_index":671,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["oftype(messagemanifestactions.unsubscribemanifest",{"_index":681,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["oftype(restactions.deleterequest",{"_index":1008,"title":{},"body":{"injectables/RestEffects.html":{}}}],["oftype(restactions.getrequest",{"_index":1017,"title":{},"body":{"injectables/RestEffects.html":{}}}],["oftype(restactions.optionsrequest",{"_index":1021,"title":{},"body":{"injectables/RestEffects.html":{}}}],["oftype(restactions.patchrequest",{"_index":1025,"title":{},"body":{"injectables/RestEffects.html":{}}}],["oftype(restactions.postrequest",{"_index":1029,"title":{},"body":{"injectables/RestEffects.html":{}}}],["oftype(restactions.putrequest",{"_index":1033,"title":{},"body":{"injectables/RestEffects.html":{}}}],["oftype(restactions.request",{"_index":1036,"title":{},"body":{"injectables/RestEffects.html":{}}}],["oftype(restactions.requestfailure",{"_index":1046,"title":{},"body":{"injectables/RestEffects.html":{}}}],["oftype(restactions.requestsuccess",{"_index":1051,"title":{},"body":{"injectables/RestEffects.html":{}}}],["on(layoutactions.setismobile",{"_index":1304,"title":{},"body":{"interfaces/State.html":{}}}],["on(manifestactions.addmanifest",{"_index":1309,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.addmanifests",{"_index":1312,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.clearmanifests",{"_index":1322,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.deletemanifest",{"_index":1318,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.deletemanifests",{"_index":1319,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.deletemanifestsbypredicate",{"_index":1320,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.dequeuerequest",{"_index":1330,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.loadmanifests",{"_index":1321,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.mapmanifest",{"_index":1316,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.mapmanifests",{"_index":1317,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.queuerequest",{"_index":1328,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.setmanifest",{"_index":1310,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.submitrequest",{"_index":1324,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.submitrequestfailure",{"_index":1327,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.submitrequestsuccess",{"_index":1325,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.updatemanifest",{"_index":1314,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.updatemanifests",{"_index":1315,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.upsertmanifest",{"_index":1311,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(manifestactions.upsertmanifests",{"_index":1313,"title":{},"body":{"interfaces/State-1.html":{}}}],["on(messagemanifestactions.addmanifest",{"_index":725,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.addmanifests",{"_index":727,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.clearmanifests",{"_index":729,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.connectmanifest",{"_index":779,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.connectmanifestconnected",{"_index":781,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.deletemanifest",{"_index":732,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.deletemanifests",{"_index":734,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.deletemanifestsbypredicate",{"_index":737,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.dequeuemessage",{"_index":774,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.disconnectmanifest",{"_index":783,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.disconnectmanifestdisconnected",{"_index":785,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.loadmanifests",{"_index":740,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.mapmanifest",{"_index":742,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.mapmanifests",{"_index":745,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.queuemessage",{"_index":772,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.receivemessage",{"_index":761,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.setmanifest",{"_index":747,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.submitmessage",{"_index":767,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.submitmessagefailure",{"_index":771,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.submitmessagesuccess",{"_index":769,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.subscribemanifestsuccess",{"_index":787,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.unsubscribemanifestsuccess",{"_index":789,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.updatemanifest",{"_index":749,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.updatemanifests",{"_index":752,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.upsertmanifest",{"_index":755,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(messagemanifestactions.upsertmanifests",{"_index":757,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["on(modalactions.addmodal",{"_index":1344,"title":{},"body":{"interfaces/State-2.html":{}}}],["on(modalactions.closemodal",{"_index":1346,"title":{},"body":{"interfaces/State-2.html":{}}}],["on(modalactions.openmodal",{"_index":1347,"title":{},"body":{"interfaces/State-2.html":{}}}],["on(restactions.request",{"_index":1350,"title":{},"body":{"interfaces/State-3.html":{}}}],["on(restactions.requestfailure",{"_index":1352,"title":{},"body":{"interfaces/State-3.html":{}}}],["on(restactions.requestsuccess",{"_index":1351,"title":{},"body":{"interfaces/State-3.html":{}}}],["on(themeactions.add",{"_index":1374,"title":{},"body":{"interfaces/State-4.html":{}}}],["on(themeactions.select",{"_index":1377,"title":{},"body":{"interfaces/State-4.html":{}}}],["on(wysiwygactions.addwysiwyg",{"_index":1384,"title":{},"body":{"interfaces/State-5.html":{}}}],["on(wysiwygactions.resetwysiwyg",{"_index":1388,"title":{},"body":{"interfaces/State-5.html":{}}}],["on(wysiwygactions.savewysiwyg",{"_index":1386,"title":{},"body":{"interfaces/State-5.html":{}}}],["onanimationevent",{"_index":1586,"title":{},"body":{"interfaces/WvrAnimationComponent.html":{}}}],["onanimationevent($event",{"_index":1590,"title":{},"body":{"interfaces/WvrAnimationComponent.html":{}}}],["onchanges",{"_index":1935,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["onchangestate",{"_index":818,"title":{},"body":{"injectables/MessageService.html":{}}}],["onclick",{"_index":165,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["onconnect",{"_index":848,"title":{},"body":{"injectables/MessageService.html":{}}}],["ondestroy",{"_index":1419,"title":{},"body":{"injectables/ThemeService.html":{}}}],["ondisconnect",{"_index":849,"title":{},"body":{"injectables/MessageService.html":{}}}],["onfailure",{"_index":547,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/ManifestEntryRequest.html":{}}}],["onfailure.concat(manifestactions.submitrequestfailure",{"_index":562,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["oninit",{"_index":1874,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["oniniteffects",{"_index":459,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["onstomperror",{"_index":819,"title":{},"body":{"injectables/MessageService.html":{}}}],["onsuccess",{"_index":545,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/ManifestEntryRequest.html":{}}}],["onsuccess.concat(manifestactions.submitrequestsuccess",{"_index":560,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["onto",{"_index":2453,"title":{},"body":{"index.html":{}}}],["onwebsocketclose",{"_index":820,"title":{},"body":{"injectables/MessageService.html":{}}}],["onwebsocketerror",{"_index":821,"title":{},"body":{"injectables/MessageService.html":{}}}],["open",{"_index":957,"title":{},"body":{"interfaces/Modal.html":{},"interfaces/State-2.html":{},"changelog.html":{}}}],["opens",{"_index":2206,"title":{},"body":{"changelog.html":{}}}],["operation",{"_index":954,"title":{},"body":{"injectables/MessageService.html":{}}}],["option",{"_index":2151,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["optional",{"_index":230,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"injectables/LayoutEffects.html":{},"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"injectables/MessageService.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"pipes/SafePipe.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariant.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":543,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MessageManifest.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/Request.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"miscellaneous/typealiases.html":{}}}],["options(request",{"_index":1074,"title":{},"body":{"injectables/RestService.html":{}}}],["options.ts",{"_index":611,"title":{},"body":{"interfaces/MessageClientOptions.html":{},"interfaces/RequestOptions.html":{},"miscellaneous/typealiases.html":{}}}],["options.withcredentials",{"_index":1113,"title":{},"body":{"injectables/RestService.html":{}}}],["optionsrequest",{"_index":998,"title":{},"body":{"injectables/RestEffects.html":{}}}],["order",{"_index":2432,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["original",{"_index":1284,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["original.apply(this",{"_index":1289,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["otherwise",{"_index":2570,"title":{},"body":{"license.html":{}}}],["out",{"_index":1627,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1494,"title":{},"body":{"injectables/ThemeService.html":{}}}],["outside",{"_index":2294,"title":{},"body":{"changelog.html":{}}}],["over",{"_index":183,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/RestService.html":{},"injectables/ThemeService.html":{}}}],["overlaps",{"_index":2379,"title":{},"body":{"changelog.html":{}}}],["override",{"_index":76,"title":{},"body":{"interfaces/ActionAndProps.html":{},"changelog.html":{}}}],["overview",{"_index":2574,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owns",{"_index":2319,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":2095,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["padding",{"_index":119,"title":{},"body":{"interfaces/ActionAndProps.html":{},"changelog.html":{}}}],["page",{"_index":388,"title":{},"body":{"injectables/ComponentRegistryService.html":{},"changelog.html":{},"index.html":{}}}],["paradigm",{"_index":2360,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":881,"title":{},"body":{"injectables/MessageService.html":{},"interfaces/RequestOptions.html":{}}}],["parameters",{"_index":228,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"pipes/SafePipe.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":357,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/RequestOptions.html":{}}}],["parent",{"_index":1819,"title":{},"body":{"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"changelog.html":{}}}],["parentelem",{"_index":1887,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["parentelementref",{"_index":1609,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{}}}],["parentmodule",{"_index":1748,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["parseactionnameandtype(nameandtype",{"_index":185,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["parsed",{"_index":912,"title":{},"body":{"injectables/MessageService.html":{}}}],["parsed.meta",{"_index":915,"title":{},"body":{"injectables/MessageService.html":{}}}],["parsed.payload[object.keys(parsed.payload)[0",{"_index":917,"title":{},"body":{"injectables/MessageService.html":{}}}],["parseint(computedstyle.getpropertyvalue",{"_index":1457,"title":{},"body":{"injectables/ThemeService.html":{}}}],["parseint(htmlid.replace(`${componentregistryservice.html_id_base",{"_index":424,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["parses",{"_index":1793,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["partial",{"_index":2149,"title":{},"body":{"changelog.html":{}}}],["participating",{"_index":308,"title":{},"body":{"injectables/AnimationService.html":{}}}],["particular",{"_index":2558,"title":{},"body":{"license.html":{}}}],["parts",{"_index":186,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["parts.length",{"_index":188,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["parts[0",{"_index":209,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["parts[1",{"_index":203,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["pass",{"_index":1216,"title":{},"body":{"interfaces/RootState.html":{}}}],["passed",{"_index":843,"title":{},"body":{"injectables/MessageService.html":{}}}],["patch",{"_index":583,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["patch(request",{"_index":1076,"title":{},"body":{"injectables/RestService.html":{}}}],["patchrequest",{"_index":999,"title":{},"body":{"injectables/RestEffects.html":{}}}],["path",{"_index":525,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"changelog.html":{}}}],["path.split(`:${k",{"_index":533,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["pathkey",{"_index":993,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["pathvariables",{"_index":529,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/RequestOptions.html":{}}}],["pathvariables.foreach((v",{"_index":531,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["payload",{"_index":916,"title":{},"body":{"injectables/MessageService.html":{}}}],["pendingmessages",{"_index":705,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["pendingrequestactions",{"_index":505,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["pendingrequestactions.push(manifestactions.dequeuerequest",{"_index":511,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["pendingrequests",{"_index":504,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/State-1.html":{}}}],["pendingrequests.foreach(request",{"_index":506,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["performance",{"_index":2144,"title":{},"body":{"changelog.html":{}}}],["performant",{"_index":2270,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":2518,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2540,"title":{},"body":{"license.html":{}}}],["person",{"_index":2523,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2541,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":427,"title":{"pipes/DefaultPipe.html":{},"pipes/SafePipe.html":{}},"body":{"pipes/DefaultPipe.html":{},"injectables/LayoutEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/RestEffects.html":{},"pipes/SafePipe.html":{}}}],["pipe(mergemap(options",{"_index":1101,"title":{},"body":{"injectables/RestService.html":{}}}],["pipes",{"_index":429,"title":{},"body":{"pipes/DefaultPipe.html":{},"pipes/SafePipe.html":{},"changelog.html":{},"overview.html":{}}}],["pipes/default.pipe",{"_index":1929,"title":{},"body":{"modules/WvrSharedModule.html":{}}}],["pipes/safe.pipe",{"_index":1930,"title":{},"body":{"modules/WvrSharedModule.html":{}}}],["pipetransform",{"_index":437,"title":{},"body":{"pipes/DefaultPipe.html":{},"pipes/SafePipe.html":{}}}],["platformbrowserdynamic",{"_index":1765,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["playanimation",{"_index":250,"title":{},"body":{"injectables/AnimationService.html":{}}}],["playanimation(stateid",{"_index":275,"title":{},"body":{"injectables/AnimationService.html":{}}}],["player",{"_index":351,"title":{},"body":{"injectables/AnimationService.html":{}}}],["player.play",{"_index":353,"title":{},"body":{"injectables/AnimationService.html":{}}}],["plays",{"_index":280,"title":{},"body":{"injectables/AnimationService.html":{}}}],["pluck",{"_index":565,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{}}}],["pluck('manifest",{"_index":644,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["pluck('request",{"_index":516,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["port",{"_index":1844,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["portions",{"_index":2549,"title":{},"body":{"license.html":{}}}],["position",{"_index":2300,"title":{},"body":{"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["possible",{"_index":2037,"title":{},"body":{"changelog.html":{}}}],["post",{"_index":579,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"miscellaneous/typealiases.html":{}}}],["post(request",{"_index":1078,"title":{},"body":{"injectables/RestService.html":{}}}],["postrequest",{"_index":1000,"title":{},"body":{"injectables/RestEffects.html":{}}}],["pre",{"_index":2462,"title":{},"body":{"index.html":{}}}],["predicate",{"_index":738,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["prefer",{"_index":1950,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["prefix",{"_index":407,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["preprocessoptions",{"_index":1063,"title":{},"body":{"injectables/RestService.html":{}}}],["preprocessoptions(request",{"_index":1080,"title":{},"body":{"injectables/RestService.html":{}}}],["present",{"_index":72,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ComponentRegistryService.html":{}}}],["prevent",{"_index":1823,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["preview",{"_index":1721,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["preview.component",{"_index":1654,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["preview/wvr",{"_index":1653,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["primary",{"_index":55,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/ThemeVariants.html":{},"changelog.html":{}}}],["primaryaccent",{"_index":1577,"title":{},"body":{"interfaces/ThemeVariants.html":{}}}],["primaryneutral",{"_index":1578,"title":{},"body":{"interfaces/ThemeVariants.html":{}}}],["prior",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":125,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["process",{"_index":2264,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["processrequest",{"_index":1064,"title":{},"body":{"injectables/RestService.html":{}}}],["processrequest(request",{"_index":1082,"title":{},"body":{"injectables/RestService.html":{}}}],["processrequestwithdata",{"_index":1065,"title":{},"body":{"injectables/RestService.html":{}}}],["processrequestwithdata(request",{"_index":1085,"title":{},"body":{"injectables/RestService.html":{}}}],["processthemevariants",{"_index":1400,"title":{},"body":{"injectables/ThemeService.html":{}}}],["processthemevariants(theme",{"_index":1411,"title":{},"body":{"injectables/ThemeService.html":{}}}],["product",{"_index":2283,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":2287,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["projectcontent",{"_index":31,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["projectcontent(this.eref",{"_index":162,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["projected",{"_index":158,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["projection",{"_index":2073,"title":{},"body":{"changelog.html":{}}}],["projection.directive",{"_index":1928,"title":{},"body":{"modules/WvrSharedModule.html":{}}}],["projection.directive.ts",{"_index":1599,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{}}}],["projection.directive.ts:12",{"_index":1604,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{}}}],["projection.directive.ts:18",{"_index":1606,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{}}}],["projection.directive.ts:9",{"_index":1605,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{}}}],["projects/.../alignment.enum.ts",{"_index":2427,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../decorators.utility.ts",{"_index":2437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../manifest",{"_index":2581,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../manifest.reducers.ts",{"_index":2438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../message",{"_index":2428,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../modal.reducers.ts",{"_index":2439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../request",{"_index":2584,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../request.ts",{"_index":2582,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../rest.actions.ts",{"_index":2580,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../theme",{"_index":2586,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../wvr",{"_index":2588,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../wysiwyg.reducers.ts",{"_index":2440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/wvr",{"_index":6,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"interfaces/Layout.html":{},"injectables/LayoutEffects.html":{},"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/Modal.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"pipes/SafePipe.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrDataSelect.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{},"injectables/WysiwygEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projectsourcecontent",{"_index":1607,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{}}}],["projectsourcecontent(this.elementref",{"_index":1612,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{}}}],["promise",{"_index":952,"title":{},"body":{"injectables/MessageService.html":{}}}],["promises",{"_index":2356,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"interfaces/Layout.html":{},"injectables/LayoutEffects.html":{},"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/Modal.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestEffects.html":{},"interfaces/RootState.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrDataSelect.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{},"properties.html":{}}}],["property",{"_index":71,"title":{},"body":{"interfaces/ActionAndProps.html":{},"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{},"changelog.html":{}}}],["propertydecorator",{"_index":1292,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["propertydescriptor",{"_index":1281,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["propertykey",{"_index":1279,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["propery",{"_index":97,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["props",{"_index":13,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["protocol",{"_index":621,"title":{},"body":{"interfaces/MessageManifest.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["protocol.ts",{"_index":2583,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["provide",{"_index":1801,"title":{},"body":{"interfaces/WvrElementDesc.html":{},"changelog.html":{}}}],["provided",{"_index":2504,"title":{},"body":{"index.html":{},"license.html":{}}}],["providedin",{"_index":235,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"injectables/MessageService.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"injectables/RestService.html":{},"injectables/ThemeService.html":{}}}],["providers",{"_index":1622,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{},"overview.html":{}}}],["provides",{"_index":2441,"title":{},"body":{"index.html":{}}}],["providing",{"_index":2289,"title":{},"body":{"changelog.html":{}}}],["pseudo",{"_index":2114,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":2121,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":2534,"title":{},"body":{"license.html":{}}}],["publish:npm",{"_index":2500,"title":{},"body":{"index.html":{}}}],["pure",{"_index":432,"title":{},"body":{"pipes/DefaultPipe.html":{},"pipes/SafePipe.html":{},"changelog.html":{}}}],["purpose",{"_index":2559,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2479,"title":{},"body":{"index.html":{}}}],["put",{"_index":581,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"miscellaneous/typealiases.html":{}}}],["put(request",{"_index":1089,"title":{},"body":{"injectables/RestService.html":{}}}],["putactions",{"_index":222,"title":{},"body":{"injectables/ActionRegistryService.html":{}}}],["putactions(key",{"_index":233,"title":{},"body":{"injectables/ActionRegistryService.html":{}}}],["putrequest",{"_index":1001,"title":{},"body":{"injectables/RestEffects.html":{}}}],["putsubject",{"_index":967,"title":{},"body":{"injectables/NgBindingsService.html":{}}}],["putsubject(key",{"_index":969,"title":{},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{}}}],["query",{"_index":2342,"title":{},"body":{"changelog.html":{}}}],["r",{"_index":1297,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["r.entryname",{"_index":1334,"title":{},"body":{"interfaces/State-1.html":{}}}],["r.manifestname",{"_index":1332,"title":{},"body":{"interfaces/State-1.html":{}}}],["r.triggeranimations('animationtrigger",{"_index":330,"title":{},"body":{"injectables/AnimationService.html":{}}}],["radio",{"_index":63,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["radius",{"_index":103,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["random",{"_index":286,"title":{},"body":{"injectables/AnimationService.html":{}}}],["rc.1",{"_index":2003,"title":{},"body":{"changelog.html":{}}}],["rc.10",{"_index":1992,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":1979,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["reactiveformsmodule",{"_index":1919,"title":{},"body":{"modules/WvrSharedModule.html":{}}}],["readme.md",{"_index":2087,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":219,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"directives/WvrContentProjectionDirective.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{}}}],["ready",{"_index":2183,"title":{},"body":{"changelog.html":{}}}],["received",{"_index":698,"title":{},"body":{"interfaces/MessageManifestEntry.html":{}}}],["receiver",{"_index":2169,"title":{},"body":{"changelog.html":{}}}],["recent",{"_index":2252,"title":{},"body":{"changelog.html":{}}}],["reconnect",{"_index":890,"title":{},"body":{"injectables/MessageService.html":{}}}],["reconnectdelay",{"_index":884,"title":{},"body":{"injectables/MessageService.html":{}}}],["records",{"_index":309,"title":{},"body":{"injectables/AnimationService.html":{}}}],["redesign",{"_index":2034,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":2246,"title":{},"body":{"changelog.html":{}}}],["reducer",{"_index":1165,"title":{},"body":{"interfaces/RootState.html":{},"interfaces/State.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":792,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{},"miscellaneous/functions.html":{}}}],["reducers",{"_index":1155,"title":{},"body":{"interfaces/RootState.html":{}}}],["reducing",{"_index":2036,"title":{},"body":{"changelog.html":{}}}],["refactor",{"_index":2188,"title":{},"body":{"changelog.html":{}}}],["refactored",{"_index":2304,"title":{},"body":{"changelog.html":{}}}],["refbindingsubject",{"_index":971,"title":{"interfaces/RefBindingSubject.html":{}},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{}}}],["reference",{"_index":371,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{}}}],["referenced",{"_index":1906,"title":{},"body":{"components/WvrMessageManifestEntryComponent.html":{},"index.html":{}}}],["referencing",{"_index":2459,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":1048,"title":{},"body":{"injectables/RestEffects.html":{}}}],["register",{"_index":393,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["register(component",{"_index":400,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["registeranimationstates",{"_index":251,"title":{},"body":{"injectables/AnimationService.html":{}}}],["registeranimationtargets",{"_index":252,"title":{},"body":{"injectables/AnimationService.html":{}}}],["registeranimationtargets(targetname",{"_index":288,"title":{},"body":{"injectables/AnimationService.html":{}}}],["registercomponent",{"_index":1401,"title":{},"body":{"injectables/ThemeService.html":{}}}],["registercomponent(id",{"_index":1413,"title":{},"body":{"injectables/ThemeService.html":{}}}],["registercustomelements",{"_index":1728,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["registered",{"_index":199,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ComponentRegistryService.html":{}}}],["registeredactions",{"_index":196,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["registeredactions[parts[1",{"_index":204,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["registerweaverelements",{"_index":1812,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["registry",{"_index":217,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/WvrElementDesc.html":{}}}],["registry.service",{"_index":28,"title":{},"body":{"interfaces/ActionAndProps.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["registry.service.ts",{"_index":215,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/ComponentRegistryService.html":{}}}],["registry.service.ts:12",{"_index":225,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/ComponentRegistryService.html":{}}}],["registry.service.ts:15",{"_index":412,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["registry.service.ts:18",{"_index":227,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/ComponentRegistryService.html":{}}}],["registry.service.ts:21",{"_index":401,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["registry.service.ts:22",{"_index":234,"title":{},"body":{"injectables/ActionRegistryService.html":{}}}],["registry.service.ts:29",{"_index":403,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["registry.service.ts:34",{"_index":396,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["registry.service.ts:39",{"_index":398,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["regressed",{"_index":2266,"title":{},"body":{"changelog.html":{}}}],["relating",{"_index":868,"title":{},"body":{"injectables/MessageService.html":{}}}],["release",{"_index":2056,"title":{},"body":{"changelog.html":{}}}],["removal",{"_index":2126,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":1847,"title":{},"body":{"interfaces/WvrElementDesc.html":{},"changelog.html":{}}}],["removes",{"_index":404,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["rename",{"_index":1610,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{}}}],["renamed",{"_index":2396,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":1824,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["rendered",{"_index":2250,"title":{},"body":{"changelog.html":{}}}],["rendering",{"_index":157,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["renderred",{"_index":2444,"title":{},"body":{"index.html":{}}}],["repeated",{"_index":1270,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["replacechild",{"_index":2071,"title":{},"body":{"changelog.html":{}}}],["reporting",{"_index":2024,"title":{},"body":{"changelog.html":{}}}],["reportprogress",{"_index":984,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["reports",{"_index":2509,"title":{},"body":{"index.html":{}}}],["repository",{"_index":2463,"title":{},"body":{"index.html":{},"properties.html":{}}}],["represent",{"_index":2442,"title":{},"body":{"index.html":{}}}],["request",{"_index":512,"title":{"interfaces/Request.html":{}},"body":{"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/Request.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"changelog.html":{}}}],["request.body",{"_index":552,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/RestService.html":{}}}],["request.bodyhttpparams",{"_index":556,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/RestService.html":{}}}],["request.decode",{"_index":554,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/RestService.html":{}}}],["request.decode.foreach(prop",{"_index":1105,"title":{},"body":{"injectables/RestService.html":{}}}],["request.entryname",{"_index":510,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/State-1.html":{}}}],["request.manifestname",{"_index":1333,"title":{},"body":{"interfaces/State-1.html":{}}}],["request.method",{"_index":535,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["request.onfailure",{"_index":548,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["request.onsuccess",{"_index":546,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["request.options",{"_index":527,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/RestService.html":{}}}],["request.options.pathvariables",{"_index":528,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["request.ts",{"_index":598,"title":{},"body":{"interfaces/ManifestEntryRequest.html":{}}}],["requestfailure",{"_index":1002,"title":{},"body":{"injectables/RestEffects.html":{}}}],["requestmethod",{"_index":567,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/Request.html":{},"miscellaneous/typealiases.html":{}}}],["requestoptions",{"_index":591,"title":{"interfaces/RequestOptions.html":{}},"body":{"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{}}}],["requestsbymethod",{"_index":483,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["requestsuccess",{"_index":1003,"title":{},"body":{"injectables/RestEffects.html":{}}}],["requires",{"_index":2502,"title":{},"body":{"index.html":{}}}],["requiring",{"_index":1220,"title":{},"body":{"interfaces/RootState.html":{}}}],["reset",{"_index":64,"title":{},"body":{"interfaces/ActionAndProps.html":{},"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{},"overview.html":{}}}],["resize",{"_index":443,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["resolve",{"_index":1993,"title":{},"body":{"changelog.html":{}}}],["resolves",{"_index":1983,"title":{},"body":{"changelog.html":{}}}],["resourceurl",{"_index":1241,"title":{},"body":{"pipes/SafePipe.html":{}}}],["response",{"_index":559,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/MessageManifestEntry.html":{},"injectables/MessageService.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestEffects.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrMessageManifestEntryComponent.html":{},"changelog.html":{}}}],["response.body",{"_index":910,"title":{},"body":{"injectables/MessageService.html":{}}}],["response.json",{"_index":1799,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["responsetype",{"_index":985,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["rest",{"_index":1004,"title":{},"body":{"injectables/RestEffects.html":{},"interfaces/RootState.html":{}}}],["rest.actions",{"_index":1054,"title":{},"body":{"injectables/RestEffects.html":{},"interfaces/State-3.html":{}}}],["rest.service",{"_index":1055,"title":{},"body":{"injectables/RestEffects.html":{}}}],["rest/request",{"_index":568,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{}}}],["rest/rest.actions",{"_index":570,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["rest/rest.effects",{"_index":1710,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["rest/rest.reducers",{"_index":1141,"title":{},"body":{"interfaces/RootState.html":{}}}],["restaction",{"_index":549,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["restactions",{"_index":569,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/RestEffects.html":{},"interfaces/State-3.html":{}}}],["restactions.deleterequest",{"_index":586,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["restactions.getrequest",{"_index":587,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["restactions.optionsrequest",{"_index":578,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["restactions.patchrequest",{"_index":584,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["restactions.postrequest",{"_index":580,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["restactions.putrequest",{"_index":582,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["restactions.request",{"_index":1010,"title":{},"body":{"injectables/RestEffects.html":{}}}],["restactions.requestsuccess",{"_index":1039,"title":{},"body":{"injectables/RestEffects.html":{}}}],["resteffects",{"_index":994,"title":{"injectables/RestEffects.html":{}},"body":{"injectables/RestEffects.html":{},"modules/WvrCoreModule.html":{}}}],["restore",{"_index":2381,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":2528,"title":{},"body":{"license.html":{}}}],["restructure",{"_index":2072,"title":{},"body":{"changelog.html":{}}}],["restservice",{"_index":1005,"title":{"injectables/RestService.html":{}},"body":{"injectables/RestEffects.html":{},"injectables/RestService.html":{}}}],["resubmitrequest",{"_index":484,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["results",{"_index":210,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"interfaces/Layout.html":{},"injectables/LayoutEffects.html":{},"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/Modal.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"pipes/SafePipe.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrDataSelect.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{},"injectables/WysiwygEffects.html":{},"changelog.html":{},"contributing.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["retrieves",{"_index":297,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{}}}],["retry",{"_index":1044,"title":{},"body":{"injectables/RestEffects.html":{}}}],["return",{"_index":195,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"pipes/SafePipe.html":{},"interfaces/SelectOptions.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"injectables/ThemeService.html":{},"interfaces/WvrElementDesc.html":{}}}],["returns",{"_index":232,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"injectables/LayoutEffects.html":{},"injectables/MessageService.html":{},"injectables/NgBindingsService.html":{},"injectables/RestService.html":{},"pipes/SafePipe.html":{},"injectables/ThemeService.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"interfaces/WvrDataComponent.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"miscellaneous/functions.html":{}}}],["rgba(${bbsrgba.r",{"_index":1521,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rgba(${bobsrgba.r",{"_index":1500,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rgba(${dbsrgba.r",{"_index":1543,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rgba(${dvobsrgba.r",{"_index":1528,"title":{},"body":{"injectables/ThemeService.html":{}}}],["right",{"_index":2435,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rights",{"_index":2531,"title":{},"body":{"license.html":{}}}],["root",{"_index":236,"title":{},"body":{"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"injectables/MessageService.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"injectables/RestService.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["root_reducer",{"_index":1163,"title":{},"body":{"interfaces/RootState.html":{},"modules/WvrCoreModule.html":{}}}],["rootmargin",{"_index":1855,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["rootstate",{"_index":468,"title":{"interfaces/RootState.html":{}},"body":{"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"interfaces/RootState.html":{},"injectables/ThemeService.html":{},"components/WvrThemeComponent.html":{}}}],["run",{"_index":2299,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["running",{"_index":1996,"title":{},"body":{"changelog.html":{}}}],["runs",{"_index":271,"title":{},"body":{"injectables/AnimationService.html":{}}}],["rxjs",{"_index":464,"title":{},"body":{"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/SelectOptions.html":{},"injectables/ThemeService.html":{},"interfaces/WvrDataComponent.html":{}}}],["rxjs/operators",{"_index":467,"title":{},"body":{"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/SelectOptions.html":{},"injectables/ThemeService.html":{}}}],["safari",{"_index":2296,"title":{},"body":{"changelog.html":{}}}],["safe",{"_index":1238,"title":{},"body":{"pipes/SafePipe.html":{}}}],["safehtml",{"_index":1243,"title":{},"body":{"pipes/SafePipe.html":{}}}],["safepipe",{"_index":1236,"title":{"pipes/SafePipe.html":{}},"body":{"pipes/SafePipe.html":{},"modules/WvrSharedModule.html":{},"overview.html":{}}}],["saferesourceurl",{"_index":1247,"title":{},"body":{"pipes/SafePipe.html":{}}}],["safescript",{"_index":1245,"title":{},"body":{"pipes/SafePipe.html":{}}}],["safestyle",{"_index":1244,"title":{},"body":{"pipes/SafePipe.html":{},"interfaces/WvrThemeableComponent.html":{}}}],["safeurl",{"_index":1246,"title":{},"body":{"pipes/SafePipe.html":{}}}],["same",{"_index":2493,"title":{},"body":{"index.html":{}}}],["sans",{"_index":110,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["sass",{"_index":2060,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":2007,"title":{},"body":{"changelog.html":{}}}],["schemas",{"_index":1630,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["scope",{"_index":2137,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":1240,"title":{},"body":{"pipes/SafePipe.html":{},"interfaces/WvrElementDesc.html":{}}}],["scss",{"_index":2249,"title":{},"body":{"changelog.html":{}}}],["secondary",{"_index":1579,"title":{},"body":{"interfaces/ThemeVariants.html":{},"changelog.html":{}}}],["secondaryaccent",{"_index":1580,"title":{},"body":{"interfaces/ThemeVariants.html":{}}}],["secondaryneutral",{"_index":1581,"title":{},"body":{"interfaces/ThemeVariants.html":{}}}],["section",{"_index":2400,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sections",{"_index":2349,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":1261,"title":{},"body":{"pipes/SafePipe.html":{}}}],["see",{"_index":2471,"title":{},"body":{"index.html":{}}}],["seen",{"_index":2082,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":461,"title":{},"body":{"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestState.html":{},"interfaces/SelectOptions.html":{},"interfaces/State-1.html":{},"injectables/ThemeService.html":{}}}],["select(option.selector",{"_index":1295,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["select(selectmanifestbyname(request.manifestname",{"_index":522,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["select(selectmanifestentities",{"_index":500,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["select(selectpendingrequests",{"_index":502,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["select(selectthemestate",{"_index":1428,"title":{},"body":{"injectables/ThemeService.html":{}}}],["select.ts",{"_index":1761,"title":{},"body":{"interfaces/WvrDataSelect.html":{}}}],["selectall",{"_index":797,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["selectallmanifests",{"_index":805,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/RootState.html":{},"interfaces/State-1.html":{}}}],["selectallmessagemanifests",{"_index":1195,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectanimation",{"_index":253,"title":{},"body":{"injectables/AnimationService.html":{}}}],["selectanimation(stateid",{"_index":294,"title":{},"body":{"injectables/AnimationService.html":{}}}],["selectcurrentmessage",{"_index":809,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["selectcurrentmessagemessage",{"_index":1199,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectcurrentrequest",{"_index":1174,"title":{},"body":{"interfaces/RootState.html":{},"interfaces/State-1.html":{}}}],["selectcurrenttheme",{"_index":1211,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectedmanifestid",{"_index":1323,"title":{},"body":{"interfaces/State-1.html":{}}}],["selectedmessagemanifestid",{"_index":731,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["selectentities",{"_index":796,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["selectid",{"_index":721,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{}}}],["selectids",{"_index":795,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["selectismobilelayout",{"_index":469,"title":{},"body":{"injectables/LayoutEffects.html":{},"interfaces/RootState.html":{}}}],["selectlayoutstate",{"_index":1213,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectmanifestbyname",{"_index":571,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/MessageManifestState.html":{},"interfaces/RootState.html":{},"interfaces/State-1.html":{},"miscellaneous/functions.html":{}}}],["selectmanifestbyname(manifest",{"_index":718,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{},"miscellaneous/functions.html":{}}}],["selectmanifestentities",{"_index":572,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/MessageManifestState.html":{},"interfaces/RootState.html":{},"interfaces/State-1.html":{}}}],["selectmanifestentryerror",{"_index":1182,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectmanifestentryresponse",{"_index":1179,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectmanifestnames",{"_index":801,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/RootState.html":{},"interfaces/State-1.html":{}}}],["selectmanifeststate",{"_index":1167,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectmanifesttotal",{"_index":808,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/RootState.html":{},"interfaces/State-1.html":{}}}],["selectmessagemanifestbyname",{"_index":1203,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectmessagemanifestentities",{"_index":1193,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectmessagemanifestnames",{"_index":1191,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectmessagemanifeststate",{"_index":1188,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectmessagemanifesttotal",{"_index":1197,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectmodalbyname",{"_index":1227,"title":{},"body":{"interfaces/RootState.html":{},"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["selectmodalbyname(modal",{"_index":1342,"title":{},"body":{"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["selectmodalstate",{"_index":1225,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectoptions",{"_index":1263,"title":{"interfaces/SelectOptions.html":{}},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["selector",{"_index":36,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/SelectOptions.html":{},"directives/WvrContentProjectionDirective.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["selectors",{"_index":794,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/RootState.html":{},"interfaces/State-1.html":{},"interfaces/WvrElementDesc.html":{},"changelog.html":{}}}],["selectors.indexof(element.parentnode.nodename",{"_index":1808,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["selectpendingmessage",{"_index":811,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["selectpendingmessagemessages",{"_index":1201,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectpendingrequests",{"_index":573,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/RootState.html":{},"interfaces/State-1.html":{}}}],["selectrequest",{"_index":1353,"title":{},"body":{"interfaces/State-3.html":{}}}],["selectresponse",{"_index":1355,"title":{},"body":{"interfaces/State-3.html":{}}}],["selectrestrequest",{"_index":1186,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectreststate",{"_index":1184,"title":{},"body":{"interfaces/RootState.html":{}}}],["selecttheme",{"_index":1208,"title":{},"body":{"interfaces/RootState.html":{}}}],["selectthemestate",{"_index":1206,"title":{},"body":{"interfaces/RootState.html":{},"injectables/ThemeService.html":{}}}],["selecttotal",{"_index":798,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["selectwysiwygbyid",{"_index":1233,"title":{},"body":{"interfaces/RootState.html":{},"interfaces/State-5.html":{},"miscellaneous/functions.html":{}}}],["selectwysiwygbyid(wysiwyg",{"_index":1382,"title":{},"body":{"interfaces/State-5.html":{},"miscellaneous/functions.html":{}}}],["selectwysiwygstate",{"_index":1231,"title":{},"body":{"interfaces/RootState.html":{}}}],["sell",{"_index":2538,"title":{},"body":{"license.html":{}}}],["sent",{"_index":860,"title":{},"body":{"injectables/MessageService.html":{}}}],["serif",{"_index":111,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["served",{"_index":378,"title":{},"body":{"interfaces/AppConfig.html":{}}}],["server",{"_index":2470,"title":{},"body":{"index.html":{}}}],["server_side_effect",{"_index":2592,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["service",{"_index":2176,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["services",{"_index":2313,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":78,"title":{},"body":{"interfaces/ActionAndProps.html":{},"components/WvrThemeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["settimeouts",{"_index":2269,"title":{},"body":{"changelog.html":{}}}],["setvariants(value",{"_index":1947,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["shadow",{"_index":96,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ThemeService.html":{}}}],["shadowcolor",{"_index":1574,"title":{},"body":{"interfaces/ThemeVariant.html":{}}}],["shall",{"_index":2546,"title":{},"body":{"license.html":{}}}],["share",{"_index":2362,"title":{},"body":{"changelog.html":{}}}],["shared.module.ts",{"_index":1916,"title":{},"body":{"modules/WvrSharedModule.html":{}}}],["shared/animation/wvr",{"_index":313,"title":{},"body":{"injectables/AnimationService.html":{}}}],["shared/theme",{"_index":30,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/State-4.html":{},"injectables/ThemeService.html":{},"components/WvrThemeComponent.html":{}}}],["shared/theme/default",{"_index":1363,"title":{},"body":{"interfaces/State-4.html":{}}}],["shared/utility/bootstrap.utility",{"_index":1644,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["shared/utility/color.utility",{"_index":1424,"title":{},"body":{"injectables/ThemeService.html":{}}}],["shared/utility/projection.utility",{"_index":32,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["shared/wvr",{"_index":34,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/AnimationService.html":{},"injectables/ThemeService.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["shifted",{"_index":2083,"title":{},"body":{"changelog.html":{}}}],["shorthand",{"_index":760,"title":{},"body":{"interfaces/MessageManifestState.html":{},"injectables/RestEffects.html":{},"interfaces/State-1.html":{}}}],["show",{"_index":1861,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["showhiddentcontent",{"_index":1736,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["showweaverelements",{"_index":1862,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["signature",{"_index":606,"title":{},"body":{"interfaces/MappingStrategy.html":{}}}],["simplechanges",{"_index":1944,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["single",{"_index":2207,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":56,"title":{},"body":{"interfaces/ActionAndProps.html":{},"changelog.html":{}}}],["skipself",{"_index":1636,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["slide",{"_index":2064,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":59,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["socket",{"_index":872,"title":{},"body":{"injectables/MessageService.html":{}}}],["sockjs",{"_index":857,"title":{},"body":{"injectables/MessageService.html":{},"dependencies.html":{}}}],["sockjs(config.brokerurl",{"_index":948,"title":{},"body":{"injectables/MessageService.html":{}}}],["software",{"_index":2526,"title":{},"body":{"license.html":{}}}],["solution",{"_index":2327,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"interfaces/Layout.html":{},"injectables/LayoutEffects.html":{},"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/Modal.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"pipes/SafePipe.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrDataSelect.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{},"injectables/WysiwygEffects.html":{}}}],["span[button",{"_index":164,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["specified",{"_index":263,"title":{},"body":{"injectables/AnimationService.html":{},"interfaces/SelectOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["specify",{"_index":1821,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["src",{"_index":1771,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["start:npm",{"_index":2505,"title":{},"body":{"index.html":{}}}],["started",{"_index":1976,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starting",{"_index":2503,"title":{},"body":{"index.html":{}}}],["state",{"_index":93,"title":{"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{}},"body":{"interfaces/ActionAndProps.html":{},"injectables/AnimationService.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["state.currentmessage",{"_index":810,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["state.currentrequest",{"_index":1337,"title":{},"body":{"interfaces/State-1.html":{}}}],["state.entities[id].initialcontent",{"_index":1389,"title":{},"body":{"interfaces/State-5.html":{}}}],["state.entities[manifest.name].entries.map(e",{"_index":764,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["state.entities[manifest.name].entries.map(entry",{"_index":1326,"title":{},"body":{"interfaces/State-1.html":{}}}],["state.layout",{"_index":1305,"title":{},"body":{"interfaces/State.html":{}}}],["state.pendingmessages",{"_index":812,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["state.pendingmessages.concat",{"_index":773,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["state.pendingmessages.filter(m",{"_index":775,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["state.pendingrequests",{"_index":1338,"title":{},"body":{"interfaces/State-1.html":{}}}],["state.pendingrequests.concat",{"_index":1329,"title":{},"body":{"interfaces/State-1.html":{}}}],["state.pendingrequests.filter(r",{"_index":1331,"title":{},"body":{"interfaces/State-1.html":{}}}],["state.request",{"_index":1354,"title":{},"body":{"interfaces/State-3.html":{}}}],["state.response",{"_index":1356,"title":{},"body":{"interfaces/State-3.html":{}}}],["state.themes",{"_index":1375,"title":{},"body":{"interfaces/State-4.html":{}}}],["stateid",{"_index":264,"title":{},"body":{"injectables/AnimationService.html":{}}}],["states",{"_index":1217,"title":{},"body":{"interfaces/RootState.html":{}}}],["static",{"_index":389,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["statically",{"_index":405,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["status",{"_index":629,"title":{},"body":{"interfaces/MessageManifest.html":{},"interfaces/MessageManifestState.html":{}}}],["staying",{"_index":2387,"title":{},"body":{"changelog.html":{}}}],["stick",{"_index":2368,"title":{},"body":{"changelog.html":{}}}],["sticky",{"_index":2027,"title":{},"body":{"changelog.html":{}}}],["stomp/stompjs",{"_index":879,"title":{},"body":{"injectables/MessageService.html":{},"dependencies.html":{}}}],["stompheaders",{"_index":878,"title":{},"body":{"injectables/MessageService.html":{}}}],["store",{"_index":446,"title":{},"body":{"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/ThemeService.html":{},"modules/WvrCoreModule.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["storedevtoolsinstrument",{"_index":1641,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["storemodule",{"_index":1640,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["storemodule.forroot(root_reducer",{"_index":1744,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["strategy",{"_index":626,"title":{},"body":{"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"injectables/MessageService.html":{},"components/WvrMessageManifestEntryComponent.html":{},"changelog.html":{}}}],["strategy.ts",{"_index":605,"title":{},"body":{"interfaces/MappingStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["string",{"_index":73,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/Modal.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"pipes/SafePipe.html":{},"interfaces/SelectOptions.html":{},"interfaces/State-1.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariant.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrDataSelect.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{},"miscellaneous/functions.html":{}}}],["string,body",{"_index":1086,"title":{},"body":{"injectables/RestService.html":{}}}],["string,options",{"_index":1083,"title":{},"body":{"injectables/RestService.html":{}}}],["style",{"_index":1239,"title":{},"body":{"pipes/SafePipe.html":{},"interfaces/WvrThemeableComponent.html":{},"changelog.html":{}}}],["styles",{"_index":1442,"title":{},"body":{"injectables/ThemeService.html":{},"index.html":{}}}],["styles.css",{"_index":2469,"title":{},"body":{"index.html":{}}}],["styleurls",{"_index":41,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["styling",{"_index":2258,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":1969,"title":{},"body":{"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"index.html":{}}}],["subject",{"_index":970,"title":{},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"license.html":{}}}],["subjects",{"_index":966,"title":{},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{}}}],["sublicense",{"_index":2536,"title":{},"body":{"license.html":{}}}],["submit",{"_index":65,"title":{},"body":{"interfaces/ActionAndProps.html":{},"changelog.html":{}}}],["submitrequest",{"_index":485,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["submitted",{"_index":594,"title":{},"body":{"interfaces/ManifestEntry.html":{}}}],["subscribe",{"_index":695,"title":{},"body":{"interfaces/MessageManifestEntry.html":{},"injectables/MessageService.html":{}}}],["subscribe(entry.destination",{"_index":909,"title":{},"body":{"injectables/MessageService.html":{}}}],["subscribe(manifest",{"_index":837,"title":{},"body":{"injectables/MessageService.html":{}}}],["subscribe(themestate",{"_index":1430,"title":{},"body":{"injectables/ThemeService.html":{}}}],["subscribemanifest",{"_index":639,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["subscription",{"_index":678,"title":{},"body":{"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestState.html":{},"injectables/ThemeService.html":{}}}],["subscription.id",{"_index":788,"title":{},"body":{"interfaces/MessageManifestState.html":{}}}],["subscriptions",{"_index":803,"title":{},"body":{"interfaces/MessageManifestState.html":{},"changelog.html":{}}}],["substantial",{"_index":2548,"title":{},"body":{"license.html":{}}}],["success",{"_index":558,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/RestEffects.html":{},"interfaces/ThemeVariants.html":{},"miscellaneous/typealiases.html":{}}}],["successful",{"_index":595,"title":{},"body":{"interfaces/ManifestEntry.html":{}}}],["successfully",{"_index":2485,"title":{},"body":{"index.html":{}}}],["such",{"_index":2451,"title":{},"body":{"index.html":{}}}],["super(injector",{"_index":150,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["support",{"_index":2136,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":2030,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["switch",{"_index":576,"title":{},"body":{"injectables/ManifestEffects.html":{},"pipes/SafePipe.html":{},"injectables/ThemeService.html":{}}}],["switchmap",{"_index":465,"title":{},"body":{"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/RestEffects.html":{}}}],["switchmap(([event",{"_index":455,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["switchmap(([manifests",{"_index":503,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["switchmap(action",{"_index":657,"title":{},"body":{"injectables/MessageManifestEffects.html":{},"injectables/RestEffects.html":{}}}],["switchmap(manifest",{"_index":652,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["symbol",{"_index":1283,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["t",{"_index":289,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{}}}],["tab",{"_index":2113,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1557,"title":{},"body":{"injectables/ThemeService.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"miscellaneous/typealiases.html":{}}}],["tablebackgroundlevel",{"_index":1558,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tablebgvalue",{"_index":1560,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tableborderlevel",{"_index":1559,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tablebordervalue",{"_index":1563,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tablet",{"_index":2389,"title":{},"body":{"changelog.html":{}}}],["tabs",{"_index":1727,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["tabs.component",{"_index":1694,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["tabs/wvr",{"_index":1693,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["tag",{"_index":69,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/WvrElementDesc.html":{}}}],["tags",{"_index":1716,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["take",{"_index":566,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{}}}],["take(1",{"_index":501,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["tamulib/tamu",{"_index":2090,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":1278,"title":{},"body":{"interfaces/SelectOptions.html":{},"interfaces/WvrElementDesc.html":{}}}],["targetname",{"_index":293,"title":{},"body":{"injectables/AnimationService.html":{}}}],["targets",{"_index":292,"title":{},"body":{"injectables/AnimationService.html":{}}}],["targets.foreach(r",{"_index":329,"title":{},"body":{"injectables/AnimationService.html":{}}}],["targets.push(component",{"_index":325,"title":{},"body":{"injectables/AnimationService.html":{}}}],["tasks",{"_index":245,"title":{},"body":{"injectables/AnimationService.html":{}}}],["template",{"_index":1602,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["template.content.appendchild(element",{"_index":1836,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["template[${this.template",{"_index":1614,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{}}}],["template[button",{"_index":163,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["templateurl",{"_index":39,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["test",{"_index":688,"title":{},"body":{"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{}}}],["testing",{"_index":691,"title":{},"body":{"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{}}}],["testinput",{"_index":145,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["tests",{"_index":1218,"title":{},"body":{"interfaces/RootState.html":{},"changelog.html":{}}}],["texas",{"_index":2515,"title":{},"body":{"license.html":{}}}],["text",{"_index":120,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/RequestOptions.html":{},"injectables/ThemeService.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["text.component",{"_index":1697,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["text/wvr",{"_index":1696,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["textalign",{"_index":122,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["theme",{"_index":370,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/RootState.html":{},"interfaces/State-4.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariants.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["theme.actions",{"_index":1368,"title":{},"body":{"interfaces/State-4.html":{}}}],["theme.component",{"_index":1700,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["theme.component.ts",{"_index":1934,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["theme.component.ts:18",{"_index":1946,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["theme.component.ts:21",{"_index":1941,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["theme.component.ts:24",{"_index":1940,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["theme.component.ts:27",{"_index":1942,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["theme.component.ts:29",{"_index":1939,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["theme.component.ts:35",{"_index":1945,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["theme.default",{"_index":1370,"title":{},"body":{"interfaces/State-4.html":{}}}],["theme.json",{"_index":1365,"title":{},"body":{"interfaces/State-4.html":{}}}],["theme.service",{"_index":1394,"title":{},"body":{"injectables/ThemeEffects.html":{}}}],["theme/theme.effects",{"_index":1711,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["theme/theme.reducers",{"_index":1143,"title":{},"body":{"interfaces/RootState.html":{}}}],["theme/theme.service",{"_index":1712,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["theme/wvr",{"_index":1699,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{}}}],["theme[k].basecolor",{"_index":1470,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeable.component",{"_index":1425,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeable.component.ts",{"_index":1956,"title":{},"body":{"interfaces/WvrThemeableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["themeable.component.ts:12",{"_index":1960,"title":{},"body":{"interfaces/WvrThemeableComponent.html":{}}}],["themeablecomponent",{"_index":1404,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeablecomponent.style",{"_index":1444,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeablecomponent.themeoverrides[customproperty",{"_index":1466,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeablecomponent.varianttypes.foreach(varianttype",{"_index":1472,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeactions",{"_index":1367,"title":{},"body":{"interfaces/State-4.html":{},"components/WvrThemeComponent.html":{}}}],["themecolorinterval",{"_index":1456,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themedcomponents",{"_index":1396,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeeffects",{"_index":1390,"title":{"injectables/ThemeEffects.html":{}},"body":{"injectables/ThemeEffects.html":{},"modules/WvrCoreModule.html":{}}}],["themename",{"_index":1409,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeoverrides",{"_index":1957,"title":{},"body":{"interfaces/WvrThemeableComponent.html":{}}}],["themes",{"_index":1360,"title":{},"body":{"interfaces/State-4.html":{},"injectables/ThemeService.html":{}}}],["themes[name",{"_index":1376,"title":{},"body":{"interfaces/State-4.html":{}}}],["themeservice",{"_index":1392,"title":{"injectables/ThemeService.html":{}},"body":{"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"modules/WvrCoreModule.html":{},"overview.html":{}}}],["themestate",{"_index":1209,"title":{},"body":{"interfaces/RootState.html":{},"injectables/ThemeService.html":{}}}],["themestate.themes",{"_index":1432,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themestate.themes[name",{"_index":1210,"title":{},"body":{"interfaces/RootState.html":{}}}],["themestate.themes[themestate.currenttheme",{"_index":1212,"title":{},"body":{"interfaces/RootState.html":{}}}],["themevariant",{"_index":54,"title":{"interfaces/ThemeVariant.html":{}},"body":{"interfaces/ActionAndProps.html":{},"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{}}}],["themevariantname",{"_index":29,"title":{},"body":{"interfaces/ActionAndProps.html":{},"miscellaneous/typealiases.html":{}}}],["themevariants",{"_index":1361,"title":{"interfaces/ThemeVariants.html":{}},"body":{"interfaces/State-4.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariants.html":{},"components/WvrThemeComponent.html":{}}}],["theming",{"_index":2162,"title":{},"body":{"changelog.html":{}}}],["then((appconfig",{"_index":1800,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["then((response",{"_index":1798,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["then(showweaverelements",{"_index":1804,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["this._action",{"_index":128,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this._actionprops",{"_index":132,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this._animationtargetsregistry.get(targetname",{"_index":321,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this._animationtargetsregistry.set(targetname",{"_index":324,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this._dispatchactions",{"_index":139,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this._dispatchactions.foreach(actionandprop",{"_index":166,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this._sanitizer.bypasssecuritytrusthtml(value",{"_index":1253,"title":{},"body":{"pipes/SafePipe.html":{}}}],["this._sanitizer.bypasssecuritytrustresourceurl(value",{"_index":1257,"title":{},"body":{"pipes/SafePipe.html":{}}}],["this._sanitizer.bypasssecuritytrustscript(value",{"_index":1255,"title":{},"body":{"pipes/SafePipe.html":{}}}],["this._sanitizer.bypasssecuritytruststyle(value",{"_index":1254,"title":{},"body":{"pipes/SafePipe.html":{}}}],["this._sanitizer.bypasssecuritytrusturl(value",{"_index":1256,"title":{},"body":{"pipes/SafePipe.html":{}}}],["this._variants",{"_index":1952,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["this.actionregistry",{"_index":151,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this.actionregistry.getactions(parts[0",{"_index":197,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this.actions",{"_index":237,"title":{},"body":{"injectables/ActionRegistryService.html":{}}}],["this.actions.pipe",{"_index":488,"title":{},"body":{"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/RestEffects.html":{}}}],["this.actions[key",{"_index":238,"title":{},"body":{"injectables/ActionRegistryService.html":{}}}],["this.active",{"_index":1954,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["this.animationstates.set(id",{"_index":328,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.applytheme(theme",{"_index":1441,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.applytheme(this.currenttheme",{"_index":1436,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.applythemeoverride",{"_index":80,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this.beforeconnect.bind(this",{"_index":927,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.builder.build(a",{"_index":350,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.clients",{"_index":880,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.clients.delete(manifest.name",{"_index":950,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.clients.set(manifest.name",{"_index":949,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.compileanimation(stateid",{"_index":355,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.componentregistry.getcomponentbyelement(parentelem",{"_index":1890,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["this.createclient(manifest",{"_index":896,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.currenttheme",{"_index":1433,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.debug.bind(this",{"_index":931,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.delete",{"_index":1012,"title":{},"body":{"injectables/RestEffects.html":{}}}],["this.emitevent",{"_index":170,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this.eref.nativeelement",{"_index":177,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this.eref.nativeelement.closest('wvre",{"_index":1888,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["this.eref.nativeelement.dispatchevent(new",{"_index":171,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this.get",{"_index":1018,"title":{},"body":{"injectables/RestEffects.html":{}}}],["this.getcomponent(id",{"_index":426,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["this.http.delete(url",{"_index":1099,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.get(url",{"_index":1094,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.options(url",{"_index":1093,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.patch(url",{"_index":1098,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.post(url",{"_index":1096,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.put(url",{"_index":1097,"title":{},"body":{"injectables/RestService.html":{}}}],["this.id",{"_index":51,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this.index",{"_index":416,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["this.ismobile",{"_index":456,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["this.messageservice.connect(manifest",{"_index":646,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["this.messageservice.deleteclient(action.manifest",{"_index":658,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["this.messageservice.disconnect(manifest",{"_index":661,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["this.messageservice.subscribe(action.manifest",{"_index":673,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["this.messageservice.unsubscribe(action.manifest",{"_index":682,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["this.name",{"_index":1893,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["this.ngrxoniniteffects",{"_index":457,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["this.onchangestate.bind(this",{"_index":929,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.onstomperror.bind(this",{"_index":933,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.onwebsocketclose.bind(this",{"_index":935,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.onwebsocketerror.bind(this",{"_index":937,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.options",{"_index":1022,"title":{},"body":{"injectables/RestEffects.html":{}}}],["this.parent",{"_index":1889,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["this.parent.addentry(this",{"_index":1891,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["this.parentelementref",{"_index":1613,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{}}}],["this.parseactionnameandtype(ai.action",{"_index":141,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this.parseactionnameandtype(value",{"_index":129,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this.patch",{"_index":1026,"title":{},"body":{"injectables/RestEffects.html":{}}}],["this.post",{"_index":1030,"title":{},"body":{"injectables/RestEffects.html":{}}}],["this.preprocessoptions(request",{"_index":1100,"title":{},"body":{"injectables/RestService.html":{}}}],["this.processrequest(request",{"_index":1092,"title":{},"body":{"injectables/RestService.html":{}}}],["this.processrequestwithdata(request",{"_index":1095,"title":{},"body":{"injectables/RestService.html":{}}}],["this.processthemevariants(theme",{"_index":1443,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.put",{"_index":1034,"title":{},"body":{"injectables/RestEffects.html":{}}}],["this.registry.delete(id",{"_index":417,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["this.registry.get(id",{"_index":418,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["this.registry.set(++this.index",{"_index":415,"title":{},"body":{"injectables/ComponentRegistryService.html":{}}}],["this.requestsbymethod(method",{"_index":550,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["this.rest.delete(request",{"_index":1061,"title":{},"body":{"injectables/RestEffects.html":{}}}],["this.rest.get(request",{"_index":1057,"title":{},"body":{"injectables/RestEffects.html":{}}}],["this.rest.options(request",{"_index":1056,"title":{},"body":{"injectables/RestEffects.html":{}}}],["this.rest.patch(request",{"_index":1060,"title":{},"body":{"injectables/RestEffects.html":{}}}],["this.rest.post(request",{"_index":1058,"title":{},"body":{"injectables/RestEffects.html":{}}}],["this.rest.put(request",{"_index":1059,"title":{},"body":{"injectables/RestEffects.html":{}}}],["this.selectanimation(stateid",{"_index":348,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.store.dispatch(actionandprop.action",{"_index":167,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this.store.dispatch(messagemanifestactions.connectmanifestconnected",{"_index":939,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.store.dispatch(messagemanifestactions.disconnectmanifestdisconnected",{"_index":945,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.store.dispatch(messagemanifestactions.receivemessage",{"_index":920,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.store.dispatch(themeactions.add",{"_index":1953,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["this.store.dispatch(themeactions.select",{"_index":1955,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["this.store.dispatch(this._action",{"_index":169,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this.store.pipe",{"_index":499,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/SelectOptions.html":{},"injectables/ThemeService.html":{}}}],["this.subjects",{"_index":978,"title":{},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{}}}],["this.subjects[key",{"_index":979,"title":{},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{}}}],["this.subjects[key].push(subject",{"_index":980,"title":{},"body":{"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{}}}],["this.subscription",{"_index":1427,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.subscription.unsubscribe",{"_index":1437,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themedcomponents",{"_index":1426,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themedcomponents.delete(id",{"_index":1439,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themedcomponents.foreach((themeablecomponent",{"_index":1435,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themedcomponents.set(id",{"_index":1438,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themes",{"_index":1431,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themes[themename",{"_index":1440,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themes[themestate.currenttheme",{"_index":1434,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themevariant",{"_index":81,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["this.unsubscribe(manifest",{"_index":903,"title":{},"body":{"injectables/MessageService.html":{}}}],["this[timeoutkey",{"_index":1288,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["those",{"_index":2496,"title":{},"body":{"index.html":{}}}],["threshold",{"_index":1450,"title":{},"body":{"injectables/ThemeService.html":{}}}],["through",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":1258,"title":{},"body":{"pipes/SafePipe.html":{},"modules/WvrCoreModule.html":{}}}],["time",{"_index":1273,"title":{},"body":{"interfaces/SelectOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["timeoutkey",{"_index":1282,"title":{},"body":{"interfaces/SelectOptions.html":{}}}],["timing",{"_index":295,"title":{},"body":{"injectables/AnimationService.html":{}}}],["timing.utility",{"_index":1268,"title":{},"body":{"interfaces/SelectOptions.html":{},"interfaces/WvrElementDesc.html":{}}}],["tinymce",{"_index":2013,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["tinymce/tinymce",{"_index":1925,"title":{},"body":{"modules/WvrSharedModule.html":{},"dependencies.html":{}}}],["title",{"_index":1972,"title":{},"body":{"interfaces/WvrwysiwygSubMenu.html":{},"changelog.html":{}}}],["todo",{"_index":537,"title":{"todo.html":{}},"body":{"injectables/ManifestEffects.html":{},"injectables/RestEffects.html":{},"interfaces/RootState.html":{}}}],["toggle",{"_index":2218,"title":{},"body":{"changelog.html":{}}}],["token",{"_index":383,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{}}}],["toolkit",{"_index":2443,"title":{},"body":{"index.html":{}}}],["tools",{"_index":1967,"title":{},"body":{"interfaces/WvrWysiwygMenu.html":{}}}],["tort",{"_index":2569,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1109,"title":{},"body":{"injectables/RestService.html":{}}}],["total",{"_index":806,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["transform",{"_index":433,"title":{},"body":{"pipes/DefaultPipe.html":{},"pipes/SafePipe.html":{}}}],["transform(value",{"_index":434,"title":{},"body":{"pipes/DefaultPipe.html":{},"pipes/SafePipe.html":{}}}],["tray",{"_index":2065,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":1872,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["trigger",{"_index":2239,"title":{},"body":{"changelog.html":{}}}],["triggeranimations",{"_index":1587,"title":{},"body":{"interfaces/WvrAnimationComponent.html":{}}}],["triggeranimations(animationtriggertype",{"_index":1592,"title":{},"body":{"interfaces/WvrAnimationComponent.html":{}}}],["triggeranimationtarget",{"_index":254,"title":{},"body":{"injectables/AnimationService.html":{}}}],["triggeranimationtarget(targetname",{"_index":299,"title":{},"body":{"injectables/AnimationService.html":{}}}],["triggering",{"_index":865,"title":{},"body":{"injectables/MessageService.html":{}}}],["triggers",{"_index":301,"title":{},"body":{"injectables/AnimationService.html":{}}}],["trim",{"_index":1451,"title":{},"body":{"injectables/ThemeService.html":{}}}],["true",{"_index":174,"title":{},"body":{"interfaces/ActionAndProps.html":{},"pipes/DefaultPipe.html":{},"pipes/SafePipe.html":{},"interfaces/SelectOptions.html":{},"interfaces/State-2.html":{},"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{}}}],["try",{"_index":1731,"title":{},"body":{"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{}}}],["tslint:disable",{"_index":179,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ComponentRegistryService.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageManifestState.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/SelectOptions.html":{},"interfaces/State-1.html":{},"injectables/ThemeService.html":{},"directives/WvrContentProjectionDirective.html":{},"components/WvrThemeComponent.html":{}}}],["tslint:disable:invalid",{"_index":951,"title":{},"body":{"injectables/MessageService.html":{}}}],["tslint:disable:no",{"_index":921,"title":{},"body":{"injectables/MessageService.html":{}}}],["tslint:disable:unnecessary",{"_index":925,"title":{},"body":{"injectables/MessageService.html":{}}}],["two",{"_index":2133,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ActionRegistryService.html":{},"injectables/AnimationService.html":{},"interfaces/AppConfig.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"interfaces/Layout.html":{},"injectables/LayoutEffects.html":{},"interfaces/Manifest.html":{},"injectables/ManifestEffects.html":{},"interfaces/ManifestEntry.html":{},"interfaces/ManifestEntryRequest.html":{},"interfaces/MappingStrategy.html":{},"interfaces/MessageClientOptions.html":{},"interfaces/MessageManifest.html":{},"injectables/MessageManifestEffects.html":{},"interfaces/MessageManifestEntry.html":{},"interfaces/MessageManifestEntryMessage.html":{},"interfaces/MessageManifestState.html":{},"injectables/MessageService.html":{},"interfaces/Modal.html":{},"injectables/ModalEffects.html":{},"injectables/NgBindingsService.html":{},"interfaces/RefBindingSubject.html":{},"interfaces/Request.html":{},"interfaces/RequestOptions.html":{},"injectables/RestEffects.html":{},"injectables/RestService.html":{},"interfaces/RootState.html":{},"pipes/SafePipe.html":{},"interfaces/SelectOptions.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"injectables/ThemeEffects.html":{},"injectables/ThemeService.html":{},"interfaces/ThemeVariant.html":{},"interfaces/ThemeVariants.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"interfaces/WvrDataComponent.html":{},"interfaces/WvrDataSelect.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2578,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":1998,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":2079,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":423,"title":{},"body":{"injectables/ComponentRegistryService.html":{},"injectables/ManifestEffects.html":{},"interfaces/MessageManifestState.html":{},"interfaces/RootState.html":{},"interfaces/State-1.html":{},"interfaces/State-3.html":{},"interfaces/WvrElementDesc.html":{}}}],["under",{"_index":2488,"title":{},"body":{"index.html":{}}}],["unique",{"_index":479,"title":{},"body":{"interfaces/Manifest.html":{},"interfaces/ManifestEntry.html":{},"interfaces/MessageManifest.html":{},"interfaces/MessageManifestEntry.html":{},"changelog.html":{}}}],["university",{"_index":2517,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2251,"title":{},"body":{"changelog.html":{}}}],["unregistercomponent",{"_index":394,"title":{},"body":{"injectables/ComponentRegistryService.html":{},"injectables/ThemeService.html":{}}}],["unregistercomponent(id",{"_index":402,"title":{},"body":{"injectables/ComponentRegistryService.html":{},"injectables/ThemeService.html":{}}}],["unsubscribe",{"_index":824,"title":{},"body":{"injectables/MessageService.html":{}}}],["unsubscribe(id",{"_index":923,"title":{},"body":{"injectables/MessageService.html":{}}}],["unsubscribe(manifest",{"_index":839,"title":{},"body":{"injectables/MessageService.html":{}}}],["unsubscribed",{"_index":2355,"title":{},"body":{"changelog.html":{}}}],["unsubscribemanifest",{"_index":640,"title":{},"body":{"injectables/MessageManifestEffects.html":{}}}],["unsubscribing",{"_index":835,"title":{},"body":{"injectables/MessageService.html":{}}}],["unsubscriptions",{"_index":898,"title":{},"body":{"injectables/MessageService.html":{}}}],["until",{"_index":690,"title":{},"body":{"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"interfaces/SelectOptions.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["unwrap",{"_index":1369,"title":{},"body":{"interfaces/State-4.html":{},"interfaces/WvrElementDesc.html":{},"components/WvrMessageManifestEntryComponent.html":{}}}],["unwrap(defaultdarktheme",{"_index":1373,"title":{},"body":{"interfaces/State-4.html":{}}}],["unwrap(defaulttheme",{"_index":1371,"title":{},"body":{"interfaces/State-4.html":{}}}],["update",{"_index":750,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{},"injectables/ThemeService.html":{},"changelog.html":{}}}],["updated",{"_index":2164,"title":{},"body":{"changelog.html":{}}}],["updates",{"_index":753,"title":{},"body":{"interfaces/MessageManifestState.html":{},"interfaces/State-1.html":{}}}],["upgrade",{"_index":2012,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":541,"title":{},"body":{"injectables/ManifestEffects.html":{},"interfaces/Request.html":{},"injectables/RestService.html":{},"pipes/SafePipe.html":{},"changelog.html":{},"index.html":{}}}],["usage",{"_index":2222,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["use",{"_index":696,"title":{},"body":{"interfaces/MessageManifestEntry.html":{},"components/WvrMessageManifestEntryComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useanimation",{"_index":310,"title":{},"body":{"injectables/AnimationService.html":{}}}],["useanimation(animation(animationinput",{"_index":356,"title":{},"body":{"injectables/AnimationService.html":{}}}],["used",{"_index":52,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ComponentRegistryService.html":{},"interfaces/SelectOptions.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["usevalue",{"_index":1802,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["using",{"_index":847,"title":{},"body":{"injectables/MessageService.html":{},"changelog.html":{},"index.html":{}}}],["utility",{"_index":242,"title":{},"body":{"injectables/AnimationService.html":{},"directives/WvrContentProjectionDirective.html":{},"changelog.html":{}}}],["utilize",{"_index":2128,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["utilizing",{"_index":2454,"title":{},"body":{"index.html":{}}}],["valid",{"_index":191,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["validate",{"_index":538,"title":{},"body":{"injectables/ManifestEffects.html":{}}}],["value",{"_index":83,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"pipes/DefaultPipe.html":{},"injectables/LayoutEffects.html":{},"injectables/ManifestEffects.html":{},"injectables/MessageManifestEffects.html":{},"injectables/MessageService.html":{},"injectables/RestEffects.html":{},"pipes/SafePipe.html":{},"injectables/ThemeService.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["values",{"_index":367,"title":{},"body":{"interfaces/AppConfig.html":{}}}],["var",{"_index":1895,"title":{},"body":{"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["variable",{"_index":1471,"title":{},"body":{"injectables/ThemeService.html":{}}}],["variables",{"_index":1468,"title":{},"body":{"injectables/ThemeService.html":{},"changelog.html":{}}}],["variant",{"_index":1467,"title":{},"body":{"injectables/ThemeService.html":{},"interfaces/ThemeVariants.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["variant.ts",{"_index":1567,"title":{},"body":{"interfaces/ThemeVariant.html":{}}}],["variants",{"_index":1478,"title":{},"body":{"injectables/ThemeService.html":{},"components/WvrThemeComponent.html":{},"changelog.html":{}}}],["variants(value",{"_index":1951,"title":{},"body":{"components/WvrThemeComponent.html":{}}}],["variants.ts",{"_index":1575,"title":{},"body":{"interfaces/ThemeVariants.html":{}}}],["varianttype",{"_index":1473,"title":{},"body":{"injectables/ThemeService.html":{},"interfaces/WvrThemeableComponent.html":{},"miscellaneous/typealiases.html":{}}}],["varianttypes",{"_index":147,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/WvrThemeableComponent.html":{}}}],["vendor",{"_index":2363,"title":{},"body":{"changelog.html":{}}}],["verdaccio",{"_index":2059,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["version",{"_index":2018,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versions",{"_index":2282,"title":{},"body":{"changelog.html":{}}}],["vertical",{"_index":123,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["verticalalign",{"_index":124,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["very",{"_index":2475,"title":{},"body":{"index.html":{}}}],["via",{"_index":2058,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["view",{"_index":154,"title":{},"body":{"interfaces/ActionAndProps.html":{},"interfaces/WvrElementDesc.html":{},"interfaces/WvrWysiwygMenu.html":{}}}],["visit",{"_index":2507,"title":{},"body":{"index.html":{}}}],["visual",{"_index":2338,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":161,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"injectables/MessageService.html":{},"injectables/RestService.html":{},"injectables/ThemeService.html":{},"interfaces/WvrAnimationComponent.html":{},"directives/WvrContentProjectionDirective.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrThemeableComponent.html":{}}}],["want",{"_index":2497,"title":{},"body":{"index.html":{}}}],["warning",{"_index":1582,"title":{},"body":{"interfaces/ThemeVariants.html":{},"changelog.html":{}}}],["warnings",{"_index":2186,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":2555,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2550,"title":{},"body":{"license.html":{}}}],["way",{"_index":2134,"title":{},"body":{"changelog.html":{}}}],["weaver",{"_index":373,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/MessageService.html":{},"interfaces/WvrElementDesc.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["weaverbootstrap",{"_index":1795,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["weaverbootstrap(module)(isdevmode",{"_index":1790,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["weaverinit",{"_index":1782,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["web",{"_index":871,"title":{},"body":{"injectables/MessageService.html":{},"changelog.html":{}}}],["web_socket",{"_index":2591,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["websocket",{"_index":854,"title":{},"body":{"injectables/MessageService.html":{}}}],["weight",{"_index":114,"title":{},"body":{"interfaces/ActionAndProps.html":{}}}],["well",{"_index":2501,"title":{},"body":{"index.html":{}}}],["whatwg",{"_index":2000,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":2567,"title":{},"body":{"license.html":{}}}],["white",{"_index":1460,"title":{},"body":{"injectables/ThemeService.html":{}}}],["width",{"_index":2167,"title":{},"body":{"changelog.html":{}}}],["wiki",{"_index":2508,"title":{},"body":{"index.html":{}}}],["win",{"_index":1785,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["win.weaverbootstrapevent",{"_index":1787,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["window",{"_index":1786,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["window.innerwidth",{"_index":473,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["withcredentials",{"_index":986,"title":{},"body":{"interfaces/RequestOptions.html":{}}}],["within",{"_index":2333,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["withlatestfrom",{"_index":466,"title":{},"body":{"injectables/LayoutEffects.html":{},"injectables/MessageManifestEffects.html":{}}}],["withlatestfrom(this.store.pipe(select(selectismobilelayout",{"_index":454,"title":{},"body":{"injectables/LayoutEffects.html":{}}}],["without",{"_index":1219,"title":{},"body":{"interfaces/RootState.html":{},"changelog.html":{},"license.html":{}}}],["work",{"_index":1115,"title":{},"body":{"injectables/RestService.html":{},"changelog.html":{}}}],["working",{"_index":2008,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":1725,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["works.component",{"_index":1669,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["works/wvr",{"_index":1668,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["wrap",{"_index":1818,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["wrapped",{"_index":1842,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["wrapping",{"_index":2041,"title":{},"body":{"changelog.html":{}}}],["wvr",{"_index":37,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/ComponentRegistryService.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"changelog.html":{}}}],["wvr/elementsinstallation",{"_index":2466,"title":{},"body":{"index.html":{}}}],["wvr_components",{"_index":1932,"title":{},"body":{"modules/WvrSharedModule.html":{}}}],["wvr_elements",{"_index":1717,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["wvr_pipes",{"_index":1933,"title":{},"body":{"modules/WvrSharedModule.html":{}}}],["wvralertcomponent",{"_index":1645,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvranimationcomponent",{"_index":317,"title":{"interfaces/WvrAnimationComponent.html":{}},"body":{"injectables/AnimationService.html":{},"interfaces/WvrAnimationComponent.html":{}}}],["wvranimationdefaults",{"_index":312,"title":{},"body":{"injectables/AnimationService.html":{}}}],["wvranimationdefaults[animationname].from",{"_index":347,"title":{},"body":{"injectables/AnimationService.html":{}}}],["wvranimationdefaults[animationname].timing",{"_index":343,"title":{},"body":{"injectables/AnimationService.html":{}}}],["wvranimationdefaults[animationname].to",{"_index":345,"title":{},"body":{"injectables/AnimationService.html":{}}}],["wvranimationdefaults[animname].from",{"_index":338,"title":{},"body":{"injectables/AnimationService.html":{}}}],["wvranimationinitialization",{"_index":315,"title":{},"body":{"injectables/AnimationService.html":{}}}],["wvranimationinitialization[animname",{"_index":336,"title":{},"body":{"injectables/AnimationService.html":{}}}],["wvranimations",{"_index":316,"title":{},"body":{"injectables/AnimationService.html":{}}}],["wvranimations[animationname",{"_index":358,"title":{},"body":{"injectables/AnimationService.html":{}}}],["wvrbasecomponent",{"_index":33,"title":{},"body":{"interfaces/ActionAndProps.html":{},"injectables/AnimationService.html":{},"injectables/ComponentRegistryService.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["wvrbuttoncomponent",{"_index":47,"title":{},"body":{"interfaces/ActionAndProps.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrcardcomponent",{"_index":1649,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrcolorpreviewcomponent",{"_index":1652,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrcontentprojection",{"_index":1600,"title":{},"body":{"directives/WvrContentProjectionDirective.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{}}}],["wvrcontentprojectiondirective",{"_index":1596,"title":{"directives/WvrContentProjectionDirective.html":{}},"body":{"directives/WvrContentProjectionDirective.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrcoremodule",{"_index":1616,"title":{"modules/WvrCoreModule.html":{}},"body":{"modules/WvrCoreModule.html":{},"modules.html":{},"overview.html":{}}}],["wvrdatacomponent",{"_index":1753,"title":{"interfaces/WvrDataComponent.html":{}},"body":{"interfaces/WvrDataComponent.html":{}}}],["wvrdataselect",{"_index":1759,"title":{"interfaces/WvrDataSelect.html":{}},"body":{"interfaces/WvrDataSelect.html":{}}}],["wvrdropdowncomponent",{"_index":1655,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvre",{"_index":1718,"title":{},"body":{"modules/WvrCoreModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["wvrelement.lazy",{"_index":1815,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["wvrelement.selector",{"_index":1832,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["wvrelement.selector.touppercase",{"_index":1817,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["wvrelementdesc",{"_index":1643,"title":{"interfaces/WvrElementDesc.html":{}},"body":{"modules/WvrCoreModule.html":{},"interfaces/WvrElementDesc.html":{}}}],["wvrelements",{"_index":1813,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["wvrelements.filter(wvrelement",{"_index":1814,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["wvrelements.foreach(wvrelement",{"_index":1837,"title":{},"body":{"interfaces/WvrElementDesc.html":{}}}],["wvrfootercomponent",{"_index":1658,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrheadercomponent",{"_index":1661,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvriconcomponent",{"_index":1664,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvritworkscomponent",{"_index":1667,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrlistcomponent",{"_index":1670,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrlistitemcomponent",{"_index":1673,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrmanifestcomponent",{"_index":1680,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrmanifestentrycomponent",{"_index":1676,"title":{"components/WvrManifestEntryComponent.html":{}},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrmessagemanifestcomponent",{"_index":1683,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrmessagemanifestentrycomponent",{"_index":1682,"title":{"components/WvrMessageManifestEntryComponent.html":{}},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrmodalcomponent",{"_index":1684,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrnavlicomponent",{"_index":1687,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrnavlistcomponent",{"_index":1691,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrselect",{"_index":1302,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["wvrselect(option",{"_index":1291,"title":{},"body":{"interfaces/SelectOptions.html":{},"miscellaneous/functions.html":{}}}],["wvrsharedmodule",{"_index":1912,"title":{"modules/WvrSharedModule.html":{}},"body":{"modules/WvrSharedModule.html":{},"modules.html":{},"overview.html":{}}}],["wvrtabscomponent",{"_index":1692,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrtextcomponent",{"_index":1695,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrthemeablecomponent",{"_index":1405,"title":{"interfaces/WvrThemeableComponent.html":{}},"body":{"injectables/ThemeService.html":{},"interfaces/WvrThemeableComponent.html":{}}}],["wvrthemecomponent",{"_index":1698,"title":{"components/WvrThemeComponent.html":{}},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrtimeout",{"_index":1267,"title":{},"body":{"interfaces/SelectOptions.html":{},"interfaces/WvrElementDesc.html":{}}}],["wvrwysiwyg",{"_index":2220,"title":{},"body":{"changelog.html":{}}}],["wvrwysiwygcomponent",{"_index":1701,"title":{},"body":{"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"modules/WvrSharedModule.html":{},"components/WvrThemeComponent.html":{},"overview.html":{}}}],["wvrwysiwygmenu",{"_index":1961,"title":{"interfaces/WvrWysiwygMenu.html":{}},"body":{"interfaces/WvrWysiwygMenu.html":{}}}],["wvrwysiwygsubmenu",{"_index":1968,"title":{"interfaces/WvrwysiwygSubMenu.html":{}},"body":{"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{}}}],["wysiwyg",{"_index":1122,"title":{"interfaces/Wysiwyg.html":{}},"body":{"interfaces/RootState.html":{},"interfaces/State-5.html":{},"modules/WvrCoreModule.html":{},"components/WvrManifestEntryComponent.html":{},"components/WvrMessageManifestEntryComponent.html":{},"components/WvrThemeComponent.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{},"interfaces/Wysiwyg.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["wysiwyg.actions",{"_index":1381,"title":{},"body":{"interfaces/State-5.html":{}}}],["wysiwyg.component",{"_index":1703,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{}}}],["wysiwyg.id",{"_index":1383,"title":{},"body":{"interfaces/State-5.html":{}}}],["wysiwyg/wvr",{"_index":1702,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{},"interfaces/WvrWysiwygMenu.html":{},"interfaces/WvrwysiwygSubMenu.html":{}}}],["wysiwyg/wysiwyg.effects",{"_index":1714,"title":{},"body":{"modules/WvrCoreModule.html":{}}}],["wysiwyg/wysiwyg.reducers",{"_index":1147,"title":{},"body":{"interfaces/RootState.html":{}}}],["wysiwygactions",{"_index":1380,"title":{},"body":{"interfaces/State-5.html":{}}}],["wysiwygeffects",{"_index":1713,"title":{"injectables/WysiwygEffects.html":{}},"body":{"modules/WvrCoreModule.html":{},"injectables/WysiwygEffects.html":{}}}],["wysiwygstate",{"_index":1234,"title":{},"body":{"interfaces/RootState.html":{}}}],["wysiwygstate?.entities[id",{"_index":1235,"title":{},"body":{"interfaces/RootState.html":{}}}],["yiq",{"_index":1423,"title":{},"body":{"injectables/ThemeService.html":{}}}],["yiqconstrast",{"_index":1463,"title":{},"body":{"injectables/ThemeService.html":{}}}],["yiqconstrast(yiq(luminance(value",{"_index":1507,"title":{},"body":{"injectables/ThemeService.html":{}}}],["yiqconstrast(yiq(value",{"_index":1493,"title":{},"body":{"injectables/ThemeService.html":{}}}],["yiqcontrastedthreshold",{"_index":1447,"title":{},"body":{"injectables/ThemeService.html":{}}}],["yiqtextdark",{"_index":1452,"title":{},"body":{"injectables/ThemeService.html":{}}}],["yiqtextlight",{"_index":1454,"title":{},"body":{"injectables/ThemeService.html":{}}}],["z",{"_index":2378,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":1626,"title":{},"body":{"modules/WvrCoreModule.html":{},"modules/WvrSharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionAndProps.html":{"url":"interfaces/ActionAndProps.html","title":"interface - ActionAndProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionAndProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/wvr-button/wvr-button.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            props\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        props\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        props:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AfterViewInit, ChangeDetectionStrategy, Component, HostBinding, Injector, Input } from '@angular/core';\nimport * as JSON5 from 'json5';\nimport { ActionRegistryService } from '../core/action-registry.service';\nimport { ThemeVariantName } from '../shared/theme';\nimport { projectContent } from '../shared/utility/projection.utility';\nimport { WvrBaseComponent } from '../shared/wvr-base.component';\n\n@Component({\n  selector: 'wvr-button-component',\n  templateUrl: './wvr-button.component.html',\n  styleUrls: ['./wvr-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class WvrButtonComponent extends WvrBaseComponent implements AfterViewInit {\n\n  htmlId = `wvr-button-${this.id}`;\n\n  /** Used to define the class type for button component.  */\n  @Input() themeVariant: ThemeVariantName = 'primary';\n\n  /** Used to define the size for button component.  */\n  @Input() btnSize: 'large' | 'small' | 'block';\n\n  /** Used to define the type of a button.  */\n  @Input() btnType: 'button' | 'checkbox' | 'radio' | 'reset' | 'submit' | 'link' = 'button';\n\n  /** Allows for the button component to be an anchor tag component if href property present. */\n  @Input() href: string;\n\n  @Input() disabled = false;\n\n  /** Allows for the override of background */\n  @Input() set background(value: string) {\n    this.applyThemeOverride(`--${this.themeVariant}-button-bg`, value);\n  }\n\n  /** Allows for the override of active background */\n  @Input() set backgroundActive(value: string) {\n    this.applyThemeOverride(`--${this.themeVariant}-button-active-bg`, value);\n  }\n\n  /** Allows for the override of hover background */\n  @Input() set backgroundHover(value: string) {\n    this.applyThemeOverride(`--${this.themeVariant}-button-hover-bg`, value);\n  }\n\n  /** Allows for the override of border */\n  @Input() set borderColor(value: string) {\n    this.applyThemeOverride(`--${this.themeVariant}-button-border`, value);\n  }\n\n  /** Allows for the override of active border */\n  @Input() set borderActive(value: string) {\n    this.applyThemeOverride(`--${this.themeVariant}-button-active-border`, value);\n  }\n\n  /** Allows for the override of hover border */\n  @Input() set borderHover(value: string) {\n    this.applyThemeOverride(`--${this.themeVariant}-button-hover-border`, value);\n  }\n\n  /** Allows for the override of button border in focus state */\n  @Input() set borderFocus(value: string) {\n    this.applyThemeOverride(`--${this.themeVariant}-button-focus-border`, value);\n  }\n\n  /** Allows for override of box-shadow propery when the button is in focus state */\n  @Input() set boxShadowFocus(value: string) {\n    this.applyThemeOverride(`--${this.themeVariant}-button-focus-box-shadow`, value);\n  }\n\n  /** Allows for the override of color */\n  @Input() set color(value: string) {\n    this.applyThemeOverride(`--${this.themeVariant}-button-color`, value);\n  }\n\n  /** Allows for the override of active color */\n  @Input() set colorActive(value: string) {\n    this.applyThemeOverride(`--${this.themeVariant}-button-active-color`, value);\n  }\n\n  /** Allows for the override of hover color */\n  @Input() set colorHover(value: string) {\n    this.applyThemeOverride(`--${this.themeVariant}-button-hover-color`, value);\n  }\n\n  /** Allows for the override of button border radius */\n  @HostBinding('style.--wvr-btn-border-radius') @Input() borderRadius;\n\n  /** Allows for the override of button cursor property */\n  @HostBinding('style.--wvr-btn-cursor') @Input() cursor;\n\n  /** Allows for the override of button font family property */\n  @HostBinding('style.--wvr-btn-font-family-sans-serif') @Input() fontFamily;\n\n  /** Allows for the override of button font size property */\n  @HostBinding('style.--wvr-btn-font-size') @Input() fontSize;\n\n  /** Allows for the override of button font weight property */\n  @HostBinding('style.--wvr-btn-font-weight') @Input() fontWeight;\n\n  /** Allows for the override of button hover line height property */\n  @HostBinding('style.--wvr-btn-line-height') @Input() lineHeight;\n\n  /** Allows for the override of button padding property */\n  @HostBinding('style.--wvr-btn-padding') @Input() padding;\n\n  /** Allows for the override of button text align property */\n  @HostBinding('style.--wvr-btn-text-align') @Input() textAlign;\n\n  /** Allows for the override of button vertical align property */\n  @HostBinding('style.--wvr-btn-vertical-align') @Input() verticalAlign;\n\n  private _action: any;\n  @Input() set dispatchAction(value: string) {\n    this._action = this.parseActionNameAndType(value);\n  }\n\n  private _actionProps: any;\n  @Input() set dispatchActionProps(value: string) {\n    this._actionProps = JSON5.parse(value);\n  }\n\n  private _dispatchActions: Array;\n  @Input() set dispatchActions(value: string) {\n    const actionInputs = JSON5.parse(value);\n    this._dispatchActions = actionInputs.map(ai =>\n      ({\n        action: this.parseActionNameAndType(ai.action),\n        props: ai.props\n      }));\n  }\n\n  @Input() emitEvent: string;\n\n  @Input() btnTxt: string;\n\n  @Input() testInput: boolean;\n\n  variantTypes = ['button'];\n\n  actionRegistry?: ActionRegistryService;\n\n  constructor(injector: Injector) {\n    super(injector);\n    this.actionRegistry = injector.get(ActionRegistryService);\n  }\n\n  /** Called after the view has been intialized. Handles the rendering of the projected content. */\n  ngAfterViewInit(): void {\n    projectContent(this.eRef, 'template[button-content]', 'span[button-content]');\n  }\n\n  onClick(): void {\n    if (this._dispatchActions) {\n      this._dispatchActions.forEach(actionAndProp => {\n        this.store.dispatch(actionAndProp.action(\n          actionAndProp.props\n        ));\n      });\n    } else if (this._action) {\n      this._actionProps ?\n      this.store.dispatch(this._action(\n        this._actionProps\n      )) :\n      this.store.dispatch(this._action());\n    }\n\n    if (this.emitEvent) {\n      this.eRef.nativeElement.dispatchEvent(new CustomEvent(this.emitEvent, {\n        bubbles: true,\n        detail: {\n          data: (this.eRef.nativeElement as HTMLElement).dataset,\n          button: this\n        }\n      }));\n    }\n  }\n\n  // tslint:disable-next-line:prefer-function-over-method\n  private parseActionNameAndType(nameAndType: string): any {\n    const parts = nameAndType.split('.');\n    if (parts.length !== 2) {\n      console.warn(`'${nameAndType}' is not a valid value for 'dispatch-action'. Must in form '[ActionType].[ActionName]'`);\n\n      return;\n    }\n\n    const registeredActions = this.actionRegistry.getActions(parts[0]);\n\n    if (!registeredActions) {\n      console.warn(`No registered actions were found for '${nameAndType}'.`);\n\n      return;\n    }\n\n    if (!parts[1] || !registeredActions[parts[1]]) {\n      const actions = Object.keys(registeredActions)\n        .join(',');\n      console.warn(`'${parts[1]}' is not a known action of ${parts[0]} (${actions}).`);\n\n      return;\n    }\n\n    return registeredActions[parts[1]];\n  }\n\n}\n\nexport interface ActionAndProps {\n  action: any;\n  props: Object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionRegistryService.html":{"url":"injectables/ActionRegistryService.html","title":"injectable - ActionRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActionRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/action-registry.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A registry for actions that can be dispatched.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActions\n                            \n                            \n                                putActions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/core/action-registry.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActions\n                        \n                    \n                \n            \n            \n                \ngetActions(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/action-registry.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putActions\n                        \n                    \n                \n            \n            \n                \nputActions(key: string, action: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/action-registry.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/action-registry.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { actions } from './actions';\n\n/**\n * A registry for actions that can be dispatched.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionRegistryService {\n\n  private readonly actions: any;\n\n  constructor() {\n    this.actions = { ...actions };\n  }\n\n  getActions(key: string): any {\n    return this.actions[key];\n  }\n\n  putActions(key: string, action: any): any {\n    this.actions[key] = action ;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationService.html":{"url":"injectables/AnimationService.html","title":"injectable - AnimationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnimationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/animation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A centralized utility for handeling animation tasks.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _animationTargetsRegistry\n                            \n                            \n                                    Private\n                                    Readonly\n                                animationStates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                compileAnimation\n                            \n                            \n                                initializeAnimationElement\n                            \n                            \n                                playAnimation\n                            \n                            \n                                registerAnimationStates\n                            \n                            \n                                registerAnimationTargets\n                            \n                            \n                                    Private\n                                selectAnimation\n                            \n                            \n                                triggerAnimationTarget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: AnimationBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/core/animation.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                        AnimationBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        compileAnimation\n                        \n                    \n                \n            \n            \n                \n                    \n                    compileAnimation(stateId, animationName, value)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/animation.service.ts:106\n                \n            \n\n\n            \n                \n                    Compiles the specified animation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stateId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    animationName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AnimationMetadata | Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeAnimationElement\n                        \n                    \n                \n            \n            \n                \ninitializeAnimationElement(stateId, animationConfig: literal type, animationRootElem)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/animation.service.ts:57\n                \n            \n\n\n            \n                \n                    Runs the initialization function for each configured animation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stateId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    animationConfig\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    animationRootElem\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playAnimation\n                        \n                    \n                \n            \n            \n                \nplayAnimation(stateId: number, animationName: string, animationConfig: literal type, animationRoot: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/animation.service.ts:70\n                \n            \n\n\n            \n                \n                    Plays the specified animation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stateId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    animationName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    animationConfig\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    animationRoot\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AnimationPlayer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAnimationStates\n                        \n                    \n                \n            \n            \n                \nregisterAnimationStates()\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/animation.service.ts:39\n                \n            \n\n\n            \n                \n                    Creates an entry in the animation state registry and assigns a random identifier\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerAnimationTargets\n                        \n                    \n                \n            \n            \n                \nregisterAnimationTargets(targetName: string, component: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/animation.service.ts:28\n                \n            \n\n\n            \n                \n                    Adds a component to the registry of targets\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    component\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        selectAnimation\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectAnimation(stateId: number, animationName: string, timing: string, to: string, from: string, animationRoot: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/animation.service.ts:91\n                \n            \n\n\n            \n                \n                    Retrieves specified the animation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stateId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    animationName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timing\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    from\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    animationRoot\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AnimationReferenceMetadata\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerAnimationTarget\n                        \n                    \n                \n            \n            \n                \ntriggerAnimationTarget(targetName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/animation.service.ts:47\n                \n            \n\n\n            \n                \n                    Triggers associated animations from the _animationTargetsRegistry.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _animationTargetsRegistry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/animation.service.ts:20\n                        \n                    \n\n            \n                \n                    A registry of WvrBaseComponent which are participating in animations.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animationStates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/animation.service.ts:23\n                        \n                    \n\n            \n                \n                    Records state for each WvrBaseComponent which is participating in animation\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { animation, AnimationBuilder, AnimationMetadata, AnimationPlayer, AnimationReferenceMetadata, useAnimation } from '@angular/animations';\nimport { Injectable } from '@angular/core';\nimport { wvrAnimationDefaults } from '../shared/animation/wvr-animation-defaults';\nimport { wvrAnimationInitialization, wvrAnimations } from '../shared/animation/wvr-animations';\nimport { WvrAnimationComponent } from '../shared/wvr-animation.component';\n\n/**\n * A centralized utility for handeling animation tasks.\n */\n@Injectable({\n  providedIn: 'root',\n  deps: [AnimationBuilder]\n})\nexport class AnimationService {\n\n  /** A registry of WvrBaseComponent which are participating in animations. */\n  private readonly _animationTargetsRegistry = new Map>();\n\n  /** Records state for each WvrBaseComponent which is participating in animation */\n  private readonly animationStates = new Map>();\n\n  constructor(private readonly builder: AnimationBuilder) { }\n\n  /** Adds a component to the registry of targets */\n  registerAnimationTargets(targetName: string, component: T): void {\n    let targets = this._animationTargetsRegistry.get(targetName);\n    /* istanbul ignore else */\n    if (!targets) {\n      targets = new Array();\n      this._animationTargetsRegistry.set(targetName, targets);\n    }\n    targets.push(component);\n  }\n\n  /** Creates an entry in the animation state registry and assigns a random identifier */\n  registerAnimationStates(): number {\n    const id = Math.random();\n    this.animationStates.set(id, new Map());\n\n    return id;\n  }\n\n  /** Triggers associated animations from the _animationTargetsRegistry. */\n  triggerAnimationTarget(targetName: string): void {\n    const targets = this._animationTargetsRegistry.get(targetName);\n    if (targets) {\n      targets.forEach(r => {\n        r.triggerAnimations('animationTrigger');\n      });\n    }\n  }\n\n  /** Runs the initialization function for each configured animation.  */\n  initializeAnimationElement(stateId, animationConfig: {}, animationRootElem): void {\n    Object.keys(animationConfig)\n      .forEach(animName => {\n        const animConf = animationConfig[animName];\n        const initializationMethod = wvrAnimationInitialization[animName];\n        if (initializationMethod && animationRootElem) {\n          const from = animConf.from ? animConf.from : wvrAnimationDefaults[animName].from;\n          initializationMethod(this.animationStates.get(stateId), from, animationRootElem.nativeElement);\n        }\n      });\n  }\n\n  /** Plays the specified animation. */\n  playAnimation(stateId: number, animationName: string, animationConfig: {}, animationRoot: HTMLElement): AnimationPlayer {\n    const timing = animationConfig[animationName] ?\n      animationConfig[animationName].timing :\n      wvrAnimationDefaults[animationName].timing;\n    const to = animationConfig[animationName] ?\n      animationConfig[animationName].to :\n      wvrAnimationDefaults[animationName].to;\n    const from = animationConfig[animationName] ?\n      animationConfig[animationName].from :\n      wvrAnimationDefaults[animationName].from;\n    const a = this.selectAnimation(stateId, animationName, timing, to, from, animationRoot);\n    if (a) {\n      const animationFactory = this.builder.build(a);\n      const player: AnimationPlayer = animationFactory.create(animationRoot);\n      player.play();\n\n      return player;\n    }\n  }\n\n  /** Retrieves specified the animation. */\n  private selectAnimation(stateId: number, animationName: string, timing: string,\n                          to: string, from: string, animationRoot: HTMLElement): AnimationReferenceMetadata {\n    const animationInput: AnimationMetadata | Array =\n    this.compileAnimation(stateId, animationName, animationRoot);\n\n    return useAnimation(animation(animationInput), {\n      params: {\n          timing,\n          to,\n          from\n        }\n    });\n  }\n\n  /** Compiles the specified animation. */\n  private compileAnimation(stateId, animationName, value): AnimationMetadata | Array {\n    const a = wvrAnimations[animationName];\n\n    if (!a) {\n      console.warn(`${animationName} not a known animation.`);\n\n      return [];\n    }\n\n    return a(this.animationStates.get(stateId), value);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppConfig.html":{"url":"interfaces/AppConfig.html","title":"interface - AppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/shared/config/app-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Describes the application configuration values.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            assetsUrl\n                                        \n                                \n                                \n                                        \n                                            baseUrl\n                                        \n                                \n                                \n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assetsUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assetsUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A reference to the location from which Weaver Component's Assets are currently being served.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A reference to the location from which Weaver Components is currently being served.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Theme to apply to all Weaver Components.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/** Describes the application configuration values. */\ninterface AppConfig {\n\n  /** Theme to apply to all Weaver Components. */\n  theme: string;\n\n  /** A reference to the location from which Weaver Components is currently being served. */\n  baseUrl: string;\n\n  /** A reference to the location from which Weaver Component's Assets are currently being served. */\n  assetsUrl?: string;\n\n}\n\n/** An injection token for the AppConfig */\nconst APP_CONFIG = new InjectionToken('APP_CONFIG');\n\nexport {\n  AppConfig,\n  APP_CONFIG\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentRegistryService.html":{"url":"injectables/ComponentRegistryService.html","title":"injectable - ComponentRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ComponentRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/component-registry.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A registry for each WvrBaseComponent currently present on the page.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                HTML_ID_BASE\n                            \n                            \n                                    Private\n                                index\n                            \n                            \n                                    Private\n                                    Readonly\n                                registry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponent\n                            \n                            \n                                getComponentByElement\n                            \n                            \n                                register\n                            \n                            \n                                unRegisterComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getComponent\n                        \n                    \n                \n            \n            \n                \ngetComponent(id: number | string)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/component-registry.service.ts:34\n                \n            \n\n\n            \n                \n                    Retrieves a WvrBaseComponent from the registry.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentByElement\n                        \n                    \n                \n            \n            \n                \ngetComponentByElement(element: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/component-registry.service.ts:39\n                \n            \n\n\n            \n                \n                    Retrieves a WvrBaseComponent from the registry by HTMLElement.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(component: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/component-registry.service.ts:21\n                \n            \n\n\n            \n                \n                    Adds a WvrBaseComponent to the registry.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unRegisterComponent\n                        \n                    \n                \n            \n            \n                \nunRegisterComponent(id: number | string)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/component-registry.service.ts:29\n                \n            \n\n\n            \n                \n                    Removes a WvrBaseComponent from the registry.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        HTML_ID_BASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'wvr-component'\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/component-registry.service.ts:18\n                        \n                    \n\n            \n                \n                    A statically accessible reference to the prefix used in deriving the HTML identifier.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -1\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/component-registry.service.ts:12\n                        \n                    \n\n            \n                \n                    Incrementing index of all registered components.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        registry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/component-registry.service.ts:15\n                        \n                    \n\n            \n                \n                    Registry for all WvrBaseComponent.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * A registry for each WvrBaseComponent currently present on the page.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentRegistryService {\n\n  /** Incrementing index of all registered components. */\n  private index = -1;\n\n  /** Registry for all WvrBaseComponent. */\n  private readonly registry: Map = new Map();\n\n  /** A statically accessible reference to the prefix used in deriving the HTML identifier. */\n  static readonly HTML_ID_BASE = 'wvr-component';\n\n  /** Adds a WvrBaseComponent to the registry. */\n  register(component: T): number {\n    // tslint:disable-next-line:increment-decrement\n    this.registry.set(++this.index, component);\n\n    return this.index;\n  }\n\n  /** Removes a WvrBaseComponent from the registry. */\n  unRegisterComponent(id: number | string): void {\n    this.registry.delete(id);\n  }\n\n  /** Retrieves a WvrBaseComponent from the registry. */\n  getComponent(id: number | string): T {\n    return this.registry.get(id);\n  }\n\n  /** Retrieves a WvrBaseComponent from the registry by HTMLElement. */\n  getComponentByElement(element: HTMLElement): T {\n\n    const hasNativeId = element.hasAttribute('wvr-id');\n    const htmlID = hasNativeId ? element.getAttribute('wvr-id') : element.getAttribute('id');\n\n    if (!htmlID) {\n      return undefined;\n    }\n\n    const id = parseInt(htmlID.replace(`${ComponentRegistryService.HTML_ID_BASE}-`, ''), 10);\n\n    return this.getComponent(id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DefaultPipe.html":{"url":"pipes/DefaultPipe.html","title":"pipe - DefaultPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DefaultPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/shared/pipes/default.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        default\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, defaultValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/shared/pipes/default.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defaultValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'default',\n  pure: true\n})\nexport class DefaultPipe implements PipeTransform {\n\n  transform(value: string, defaultValue: string): string {\n    return value ? value : defaultValue;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Layout.html":{"url":"interfaces/Layout.html","title":"interface - Layout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Layout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/layout/layout.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isMobile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isMobile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMobile:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Layout {\n  isMobile: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutEffects.html":{"url":"injectables/LayoutEffects.html","title":"injectable - LayoutEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LayoutEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/layout/layout.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                isMobile\n                            \n                            \n                                resize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngrxOnInitEffects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/core/layout/layout.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngrxOnInitEffects\n                        \n                    \n                \n            \n            \n                \nngrxOnInitEffects()\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/layout/layout.effects.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Action\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/layout/layout.effects.ts:32\n                        \n                    \n\n            \n                \n                    A mapping method to map resize events to boolean.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => fromEvent(window, 'resize')\n    .pipe(\n      withLatestFrom(this.store.pipe(select(selectIsMobileLayout))),\n      switchMap(([event, isMobile]) => isMobile !== this.isMobile()\n        ? [this.ngrxOnInitEffects()]\n        : [])\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/layout/layout.effects.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createEffect, OnInitEffects } from '@ngrx/effects';\nimport { Action, select, Store } from '@ngrx/store';\nimport { fromEvent } from 'rxjs';\nimport { switchMap, withLatestFrom } from 'rxjs/operators';\nimport { RootState, selectIsMobileLayout } from '../store';\nimport * as LayoutActions from './layout.actions';\n\n@Injectable()\nexport class LayoutEffects implements OnInitEffects {\n\n  constructor(private readonly store: Store) {\n\n  }\n\n  resize = createEffect(() => fromEvent(window, 'resize')\n    .pipe(\n      withLatestFrom(this.store.pipe(select(selectIsMobileLayout))),\n      switchMap(([event, isMobile]) => isMobile !== this.isMobile()\n        ? [this.ngrxOnInitEffects()]\n        : [])\n    )\n  );\n\n  ngrxOnInitEffects(): Action {\n    return LayoutActions.setIsMobile({\n      isMobile: this.isMobile()\n    });\n  }\n\n  /** A mapping method to map resize events to boolean.  */\n  private readonly isMobile = (): boolean => window.innerWidth \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Manifest.html":{"url":"interfaces/Manifest.html","title":"interface - Manifest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Manifest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/manifest/manifest.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            authorization\n                                        \n                                \n                                \n                                        \n                                            baseUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            entries\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authorization\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authorization:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entries:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ManifestEntry } from './manifest-entry';\n\nexport interface Manifest {\n  name: string; // unique\n  description?: string;\n  baseUrl: string;\n  authorization?: any;\n  entries: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManifestEffects.html":{"url":"injectables/ManifestEffects.html","title":"injectable - ManifestEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ManifestEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/manifest/manifest.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dequeue\n                            \n                            \n                                    Private\n                                    Readonly\n                                requestsByMethod\n                            \n                            \n                                resubmitRequest\n                            \n                            \n                                submitRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions: Actions, store: Store)\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/core/manifest/manifest.effects.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dequeue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(\n        ManifestActions.addManifest,\n        ManifestActions.setManifest,\n        ManifestActions.upsertManifest,\n        ManifestActions.addManifests,\n        ManifestActions.upsertManifests,\n        ManifestActions.updateManifest,\n        ManifestActions.updateManifests\n      ),\n      mergeMap(request => combineLatest([\n        this.store.pipe(\n          select(selectManifestEntities),\n          take(1)\n        ),\n        this.store.pipe(\n          select(selectPendingRequests),\n          take(1)\n        )\n      ])),\n      switchMap(([manifests, pendingRequests]) => {\n        const pendingRequestActions = [];\n\n        pendingRequests.forEach(request => {\n          const manifest: Manifest = manifests[request.manifestName];\n          if (manifest) {\n            const entry = manifest.entries.find(e => e.name === request.entryName);\n            if (entry) {\n              pendingRequestActions.push(ManifestActions.dequeueRequest({ request }));\n            }\n          }\n        });\n\n        return pendingRequestActions;\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/manifest/manifest.effects.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        requestsByMethod\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/manifest/manifest.effects.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resubmitRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(ManifestActions.dequeueRequest),\n      pluck('request'),\n      map(request => ManifestActions.submitRequest({ request }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/manifest/manifest.effects.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(ManifestActions.submitRequest),\n      pluck('request'),\n      mergeMap(request => combineLatest([\n        of(request),\n        this.store.pipe(\n          select(selectManifestByName(request.manifestName)),\n          take(1)\n        )\n      ])),\n      map(([request, manifest]) => {\n\n        if (!manifest) {\n          return ManifestActions.queueRequest({ request });\n        }\n\n        const entry = manifest.entries.find(e => e.name === request.entryName);\n\n        if (!entry) {\n          return ManifestActions.queueRequest({ request });\n        }\n\n        let path = entry.path;\n        if (!!request.options && !!request.options.pathVariables) {\n          const pathVariables = new Map(Object.entries(request.options.pathVariables));\n          pathVariables.forEach((v, k) => {\n            path = path.split(`:${k}`)\n              .join(v);\n          });\n        }\n\n        const method = request.method ? request.method : entry.methods[0];\n        // TODO: validate method with allowed methods on manifests entry\n        const url = manifest.baseUrl + path;\n        const options = { ...entry.options, ...request.options };\n        const onSuccess = request.onSuccess ? request.onSuccess : [];\n        const onFailure = request.onFailure ? request.onFailure : [];\n\n        const restAction = this.requestsByMethod(method);\n\n        return restAction({\n          request: {\n            url,\n            method,\n            options,\n            body: request.body,\n            decode: request.decode,\n            bodyHttpParams: request.bodyHttpParams,\n            map: entry.map\n          },\n          success: response => onSuccess.concat(ManifestActions.submitRequestSuccess({ manifest, request, response })),\n          failure: response => onFailure.concat(ManifestActions.submitRequestFailure({ manifest, request, response }))\n        });\n      })\n    ))\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/manifest/manifest.effects.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, of } from 'rxjs';\nimport { map, mergeMap, pluck, switchMap, take } from 'rxjs/operators';\nimport { RequestMethod } from '../rest/request-method';\nimport * as RestActions from '../rest/rest.actions';\nimport { RootState, selectManifestByName, selectManifestEntities, selectPendingRequests } from '../store';\nimport { Manifest } from './manifest';\nimport * as ManifestActions from './manifest.actions';\n\n@Injectable()\nexport class ManifestEffects {\n\n  constructor(\n    private readonly actions: Actions,\n    private readonly store: Store\n  ) {\n\n  }\n\n  submitRequest = createEffect(\n    () => this.actions.pipe(\n      ofType(ManifestActions.submitRequest),\n      pluck('request'),\n      mergeMap(request => combineLatest([\n        of(request),\n        this.store.pipe(\n          select(selectManifestByName(request.manifestName)),\n          take(1)\n        )\n      ])),\n      map(([request, manifest]) => {\n\n        if (!manifest) {\n          return ManifestActions.queueRequest({ request });\n        }\n\n        const entry = manifest.entries.find(e => e.name === request.entryName);\n\n        if (!entry) {\n          return ManifestActions.queueRequest({ request });\n        }\n\n        let path = entry.path;\n        if (!!request.options && !!request.options.pathVariables) {\n          const pathVariables = new Map(Object.entries(request.options.pathVariables));\n          pathVariables.forEach((v, k) => {\n            path = path.split(`:${k}`)\n              .join(v);\n          });\n        }\n\n        const method = request.method ? request.method : entry.methods[0];\n        // TODO: validate method with allowed methods on manifests entry\n        const url = manifest.baseUrl + path;\n        const options = { ...entry.options, ...request.options };\n        const onSuccess = request.onSuccess ? request.onSuccess : [];\n        const onFailure = request.onFailure ? request.onFailure : [];\n\n        const restAction = this.requestsByMethod(method);\n\n        return restAction({\n          request: {\n            url,\n            method,\n            options,\n            body: request.body,\n            decode: request.decode,\n            bodyHttpParams: request.bodyHttpParams,\n            map: entry.map\n          },\n          success: response => onSuccess.concat(ManifestActions.submitRequestSuccess({ manifest, request, response })),\n          failure: response => onFailure.concat(ManifestActions.submitRequestFailure({ manifest, request, response }))\n        });\n      })\n    ));\n\n  dequeue = createEffect(\n    () => this.actions.pipe(\n      ofType(\n        ManifestActions.addManifest,\n        ManifestActions.setManifest,\n        ManifestActions.upsertManifest,\n        ManifestActions.addManifests,\n        ManifestActions.upsertManifests,\n        ManifestActions.updateManifest,\n        ManifestActions.updateManifests\n      ),\n      mergeMap(request => combineLatest([\n        this.store.pipe(\n          select(selectManifestEntities),\n          take(1)\n        ),\n        this.store.pipe(\n          select(selectPendingRequests),\n          take(1)\n        )\n      ])),\n      switchMap(([manifests, pendingRequests]) => {\n        const pendingRequestActions = [];\n\n        pendingRequests.forEach(request => {\n          const manifest: Manifest = manifests[request.manifestName];\n          if (manifest) {\n            const entry = manifest.entries.find(e => e.name === request.entryName);\n            if (entry) {\n              pendingRequestActions.push(ManifestActions.dequeueRequest({ request }));\n            }\n          }\n        });\n\n        return pendingRequestActions;\n      })\n    )\n  );\n\n  resubmitRequest = createEffect(\n    () => this.actions.pipe(\n      ofType(ManifestActions.dequeueRequest),\n      pluck('request'),\n      map(request => ManifestActions.submitRequest({ request }))\n    )\n  );\n\n  private readonly requestsByMethod = (method: RequestMethod) => {\n    switch (method) {\n      case 'OPTIONS': return RestActions.optionsRequest;\n      case 'POST': return RestActions.postRequest;\n      case 'PUT': return RestActions.putRequest;\n      case 'PATCH': return RestActions.patchRequest;\n      case 'DELETE': return RestActions.deleteRequest;\n      case 'GET': return RestActions.getRequest;\n      default: return undefined;\n    }\n  };\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ManifestEntry.html":{"url":"interfaces/ManifestEntry.html","title":"interface - ManifestEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ManifestEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/manifest/manifest-entry.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            map\n                                        \n                                \n                                \n                                        \n                                            methods\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            request\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            response\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        map:         map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        methods\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        methods:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         RequestOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RequestOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestMethod } from '../rest/request-method';\nimport { RequestOptions } from '../rest/request-options';\n\nexport type map = (response) => any;\n\nexport interface ManifestEntry {\n  name: string; // unique\n  description?: string;\n  path: string;\n  // allowed methods for entry\n  methods: Array;\n  // options defined by manifest to be merged with request\n  options?: RequestOptions;\n  // last request submitted\n  request?: any;\n  // response from last successful request\n  response?: any;\n  // error from last failed request\n  error?: any;\n  map?: map;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ManifestEntryRequest.html":{"url":"interfaces/ManifestEntryRequest.html","title":"interface - ManifestEntryRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ManifestEntryRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/manifest/manifest-entry-request.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bodyHttpParams\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            decode\n                                        \n                                \n                                \n                                        \n                                            entryName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            manifestName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            method\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onFailure\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onSuccess\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bodyHttpParams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bodyHttpParams:     \"fromObject\" | \"fromString\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"fromObject\" | \"fromString\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        decode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decode:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entryName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entryName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        manifestName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        manifestName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         RequestMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RequestMethod\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onFailure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onFailure:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSuccess\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onSuccess:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         RequestOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RequestOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { RequestMethod } from '../rest/request-method';\nimport { RequestOptions } from '../rest/request-options';\n\nexport interface ManifestEntryRequest {\n  manifestName?: string;\n  entryName: string;\n  method?: RequestMethod;\n  body?: any;\n  options?: RequestOptions;\n  decode?: Array;\n  bodyHttpParams?: 'fromObject' | 'fromString';\n  onSuccess?: Array;\n  onFailure?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MappingStrategy.html":{"url":"interfaces/MappingStrategy.html","title":"interface - MappingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MappingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/wvr-manifest/mapping-strategy.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            map\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        map:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MappingStrategy {\n  // tslint:disable-next-line:prefer-method-signature\n  map: (data: any) => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageClientOptions.html":{"url":"interfaces/MessageClientOptions.html","title":"interface - MessageClientOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageClientOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/message-manifest/message-client-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            appendMissingNULLonIncoming\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            connectHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disconnectHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            heartbeatIncoming\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            heartbeatOutgoing\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appendMissingNULLonIncoming\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appendMissingNULLonIncoming:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        connectHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectHeaders:         map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disconnectHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disconnectHeaders:         map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heartbeatIncoming\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        heartbeatIncoming:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heartbeatOutgoing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        heartbeatOutgoing:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        type map = (key: string) => any;\n\nexport interface MessageClientOptions {\n  connectHeaders?: map;\n  disconnectHeaders?: map;\n  heartbeatIncoming?: number;\n  heartbeatOutgoing?: number;\n  appendMissingNULLonIncoming?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageManifest.html":{"url":"interfaces/MessageManifest.html","title":"interface - MessageManifest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageManifest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/message-manifest/message-manifest.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            brokerUrl\n                                        \n                                \n                                \n                                        \n                                            connection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            entries\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mappingStrategy\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            protocol\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        brokerUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brokerUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        connection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connection:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entries:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mappingStrategy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mappingStrategy:         MessageMappingStrategy\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageMappingStrategy\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         MessageClientOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageClientOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        protocol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        protocol:         MessageClientProtocol\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageClientProtocol\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MessageClientOptions } from './message-client-options';\nimport { MessageClientProtocol } from './message-client-protocol';\nimport { MessageManifestEntry } from './message-manifest-entry';\nimport { MessageMappingStrategy } from './message-mapping-strategy';\nimport { ConnectionStatus } from './message-manifest.reducers';\n\nexport interface MessageManifest {\n  name: string; // unique\n  description?: string;\n  brokerUrl: string;\n  connection: {\n    status: ConnectionStatus;\n    frame?: any;\n  };\n  entries: Array;\n  options?: MessageClientOptions;\n  protocol?: MessageClientProtocol;\n  mappingStrategy?: MessageMappingStrategy;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageManifestEffects.html":{"url":"injectables/MessageManifestEffects.html","title":"injectable - MessageManifestEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageManifestEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/message-manifest/message-manifest.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectManifest\n                            \n                            \n                                connectManifestConnected\n                            \n                            \n                                deleteClient\n                            \n                            \n                                disconnectManifest\n                            \n                            \n                                disconnectManifestDisconnected\n                            \n                            \n                                messageManifestAdded\n                            \n                            \n                                subscribeManifest\n                            \n                            \n                                unsubscribeManifest\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions: Actions, store: Store, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/core/message-manifest/message-manifest.effects.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        connectManifest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.connectManifest),\n      pluck('manifest'),\n      mergeMap(manifest => this.messageService.connect(manifest)\n        .pipe(\n          map(() => MessageManifestActions.connectManifestSuccess({\n            manifest\n          })),\n          catchError(() => of(MessageManifestActions.connectManifestFailure({\n            manifest\n          })))\n      ))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message-manifest/message-manifest.effects.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectManifestConnected\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.connectManifestConnected),\n      pluck('manifest'),\n      switchMap(manifest =>\n        manifest.entries.map(entry =>\n          MessageManifestActions.subscribeManifest({\n            manifest,\n            entry\n          })\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message-manifest/message-manifest.effects.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.deleteClient),\n      switchMap(action => this.messageService.deleteClient(action.manifest))\n    ),\n    {\n      dispatch: false\n    }\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message-manifest/message-manifest.effects.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectManifest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.disconnectManifest),\n      pluck('manifest'),\n      mergeMap(manifest => this.messageService.disconnect(manifest)\n        .pipe(\n          map(() => MessageManifestActions.disconnectManifestSuccess({\n            manifest\n          })),\n          catchError(() => of(MessageManifestActions.disconnectManifestFailure({\n            manifest\n          })))\n      ))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message-manifest/message-manifest.effects.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectManifestDisconnected\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.disconnectManifestDisconnected),\n      switchMap(action => this.messageService.deleteClient(action.manifest))\n    ),\n    {\n      dispatch: false\n    }\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message-manifest/message-manifest.effects.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageManifestAdded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.addManifest),\n      pluck('manifest'),\n      map(manifest => MessageManifestActions.connectManifest({ manifest }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message-manifest/message-manifest.effects.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeManifest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.subscribeManifest),\n      mergeMap(action => this.messageService.subscribe(action.manifest, action.entry)\n        .pipe(\n          map(subscription => MessageManifestActions.subscribeManifestSuccess({\n            manifest: action.manifest,\n            entry: action.entry,\n            subscription\n          })),\n          catchError(() => of(MessageManifestActions.subscribeManifestFailure({\n            entry: action.entry\n          })))\n      ))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message-manifest/message-manifest.effects.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribeManifest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.unsubscribeManifest),\n      mergeMap(action => this.messageService.unsubscribe(action.manifest, action.entry.id)\n        .pipe(\n          map(subscription => MessageManifestActions.unsubscribeManifestSuccess({\n            manifest: action.manifest,\n            entry: action.entry\n          })),\n          catchError(() => of(MessageManifestActions.subscribeManifestFailure({\n            entry: action.entry\n          })))\n      ))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message-manifest/message-manifest.effects.ts:107\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { combineLatest, of } from 'rxjs';\nimport { catchError, map, mergeMap, pluck, switchMap, take, withLatestFrom } from 'rxjs/operators';\nimport { RootState } from '../store';\nimport { MessageManifest } from './message-manifest';\nimport { MessageManifestEntry } from './message-manifest-entry';\nimport * as MessageManifestActions from './message-manifest.actions';\nimport { MessageService } from '../message';\n\n/* disable test coverage until a strategy for testing effects can be determined. */\n/* istanbul ignore file */\n@Injectable()\nexport class MessageManifestEffects {\n\n  constructor(\n    private readonly actions: Actions,\n    private readonly store: Store,\n    private readonly messageService: MessageService\n  ) {\n\n  }\n\n  messageManifestAdded = createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.addManifest),\n      pluck('manifest'),\n      map(manifest => MessageManifestActions.connectManifest({ manifest }))\n    )\n  );\n\n  connectManifest = createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.connectManifest),\n      pluck('manifest'),\n      mergeMap(manifest => this.messageService.connect(manifest)\n        .pipe(\n          map(() => MessageManifestActions.connectManifestSuccess({\n            manifest\n          })),\n          catchError(() => of(MessageManifestActions.connectManifestFailure({\n            manifest\n          })))\n      ))\n    )\n  );\n\n  connectManifestConnected = createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.connectManifestConnected),\n      pluck('manifest'),\n      switchMap(manifest =>\n        manifest.entries.map(entry =>\n          MessageManifestActions.subscribeManifest({\n            manifest,\n            entry\n          })\n        )\n      )\n    )\n  );\n\n  disconnectManifest = createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.disconnectManifest),\n      pluck('manifest'),\n      mergeMap(manifest => this.messageService.disconnect(manifest)\n        .pipe(\n          map(() => MessageManifestActions.disconnectManifestSuccess({\n            manifest\n          })),\n          catchError(() => of(MessageManifestActions.disconnectManifestFailure({\n            manifest\n          })))\n      ))\n    )\n  );\n\n  disconnectManifestDisconnected = createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.disconnectManifestDisconnected),\n      switchMap(action => this.messageService.deleteClient(action.manifest))\n    ),\n    {\n      dispatch: false\n    }\n  );\n\n  subscribeManifest = createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.subscribeManifest),\n      mergeMap(action => this.messageService.subscribe(action.manifest, action.entry)\n        .pipe(\n          map(subscription => MessageManifestActions.subscribeManifestSuccess({\n            manifest: action.manifest,\n            entry: action.entry,\n            subscription\n          })),\n          catchError(() => of(MessageManifestActions.subscribeManifestFailure({\n            entry: action.entry\n          })))\n      ))\n    )\n  );\n\n  unsubscribeManifest = createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.unsubscribeManifest),\n      mergeMap(action => this.messageService.unsubscribe(action.manifest, action.entry.id)\n        .pipe(\n          map(subscription => MessageManifestActions.unsubscribeManifestSuccess({\n            manifest: action.manifest,\n            entry: action.entry\n          })),\n          catchError(() => of(MessageManifestActions.subscribeManifestFailure({\n            entry: action.entry\n          })))\n      ))\n    )\n  );\n\n  deleteClient = createEffect(\n    () => this.actions.pipe(\n      ofType(MessageManifestActions.deleteClient),\n      switchMap(action => this.messageService.deleteClient(action.manifest))\n    ),\n    {\n      dispatch: false\n    }\n  );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageManifestEntry.html":{"url":"interfaces/MessageManifestEntry.html","title":"interface - MessageManifestEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageManifestEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/message-manifest/message-manifest-entry.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            destination\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            map\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mappingStrategy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        map:         map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mappingStrategy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mappingStrategy:         MessageMappingStrategy\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageMappingStrategy\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MessageClientOptions } from './message-client-options';\nimport { MessageClientProtocol } from './message-client-protocol';\nimport { MessageMappingStrategy } from './message-mapping-strategy';\n\nexport type map = (response) => any;\n\nexport interface MessageManifestEntry {\n  // A subscription identifier.\n  id?: string;\n  name: string; // unique.\n  description?: string;\n  // that path to subscribe to.\n  destination: string;\n  // mapping strategy to use for deserialization.\n  mappingStrategy?: MessageMappingStrategy;\n  // the last received message.\n  message?: any;\n  // error from last failed message.\n  error?: any;\n  map?: map;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageManifestEntryMessage.html":{"url":"interfaces/MessageManifestEntryMessage.html","title":"interface - MessageManifestEntryMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageManifestEntryMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/message-manifest/message-manifest-entry-message.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entryName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            manifestName\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entryName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entryName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        manifestName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        manifestName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { MessageClientOptions } from './message-client-options';\nimport { MessageClientProtocol } from './message-client-protocol';\n\nexport interface MessageManifestEntryMessage {\n  manifestName?: string;\n  entryName: string;\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageManifestState.html":{"url":"interfaces/MessageManifestState.html","title":"interface - MessageManifestState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageManifestState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/message-manifest/message-manifest.reducers.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentMessage\n                                        \n                                \n                                \n                                        \n                                            pendingMessages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentMessage:         MessageManifestEntryMessage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageManifestEntryMessage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pendingMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pendingMessages:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport { MessageManifest } from './message-manifest';\nimport { MessageManifestEntryMessage } from './message-manifest-entry-message';\nimport * as MessageManifestActions from './message-manifest.actions';\n\nexport enum ConnectionStatus {\n  CONNECTED = 'CONNECTED',\n  CONNECTING = 'CONNECTING',\n  DISCONNECTED = 'DISCONNECTED',\n  DISCONNECTING = 'DISCONNECTING'\n}\n\nexport interface MessageManifestState extends EntityState {\n  pendingMessages: Array;\n  currentMessage: MessageManifestEntryMessage;\n}\n\n// tslint:disable-next-line:only-arrow-functions\nexport function selectManifestByName(manifest: MessageManifest): string {\n  return manifest.name;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter({\n  selectId: selectManifestByName\n});\n\nexport const initialState: MessageManifestState = adapter.getInitialState({\n  pendingMessages: [],\n  currentMessage: undefined\n});\n\nconst messageManifestReducer = createReducer(\n  initialState,\n  on(MessageManifestActions.addManifest, (state, { manifest }) => adapter.addOne(manifest, state)),\n  on(MessageManifestActions.addManifests, (state, { manifests }) => adapter.addMany(manifests, state)),\n  on(MessageManifestActions.clearManifests, state => adapter.removeAll({ ...state, selectedMessageManifestId: undefined })),\n  on(MessageManifestActions.deleteManifest, (state, { id }) => adapter.removeOne(id, state)),\n  on(MessageManifestActions.deleteManifests, (state, { ids }) => adapter.removeMany(ids, state)),\n  on(MessageManifestActions.deleteManifestsByPredicate, (state, { predicate }) => adapter.removeMany(predicate, state)),\n  on(MessageManifestActions.loadManifests, (state, { manifests }) => adapter.setAll(manifests, state)),\n  on(MessageManifestActions.mapManifest, (state, { entityMap }) => adapter.mapOne(entityMap, state)),\n  on(MessageManifestActions.mapManifests, (state, { entityMap }) => adapter.map(entityMap, state)),\n  on(MessageManifestActions.setManifest, (state, { manifest }) => adapter.setOne(manifest, state)),\n  on(MessageManifestActions.updateManifest, (state, { update }) => adapter.updateOne(update, state)),\n  on(MessageManifestActions.updateManifests, (state, { updates }) => adapter.updateMany(updates, state)),\n  on(MessageManifestActions.upsertManifest, (state, { manifest }) => adapter.upsertOne(manifest, state)),\n  on(MessageManifestActions.upsertManifests, (state, { manifests }) => adapter.upsertMany(manifests, state)),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(MessageManifestActions.receiveMessage, (state, { manifest, entry, message }) => {\n    return adapter.updateOne({\n      id: manifest.name,\n      changes: {\n        entries: state.entities[manifest.name].entries.map(e => e.name === entry.name ? { ...e, message } : e)\n      }\n    }, {\n      ...state,\n      currentMessage: undefined\n    });\n  }),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(MessageManifestActions.submitMessage, (state, { message }) => {\n    return {\n      ...state,\n      currentMessage: message\n    // tslint:disable-next-line:semicolon\n    }\n  }),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(MessageManifestActions.submitMessageSuccess, (state, { manifest, message }) => {\n    return adapter.updateOne({\n      id: manifest.name,\n      changes: {\n        entries: state.entities[manifest.name].entries.map(e => e.name === message.entryName ? { ...e, message } : e)\n      }\n    }, {\n      ...state,\n      currentMessage: undefined\n    });\n  }),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(MessageManifestActions.submitMessageFailure, (state, { manifest, message }) => {\n    return adapter.updateOne({\n      id: manifest.name,\n      changes: {\n        entries: state.entities[manifest.name].entries.map(e => e.name === message.entryName ? { ...e, message } : e)\n      }\n    }, {\n      ...state,\n      currentMessage: undefined\n    });\n  }),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(MessageManifestActions.queueMessage, (state, { message }) => {\n    return {\n      ...state,\n      pendingMessages: state.pendingMessages.concat([{ ...message }]),\n      currentMessage: undefined\n    };\n  }),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(MessageManifestActions.dequeueMessage, (state, { message }) => {\n    return {\n      ...state,\n      pendingMessages: state.pendingMessages.filter(m => m.manifestName !== message.manifestName || m.entryName !== message.entryName)\n    };\n  }),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(MessageManifestActions.connectManifest, (state, { manifest }) => {\n    return adapter.updateOne({\n      id: manifest.name,\n      changes: {\n        connection: {\n          status: ConnectionStatus.CONNECTING,\n          frame: undefined\n        }\n      }\n    }, {\n      ...state\n    });\n  }),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(MessageManifestActions.connectManifestConnected, (state, { manifest, frame }) => {\n    return adapter.updateOne({\n      id: manifest.name,\n      changes: {\n        connection: {\n          status: ConnectionStatus.CONNECTED,\n          frame\n        }\n      }\n    }, {\n      ...state\n    });\n  }),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(MessageManifestActions.disconnectManifest, (state, { manifest }) => {\n    return adapter.updateOne({\n      id: manifest.name,\n      changes: {\n        connection: {\n          status: ConnectionStatus.DISCONNECTING,\n          frame: undefined\n        }\n      }\n    }, {\n      ...state\n    });\n  }),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(MessageManifestActions.disconnectManifestDisconnected, (state, { manifest, frame }) => {\n    return adapter.updateOne({\n      id: manifest.name,\n      changes: {\n        connection: {\n          status: ConnectionStatus.DISCONNECTED,\n          frame\n        }\n      }\n    }, {\n      ...state\n    });\n  }),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(MessageManifestActions.subscribeManifestSuccess, (state, { manifest, entry, subscription }) => {\n    return adapter.updateOne({\n      id: manifest.name,\n      changes: {\n        entries: state.entities[manifest.name].entries.map(e => e.name === entry.name ? { ...e, id: subscription.id } : e)\n      }\n    }, {\n      ...state\n    });\n  }),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(MessageManifestActions.unsubscribeManifestSuccess, (state, { manifest, entry }) => {\n    return adapter.updateOne({\n      id: manifest.name,\n      changes: {\n        entries: manifest.entries.filter(e => e.name !== entry.name)\n      }\n    }, {\n      ...state\n    });\n  })\n);\n\n// tslint:disable-next-line:typedef\nexport function reducer(state: MessageManifestState | undefined, action: Action) {\n  return messageManifestReducer(state, action);\n}\n\n// get the selectors.\nconst {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal\n} = adapter.getSelectors();\n\n// select the array of message manifest names.\nexport const selectManifestNames = selectIds;\n\n// select the dictionary of message manifest subscriptions.\nexport const selectManifestEntities = selectEntities;\n\n// select the array of message messageManifests.\nexport const selectAllManifests = selectAll;\n\n// select the total message manifest count.\nexport const selectManifestTotal = selectTotal;\n\nexport const selectCurrentMessage = (state: MessageManifestState) => state.currentMessage;\n\nexport const selectPendingMessage = (state: MessageManifestState) => state.pendingMessages;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/message/message.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                beforeConnect\n                            \n                            \n                                    Private\n                                    Readonly\n                                clients\n                            \n                            \n                                createClient\n                            \n                            \n                                debug\n                            \n                            \n                                deleteClient\n                            \n                            \n                                onChangeState\n                            \n                            \n                                onStompError\n                            \n                            \n                                onWebSocketClose\n                            \n                            \n                                onWebSocketError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                subscribe\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/core/message/message.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(manifest: MessageManifest)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/message/message.service.ts:29\n                \n            \n\n\n            \n                \n                    Connect to the given broker.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    manifest\n                                    \n                                                MessageManifest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Message Manifest.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An empty observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect(manifest: MessageManifest)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/message/message.service.ts:59\n                \n            \n\n\n            \n                \n                    Disconnect from the given broker, completel unsubscribing before disconnecting.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    manifest\n                                    \n                                                MessageManifest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Message Manifest.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(manifest: MessageManifest, entry: MessageManifestEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/message/message.service.ts:79\n                \n            \n\n\n            \n                \n                    Subscribe to the given destination.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    manifest\n                                    \n                                                MessageManifest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Message Manifest.\n\n                                    \n                                \n                                \n                                    entry\n                                    \n                                                MessageManifestEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Message Manifest Entry.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(manifest: MessageManifest, id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/message/message.service.ts:116\n                \n            \n\n\n            \n                \n                    Unsubscribe a given identifier.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    manifest\n                                    \n                                                MessageManifest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message manifest to get the client of.\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The identifier to unsubscribe from.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The response from unsubscribe.\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message/message.service.ts:200\n                        \n                    \n\n            \n                \n                    Callback passed to the Message client to for beforeConnect() calls.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        clients\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message/message.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message/message.service.ts:139\n                        \n                    \n\n            \n                \n                    Create a message client using the given manifest and configuration.\nThe onConnect() and onDisconnect will be custom built.\nAll other helpers will bind to the methods on the MessageService.\nThe websocket factory will be assigned to SockJS.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    manifest\n                                                    \n                                                            The message manifest to create a client for.\n\n                                                    \n                                            \n                                            \n                                                    config\n                                                    \n                                                            The message configuration.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message/message.service.ts:218\n                        \n                    \n\n            \n                \n                    Callback passed to the Message client to for debug() calls.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    message\n                                                    \n                                                            The message sent by the Message client debugger.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message/message.service.ts:187\n                        \n                    \n\n            \n                \n                    Delete client from the manifest.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    manifest\n                                                    \n                                                            The Message Manifest.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message/message.service.ts:209\n                        \n                    \n\n            \n                \n                    Callback passed to the Message client to for onChangeState() calls.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    state\n                                                    \n                                                            The activation state triggering the state change.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStompError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message/message.service.ts:227\n                        \n                    \n\n            \n                \n                    Callback passed to the Message client to for onStompError() calls.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    frame\n                                                    \n                                                            The message frame relating to the error.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onWebSocketClose\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message/message.service.ts:236\n                        \n                    \n\n            \n                \n                    Callback passed to the Message client to for onWebSocketClose() calls.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    event\n                                                    \n                                                            The event triggering the web socket close.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onWebSocketError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/message/message.service.ts:245\n                        \n                    \n\n            \n                \n                    Callback passed to the Message client to for onWebSocketError() calls.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    event\n                                                    \n                                                            The event triggering the web socket error.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ActivationState, Client, IFrame, IMessage, StompHeaders } from '@stomp/stompjs';\nimport { combineLatest, from, Observable, of } from 'rxjs';\nimport { RootState } from '../store';\nimport { MessageManifest, MessageManifestEntry, MessageManifestEntryMessage, MessageMappingStrategy } from '../message-manifest';\nimport * as MessageManifestActions from '../message-manifest/message-manifest.actions';\nimport * as SockJS from 'sockjs-client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  private readonly clients: Map;\n\n  constructor(private readonly store: Store) {\n    this.clients = new Map();\n  }\n\n  /* disable test coverage until a strategy for testing can be determined. */\n  /* istanbul ignore next */\n  /**\n   * Connect to the given broker.\n   *\n   * @param manifest The Message Manifest.\n   *\n   * @return An empty observable.\n   */\n  connect(manifest: MessageManifest): Observable {\n    const messageConfig = {\n      brokerUrl: manifest.brokerUrl,\n      // disable reconnectDelay to allow for custom attempts at connecting to avoid infinitely attempting reconnect.\n      reconnectDelay: 0\n    };\n\n    if (!!manifest.options) {\n      const keys = [ 'connectHeaders', 'disconnectHeaders', 'heartbeatIncoming', 'heartbeatOutgoing', 'appendMissingNULLonIncoming' ];\n      for (const key of keys) {\n        if (!!manifest.options[key]) {\n          messageConfig[key] = manifest.options[key];\n        }\n      }\n    }\n\n    const client = this.createClient(manifest, messageConfig);\n\n    client.activate();\n\n    return of();\n  }\n\n  /* disable test coverage until a strategy for testing can be determined. */\n  /* istanbul ignore next */\n  /**\n   * Disconnect from the given broker, completel unsubscribing before disconnecting.\n   *\n   * @param manifest The Message Manifest.\n   */\n  disconnect(manifest: MessageManifest): Observable {\n    const unsubscriptions = manifest.entries.filter(entry => !!entry.id)\n        .map(entry => entry.id)\n        .map(id => this.unsubscribe(manifest, id));\n\n    return combineLatest(unsubscriptions)\n      .pipe(() => from(this.clients\n        .get(manifest.name)\n        .deactivate()\n      ));\n  }\n\n  /* disable test coverage until a strategy for testing can be determined. */\n  /* istanbul ignore next */\n  /**\n   * Subscribe to the given destination.\n   *\n   * @param manifest The Message Manifest.\n   * @param entry The Message Manifest Entry.\n   */\n  subscribe(manifest: MessageManifest, entry: MessageManifestEntry): Observable {\n    return of(this.clients\n      .get(manifest.name)\n      .subscribe(entry.destination, (response: IMessage) => {\n        let message: any = response.body;\n\n        if (entry.mappingStrategy === 'WEAVER') {\n          const parsed = JSON.parse(response.body);\n\n          message = {\n            meta: parsed.meta,\n            payload: parsed.payload[Object.keys(parsed.payload)[0]],\n            type: Object.keys(parsed.payload)[0]\n          };\n        } else if (entry.mappingStrategy === 'JSONPARSE') {\n          message = JSON.parse(response.body);\n        }\n\n        this.store.dispatch(MessageManifestActions.receiveMessage({\n          manifest,\n          entry,\n          message\n        }));\n      })\n    );\n  }\n\n  /* disable test coverage until a strategy for testing can be determined. */\n  /* istanbul ignore next */\n  /**\n   * Unsubscribe a given identifier.\n   *\n   * @param manifest The message manifest to get the client of.\n   * @param id The identifier to unsubscribe from.\n   *\n   * @return The response from unsubscribe.\n   */\n  unsubscribe(manifest: MessageManifest, id: string): Observable {\n    // tslint:disable:no-void-expression\n    return of(this.clients\n      .get(manifest.name)\n      .unsubscribe(id)\n    );\n  }\n\n  /* disable test coverage until a strategy for testing can be determined. */\n  /* istanbul ignore next */\n  /**\n   * Create a message client using the given manifest and configuration.\n   *\n   * The onConnect() and onDisconnect will be custom built.\n   * All other helpers will bind to the methods on the MessageService.\n   *\n   * The websocket factory will be assigned to SockJS.\n   *\n   * @param manifest The message manifest to create a client for.\n   * @param config The message configuration.\n   *\n   * @return The created message client.\n   */\n  createClient = (manifest: MessageManifest, config: any): Client => {\n    const client = new Client();\n\n    // tslint:disable:unnecessary-bind\n    client.beforeConnect = this.beforeConnect.bind(this);\n    client.onChangeState = this.onChangeState.bind(this);\n    client.debug = this.debug.bind(this);\n    client.onStompError = this.onStompError.bind(this);\n    client.onWebSocketClose = this.onWebSocketClose.bind(this);\n    client.onWebSocketError = this.onWebSocketError.bind(this);\n\n    client.onConnect = (frame: IFrame): void => {\n      this.store.dispatch(MessageManifestActions.connectManifestConnected({\n        manifest,\n        frame: {\n          command: frame.command,\n          headers: frame.headers\n        }\n      }));\n    };\n\n    client.onDisconnect = (frame: IFrame): void => {\n      this.store.dispatch(MessageManifestActions.disconnectManifestDisconnected({\n        manifest,\n        frame: {\n          command: frame.command,\n          headers: frame.headers\n        }\n      }));\n    };\n\n    client.configure(config);\n    client.webSocketFactory = () => new SockJS(config.brokerUrl);\n\n    this.clients.set(manifest.name, client);\n\n    return client;\n  };\n\n  /* disable test coverage until a strategy for testing can be determined. */\n  /* istanbul ignore next */\n  /**\n   * Delete client from the manifest.\n   *\n   * @param manifest The Message Manifest.\n   *\n   * @return An empty observable.\n   */\n  deleteClient = (manifest: MessageManifest): Observable => {\n    this.clients.delete(manifest.name);\n\n    return of();\n  };\n\n  // tslint:disable:no-empty\n  // tslint:disable:invalid-void\n  /**\n   * Callback passed to the Message client to for beforeConnect() calls.\n   *\n   * @return May return a promise for asynchronous operation.\n   */\n  beforeConnect = (): void | Promise => {\n  };\n\n  // tslint:disable:no-empty\n  /**\n   * Callback passed to the Message client to for onChangeState() calls.\n   *\n   * @param state The activation state triggering the state change.\n   */\n  onChangeState = (state: ActivationState): void => {\n  };\n\n  // tslint:disable:no-empty\n  /**\n   * Callback passed to the Message client to for debug() calls.\n   *\n   * @param message The message sent by the Message client debugger.\n   */\n  debug = (message: string): void => {\n  };\n\n  // tslint:disable:no-empty\n  /**\n   * Callback passed to the Message client to for onStompError() calls.\n   *\n   * @param frame The message frame relating to the error.\n   */\n  onStompError = (frame: IFrame): void => {\n  };\n\n  // tslint:disable:no-empty\n  /**\n   * Callback passed to the Message client to for onWebSocketClose() calls.\n   *\n   * @param event The event triggering the web socket close.\n   */\n  onWebSocketClose = (event: any): void => {\n  };\n\n  // tslint:disable:no-empty\n  /**\n   * Callback passed to the Message client to for onWebSocketError() calls.\n   *\n   * @param event The event triggering the web socket error.\n   */\n  onWebSocketError = (event: any): void => {\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Modal.html":{"url":"interfaces/Modal.html","title":"interface - Modal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Modal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/modal/modal.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            open\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        open\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        open:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Modal {\n  name: string;\n  open: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModalEffects.html":{"url":"injectables/ModalEffects.html","title":"injectable - ModalEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModalEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/modal/modal.effects.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions: Actions)\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/core/modal/modal.effects.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\n\n@Injectable()\nexport class ModalEffects {\n\n  constructor(private readonly actions: Actions) {\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgBindingsService.html":{"url":"injectables/NgBindingsService.html","title":"injectable - NgBindingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NgBindingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/ng-bindings.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A registry for AngularJS binding subjects.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subjects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                putSubject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/core/ng-bindings.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        putSubject\n                        \n                    \n                \n            \n            \n                \nputSubject(key: string, subject: RefBindingSubject)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/ng-bindings.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subject\n                                    \n                                                RefBindingSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subjects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/ng-bindings.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ChangeDetectorRef, ElementRef, Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface RefBindingSubject {\n  subject: BehaviorSubject;\n  cdRef: ChangeDetectorRef;\n  eRef: ElementRef;\n}\n\n/**\n * A registry for AngularJS binding subjects.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgBindingsService {\n\n  private readonly subjects: { [key: string]: Array };\n\n  constructor() {\n    this.subjects = {};\n  }\n\n  putSubject(key: string, subject: RefBindingSubject): Array {\n    let subjects = this.subjects[key];\n    if (!subjects) {\n      subjects = [];\n      this.subjects[key] = subjects;\n    }\n    this.subjects[key].push(subject);\n\n    return this.subjects[key];\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RefBindingSubject.html":{"url":"interfaces/RefBindingSubject.html","title":"interface - RefBindingSubject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RefBindingSubject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/ng-bindings.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cdRef\n                                        \n                                \n                                \n                                        \n                                            eRef\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cdRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cdRef:         ChangeDetectorRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChangeDetectorRef\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eRef:         ElementRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementRef\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:     BehaviorSubject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BehaviorSubject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, ElementRef, Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface RefBindingSubject {\n  subject: BehaviorSubject;\n  cdRef: ChangeDetectorRef;\n  eRef: ElementRef;\n}\n\n/**\n * A registry for AngularJS binding subjects.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgBindingsService {\n\n  private readonly subjects: { [key: string]: Array };\n\n  constructor() {\n    this.subjects = {};\n  }\n\n  putSubject(key: string, subject: RefBindingSubject): Array {\n    let subjects = this.subjects[key];\n    if (!subjects) {\n      subjects = [];\n      this.subjects[key] = subjects;\n    }\n    this.subjects[key].push(subject);\n\n    return this.subjects[key];\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/rest/request.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bodyHttpParams\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            decode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            map\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bodyHttpParams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bodyHttpParams:     \"fromObject\" | \"fromString\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"fromObject\" | \"fromString\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        decode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decode:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        map\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        map:         map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         map\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         RequestMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RequestMethod\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         RequestOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RequestOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestMethod } from './request-method';\nimport { RequestOptions } from './request-options';\n\ntype map = (response: any) => any;\n\nexport interface Request {\n  url: string;\n  method: RequestMethod;\n  body?: any;\n  options?: RequestOptions;\n  map?: map;\n  decode?: Array;\n  bodyHttpParams?: 'fromObject' | 'fromString';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestOptions.html":{"url":"interfaces/RequestOptions.html","title":"interface - RequestOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/rest/request-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            observe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            params\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pathVariables\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reportProgress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            responseType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            withCredentials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        observe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        observe:     \"body\" | \"response\" | \"events\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"body\" | \"response\" | \"events\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:     HttpParams | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpParams | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathVariables\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pathVariables:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportProgress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reportProgress:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responseType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        responseType:     \"arraybuffer\" | \"blob\" | \"text\" | \"json\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"arraybuffer\" | \"blob\" | \"text\" | \"json\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpParams } from '@angular/common/http';\n\nexport interface RequestOptions {\n  headers?: { [header: string]: string | Array; };\n  observe?: 'body' | 'response' | 'events';\n  params?: HttpParams | { [param: string]: string | Array; };\n  pathVariables?: { [pathKey: string]: string; };\n  reportProgress?: boolean;\n  responseType?: 'arraybuffer' | 'blob' | 'text' | 'json';\n  withCredentials?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RestEffects.html":{"url":"injectables/RestEffects.html","title":"injectable - RestEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RestEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/rest/rest.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                delete\n                            \n                            \n                                deleteRequest\n                            \n                            \n                                    Private\n                                    Readonly\n                                get\n                            \n                            \n                                getRequest\n                            \n                            \n                                    Private\n                                    Readonly\n                                options\n                            \n                            \n                                optionsRequest\n                            \n                            \n                                    Private\n                                    Readonly\n                                patch\n                            \n                            \n                                patchRequest\n                            \n                            \n                                    Private\n                                    Readonly\n                                post\n                            \n                            \n                                postRequest\n                            \n                            \n                                    Private\n                                    Readonly\n                                put\n                            \n                            \n                                putRequest\n                            \n                            \n                                request\n                            \n                            \n                                requestFailure\n                            \n                            \n                                requestSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions: Actions, rest: RestService)\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                        RestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        delete\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.deleteRequest),\n      map(action => RestActions.request({\n        request: action.request,\n        method: this.delete,\n        success: action.success,\n        failure: action.failure\n      }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        get\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.getRequest),\n      map(action => RestActions.request({\n        request: action.request,\n        method: this.get,\n        success: action.success,\n        failure: action.failure\n      }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionsRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.optionsRequest),\n      map(action => RestActions.request({\n        request: action.request,\n        method: this.options,\n        success: action.success,\n        failure: action.failure\n      }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        patch\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.patchRequest),\n      map(action => RestActions.request({\n        request: action.request,\n        method: this.patch,\n        success: action.success,\n        failure: action.failure\n      }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        post\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.postRequest),\n      map(action => RestActions.request({\n        request: action.request,\n        method: this.post,\n        success: action.success,\n        failure: action.failure\n      }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        put\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.putRequest),\n      map(action => RestActions.request({\n        request: action.request,\n        method: this.put,\n        success: action.success,\n        failure: action.failure\n      }))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.request),\n      mergeMap(action => action.method(action.request)\n        .pipe(\n          map(response => RestActions.requestSuccess({\n            response: action.request.map ? action.request.map(response) : response,\n            success: action.success\n          })),\n          catchError(response => of(RestActions.requestFailure({\n            response,\n            failure: action.failure,\n            retry: action\n          })))\n        ))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.requestFailure),\n      // tslint:disable-next-line:arrow-return-shorthand\n      switchMap(action => {\n        // TODO: handle error, refresh token, retry\n        return action.failure(action.response);\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.requestSuccess),\n      switchMap(action => action.success(action.response))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.effects.ts:37\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { Request } from './request';\nimport * as RestActions from './rest.actions';\nimport { RestService } from './rest.service';\n\n@Injectable()\nexport class RestEffects {\n\n  constructor(\n    private readonly actions: Actions,\n    private readonly rest: RestService\n  ) {\n\n  }\n\n  request = createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.request),\n      mergeMap(action => action.method(action.request)\n        .pipe(\n          map(response => RestActions.requestSuccess({\n            response: action.request.map ? action.request.map(response) : response,\n            success: action.success\n          })),\n          catchError(response => of(RestActions.requestFailure({\n            response,\n            failure: action.failure,\n            retry: action\n          })))\n        ))\n    )\n  );\n\n  requestSuccess = createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.requestSuccess),\n      switchMap(action => action.success(action.response))\n    )\n  );\n\n  requestFailure = createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.requestFailure),\n      // tslint:disable-next-line:arrow-return-shorthand\n      switchMap(action => {\n        // TODO: handle error, refresh token, retry\n        return action.failure(action.response);\n      })\n    )\n  );\n\n  optionsRequest = createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.optionsRequest),\n      map(action => RestActions.request({\n        request: action.request,\n        method: this.options,\n        success: action.success,\n        failure: action.failure\n      }))\n    )\n  );\n\n  getRequest = createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.getRequest),\n      map(action => RestActions.request({\n        request: action.request,\n        method: this.get,\n        success: action.success,\n        failure: action.failure\n      }))\n    )\n  );\n\n  postRequest = createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.postRequest),\n      map(action => RestActions.request({\n        request: action.request,\n        method: this.post,\n        success: action.success,\n        failure: action.failure\n      }))\n    )\n  );\n\n  putRequest = createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.putRequest),\n      map(action => RestActions.request({\n        request: action.request,\n        method: this.put,\n        success: action.success,\n        failure: action.failure\n      }))\n    )\n  );\n\n  patchRequest = createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.patchRequest),\n      map(action => RestActions.request({\n        request: action.request,\n        method: this.patch,\n        success: action.success,\n        failure: action.failure\n      }))\n    )\n  );\n\n  deleteRequest = createEffect(\n    () => this.actions.pipe(\n      ofType(RestActions.deleteRequest),\n      map(action => RestActions.request({\n        request: action.request,\n        method: this.delete,\n        success: action.success,\n        failure: action.failure\n      }))\n    )\n  );\n\n  private readonly options = (request: Request): Observable => this.rest.options(request);\n\n  private readonly get = (request: Request): Observable => this.rest.get(request);\n\n  private readonly post = (request: Request): Observable => this.rest.post(request);\n\n  private readonly put = (request: Request): Observable => this.rest.put(request);\n\n  private readonly patch = (request: Request): Observable => this.rest.patch(request);\n\n  private readonly delete = (request: Request): Observable => this.rest.delete(request);\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RestService.html":{"url":"injectables/RestService.html","title":"injectable - RestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/rest/rest.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                options\n                            \n                            \n                                patch\n                            \n                            \n                                post\n                            \n                            \n                                    Private\n                                preprocessOptions\n                            \n                            \n                                    Private\n                                processRequest\n                            \n                            \n                                    Private\n                                processRequestWithData\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/core/rest/rest.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/rest/rest.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/rest/rest.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n            \n                \noptions(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/rest/rest.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patch\n                        \n                    \n                \n            \n            \n                \npatch(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/rest/rest.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/rest/rest.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        preprocessOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    preprocessOptions(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/rest/rest.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        processRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    processRequest(request: Request, callback: (url: string,options: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/rest/rest.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        processRequestWithData\n                        \n                    \n                \n            \n            \n                \n                    \n                    processRequestWithData(request: Request, callback: (url: string,body: any,options: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/rest/rest.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/rest/rest.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams, HttpParamsOptions } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { Request } from './request';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestService {\n\n  constructor(private readonly http: HttpClient) {\n\n  }\n\n  options(request: Request): Observable {\n    return this.processRequest(request, (url: string, options: any): any => this.http.options(url, options));\n  }\n\n  get(request: Request): Observable {\n    return this.processRequest(request, (url: string, options: any): any => this.http.get(url, options));\n  }\n\n  post(request: Request): Observable {\n    return this.processRequestWithData(request, (url: string, body: any, options: any): any => this.http.post(url, body, options));\n  }\n\n  put(request: Request): Observable {\n    return this.processRequestWithData(request, (url: string, body: any, options: any): any => this.http.put(url, body, options));\n  }\n\n  patch(request: Request): Observable {\n    return this.processRequestWithData(request, (url: string, body: any, options: any): any => this.http.patch(url, body, options));\n  }\n\n  delete(request: Request): Observable {\n    return this.processRequest(request, (url: string, options: any): any => this.http.delete(url, options));\n  }\n\n  private processRequest(request: Request, callback: (url: string, options: any) => Observable): Observable {\n    return this.preprocessOptions(request)\n      .pipe(mergeMap(options => callback(request.url, options)));\n  }\n\n  // tslint:disable-next-line:max-line-length\n  private processRequestWithData(request: Request, callback: (url: string, body: any, options: any) => Observable): Observable {\n    return this.preprocessOptions(request)\n      .pipe(mergeMap(options => {\n\n        let body = { ...request.body };\n\n        if (request.decode) {\n          request.decode.forEach(prop => {\n            body[prop] = Buffer.from(body[prop], 'base64')\n              .toString();\n          });\n        }\n\n        if (request.bodyHttpParams) {\n          const httpParamsOptions: HttpParamsOptions = {};\n          httpParamsOptions[request.bodyHttpParams] = body;\n          body = new HttpParams(httpParamsOptions);\n        }\n\n        return callback(request.url, body, options);\n      }));\n  }\n\n  // tslint:disable-next-line:prefer-function-over-method\n  private preprocessOptions(request: Request): Observable {\n    const options = { ...request.options };\n\n    return new Observable(observer => {\n      if (options && options.withCredentials) {\n        // Access token work will go here\n      }\n      observer.next(options);\n      observer.complete();\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RootState.html":{"url":"interfaces/RootState.html","title":"interface - RootState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RootState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/store.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            layout\n                                        \n                                \n                                \n                                        \n                                            manifests\n                                        \n                                \n                                \n                                        \n                                            messageManifests\n                                        \n                                \n                                \n                                        \n                                            modals\n                                        \n                                \n                                \n                                        \n                                            rest\n                                        \n                                \n                                \n                                        \n                                            theme\n                                        \n                                \n                                \n                                        \n                                            wysiwyg\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layout:     fromLayout.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromLayout.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        manifests\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        manifests:     fromManifest.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromManifest.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messageManifests\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messageManifests:     fromMessageManifest.MessageManifestState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromMessageManifest.MessageManifestState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modals:     fromModal.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromModal.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rest:     fromRest.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromRest.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:     fromTheme.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromTheme.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wysiwyg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wysiwyg:     fromWysiwyg.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromWysiwyg.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { ActionReducerMap, createFeatureSelector, createSelector, MetaReducer } from '@ngrx/store';\nimport { Manifest } from './manifest/manifest';\nimport { ManifestEntry } from './manifest/manifest-entry';\nimport { MessageManifest } from './message-manifest/message-manifest';\nimport { MessageManifestEntry } from './message-manifest/message-manifest-entry';\nimport * as fromLayout from './layout/layout.reducers';\nimport * as fromManifest from './manifest/manifest.reducers';\nimport * as fromMessageManifest from './message-manifest/message-manifest.reducers';\nimport * as fromRest from './rest/rest.reducers';\nimport * as fromTheme from './theme/theme.reducers';\nimport * as fromModal from './modal/modal.reducers';\nimport * as fromWysiwyg from './wysiwyg/wysiwyg.reducers';\n\nexport interface RootState {\n  layout: fromLayout.State;\n  manifests: fromManifest.State;\n  messageManifests: fromMessageManifest.MessageManifestState;\n  modals: fromModal.State;\n  rest: fromRest.State;\n  theme: fromTheme.State;\n  wysiwyg: fromWysiwyg.State;\n}\n\nexport const initialState: RootState = {\n  layout: fromLayout.initialState,\n  manifests: fromManifest.initialState,\n  messageManifests: fromMessageManifest.initialState,\n  modals: fromModal.initialState,\n  rest: fromRest.initialState,\n  theme: fromTheme.initialState,\n  wysiwyg: fromWysiwyg.initialState\n};\n\nexport const reducers: ActionReducerMap = {\n  layout: fromLayout.reducer,\n  manifests: fromManifest.reducer,\n  messageManifests: fromMessageManifest.reducer,\n  modals: fromModal.reducer,\n  rest: fromRest.reducer,\n  theme: fromTheme.reducer,\n  wysiwyg: fromWysiwyg.reducer\n};\n\nexport const ROOT_REDUCER = new InjectionToken>('Root Reducer', {\n  factory: () => (reducers)\n});\n\nexport const metaReducers: Array> = [];\n\n// manifest selectors\nexport const selectManifestState = createFeatureSelector('manifests');\n\nconst findManifestEntry = (manifest: Manifest, entryName: string): ManifestEntry => manifest.entries.find(e => e.name === entryName);\n\nexport const selectManifestNames = createSelector(\n  selectManifestState,\n  fromManifest.selectManifestNames\n);\n\nexport const selectManifestEntities = createSelector(\n  selectManifestState,\n  fromManifest.selectManifestEntities\n);\n\nexport const selectAllManifests = createSelector(\n  selectManifestState,\n  fromManifest.selectAllManifests\n);\n\nexport const selectManifestTotal = createSelector(\n  selectManifestState,\n  fromManifest.selectManifestTotal\n);\n\nexport const selectCurrentRequest = createSelector(\n  selectManifestState,\n  fromManifest.selectCurrentRequest\n);\n\nexport const selectPendingRequests = createSelector(\n  selectManifestState,\n  fromManifest.selectPendingRequests\n);\n\nexport const selectManifestByName = (manifestName: string) => createSelector(\n  selectManifestEntities,\n  manifestEntities => manifestEntities[manifestName]\n);\n\nexport const selectManifestEntryResponse = (manifestName: string, entryName: string) => createSelector(\n  selectManifestEntities,\n  manifestEntities => {\n    if (manifestEntities[manifestName]) {\n      const manifestEntry = findManifestEntry(manifestEntities[manifestName], entryName);\n\n      return manifestEntry ? manifestEntry.response : undefined;\n    }\n\n    return undefined;\n  }\n);\n\nexport const selectManifestEntryError = (manifestName: string, entryName: string) => createSelector(\n  selectManifestEntities,\n  manifestEntities => {\n    if (manifestEntities[manifestName]) {\n      const manifestEntry = findManifestEntry(manifestEntities[manifestName], entryName);\n\n      return manifestEntry ? manifestEntry.error : undefined;\n    }\n\n    return undefined;\n  }\n);\n\n// rest selectors\nexport const selectRestState = createFeatureSelector('rest');\n\nexport const selectRestRequest = createSelector(\n  selectRestState,\n  fromRest.selectRequest\n);\n\n// message manifest selectors\nexport const selectMessageManifestState = createFeatureSelector('messageManifests');\n\nconst findMessageManifestEntry =\n  (manifest: MessageManifest, entryName: string): MessageManifestEntry => manifest.entries.find(e => e.name === entryName);\n\nexport const selectMessageManifestNames = createSelector(\n  selectMessageManifestState,\n  fromMessageManifest.selectManifestNames\n);\n\nexport const selectMessageManifestEntities = createSelector(\n  selectMessageManifestState,\n  fromMessageManifest.selectManifestEntities\n);\n\nexport const selectAllMessageManifests = createSelector(\n  selectMessageManifestState,\n  fromMessageManifest.selectAllManifests\n);\n\nexport const selectMessageManifestTotal = createSelector(\n  selectMessageManifestState,\n  fromMessageManifest.selectManifestTotal\n);\n\nexport const selectCurrentMessageMessage = createSelector(\n  selectMessageManifestState,\n  fromMessageManifest.selectCurrentMessage\n);\n\nexport const selectPendingMessageMessages = createSelector(\n  selectMessageManifestState,\n  fromMessageManifest.selectPendingMessage\n);\n\nexport const selectMessageManifestByName = (manifestName: string) => createSelector(\n  selectMessageManifestEntities,\n  messageManifestEntities => messageManifestEntities[manifestName]\n);\n\n// theme selectors\nexport const selectThemeState = createFeatureSelector('theme');\n\nexport const selectTheme = (name: string) => createSelector(\n  selectThemeState,\n  (themeState: fromTheme.State) => themeState.themes[name]\n);\n\nexport const selectCurrentTheme = createSelector(\n  selectThemeState,\n  (themeState: fromTheme.State) => themeState.themes[themeState.currentTheme]\n);\n\n// layout selectors\nexport const selectLayoutState = createFeatureSelector('layout');\n\n// TODO - determine how to pass states into tests without requiring null checks.\nexport const selectIsMobileLayout = createSelector(\n  selectLayoutState,\n  (layoutState: fromLayout.State) => layoutState?.layout.isMobile\n);\n\n// modal selectors\nexport const selectModalState = createFeatureSelector('modals');\n\nexport const selectModalByName = (modalName: string) => createSelector(\n  selectModalState,\n  (modalState: fromModal.State) => modalState.entities[modalName]\n);\n\n// wysiwyg selectors\nexport const selectWysiwygState = createFeatureSelector('wysiwyg');\n\n// TODO - determine how to pass states into tests without requiring null checks.\nexport const selectWysiwygById = (id: string) => createSelector(\n  selectWysiwygState,\n  (wysiwygState: fromWysiwyg.State) => wysiwygState?.entities[id]\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafePipe.html":{"url":"pipes/SafePipe.html","title":"pipe - SafePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/shared/pipes/safe.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safe\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, type: \"html\" | \"style\" | \"script\" | \"url\" | \"resourceUrl\")\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/shared/pipes/safe.pipe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"html\" | \"style\" | \"script\" | \"url\" | \"resourceUrl\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe',\n  pure: true\n})\nexport class SafePipe implements PipeTransform {\n\n  constructor(protected _sanitizer: DomSanitizer) {\n\n  }\n\n  transform(value: string, type: 'html' | 'style' | 'script' | 'url' | 'resourceUrl')\n    : SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    switch (type) {\n      case 'html':\n        return this._sanitizer.bypassSecurityTrustHtml(value);\n      case 'style':\n        return this._sanitizer.bypassSecurityTrustStyle(value);\n      case 'script':\n        return this._sanitizer.bypassSecurityTrustScript(value);\n      case 'url':\n        return this._sanitizer.bypassSecurityTrustUrl(value);\n      case 'resourceUrl':\n        return this._sanitizer.bypassSecurityTrustResourceUrl(value);\n      default:\n        throw new Error(`Unable to bypass security for invalid type: ${type}`);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectOptions.html":{"url":"interfaces/SelectOptions.html","title":"interface - SelectOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/shared/utility/decorators.utility.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            selector\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        selector\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selector:     MemoizedSelector\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MemoizedSelector\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MemoizedSelector, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { wvrTimeout } from './timing.utility';\n\n/** Used to delay the repeated execution of the decorated method until the specified time has elapsed. */\n// tslint:disable-next-line:only-arrow-functions\nfunction debounce(delay = 300): MethodDecorator {\n  return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n\n    const timeoutKey = Symbol();\n    const original = descriptor.value;\n    // tslint:disable-next-line:typedef\n    descriptor.value = function(...args) {\n      // tslint:disable-next-line:no-invalid-this\n      if (this[timeoutKey]) {\n        // tslint:disable-next-line:no-invalid-this\n        this[timeoutKey]();\n      }\n      // tslint:disable-next-line:no-invalid-this\n      this[timeoutKey] = wvrTimeout(() => original.apply(this, args), delay);\n    };\n\n    return descriptor;\n  };\n}\n\nexport interface SelectOptions {\n  selector: MemoizedSelector;\n}\n\n// tslint:disable-next-line:only-arrow-functions\nfunction WvrSelect(option: SelectOptions): PropertyDecorator {\n  // tslint:disable-next-line:only-arrow-functions\n  // tslint:disable-next-line:typedef\n  return function(target: any, propertyKey: string) {\n    const getter = function(): Observable {\n      // tslint:disable-next-line:no-invalid-this\n      return this.store.pipe(\n        select(option.selector),\n        filter(r => !!r)\n      );\n    };\n    Object.defineProperty(target, propertyKey, {\n      get: getter,\n      enumerable: true,\n      configurable: false\n    });\n  };\n}\n\nexport {\n  debounce,\n  WvrSelect\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/layout/layout.reducers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            layout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layout:         Layout\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Layout\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { Layout } from './layout';\nimport * as LayoutActions from './layout.actions';\n\nexport interface State {\n  layout: Layout;\n}\n\nexport const initialState: State = {\n  layout: { isMobile: false }\n};\n\nexport const reducer = createReducer(\n  initialState,\n  on(LayoutActions.setIsMobile, (state, { isMobile }) => ({\n    ...state,\n    layout: {\n      ...state.layout,\n      isMobile\n    }\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-1.html":{"url":"interfaces/State-1.html","title":"interface - State-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/manifest/manifest.reducers.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentRequest\n                                        \n                                \n                                \n                                        \n                                            pendingRequests\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentRequest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentRequest:         ManifestEntryRequest\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ManifestEntryRequest\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pendingRequests\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pendingRequests:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport { Manifest } from './manifest';\nimport { ManifestEntryRequest } from './manifest-entry-request';\nimport * as ManifestActions from './manifest.actions';\n\nexport interface State extends EntityState {\n  pendingRequests: Array;\n  currentRequest: ManifestEntryRequest;\n}\n\n// tslint:disable-next-line:only-arrow-functions\nexport function selectManifestByName(manifest: Manifest): string {\n  return manifest.name;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter({\n  selectId: selectManifestByName\n});\n\nexport const initialState: State = adapter.getInitialState({\n  pendingRequests: [],\n  currentRequest: undefined\n});\n\nconst manifestReducer = createReducer(\n  initialState,\n  on(ManifestActions.addManifest, (state, { manifest }) => adapter.addOne(manifest, state)),\n  on(ManifestActions.setManifest, (state, { manifest }) => adapter.setOne(manifest, state)),\n  on(ManifestActions.upsertManifest, (state, { manifest }) => adapter.upsertOne(manifest, state)),\n  on(ManifestActions.addManifests, (state, { manifests }) => adapter.addMany(manifests, state)),\n  on(ManifestActions.upsertManifests, (state, { manifests }) => adapter.upsertMany(manifests, state)),\n  on(ManifestActions.updateManifest, (state, { update }) => adapter.updateOne(update, state)),\n  on(ManifestActions.updateManifests, (state, { updates }) => adapter.updateMany(updates, state)),\n  on(ManifestActions.mapManifest, (state, { entityMap }) => adapter.mapOne(entityMap, state)),\n  on(ManifestActions.mapManifests, (state, { entityMap }) => adapter.map(entityMap, state)),\n  on(ManifestActions.deleteManifest, (state, { id }) => adapter.removeOne(id, state)),\n  on(ManifestActions.deleteManifests, (state, { ids }) => adapter.removeMany(ids, state)),\n  on(ManifestActions.deleteManifestsByPredicate, (state, { predicate }) => adapter.removeMany(predicate, state)),\n  on(ManifestActions.loadManifests, (state, { manifests }) => adapter.setAll(manifests, state)),\n  on(ManifestActions.clearManifests, state => adapter.removeAll({ ...state, selectedManifestId: undefined })),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(ManifestActions.submitRequest, (state, { request }) => {\n    return {\n      ...state,\n      currentRequest: request\n    // tslint:disable-next-line:semicolon\n    }\n  }),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(ManifestActions.submitRequestSuccess, (state, { request, response, manifest }) => {\n    return adapter.updateOne({\n      id: manifest.name,\n      changes: {\n        entries: state.entities[manifest.name].entries.map(entry => {\n          if (entry.name === request.entryName) {\n            return { ...entry, request, response };\n          }\n\n          // tslint:disable-next-line:arrow-return-shorthand\n          return entry;\n        })\n      }\n    }, {\n      ...state,\n      currentRequest: undefined\n    });\n  }),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(ManifestActions.submitRequestFailure, (state, { request, response, manifest }) => {\n    return adapter.updateOne({\n      id: manifest.name,\n      changes: {\n        entries: state.entities[manifest.name].entries.map(entry => {\n          if (entry.name === request.entryName) {\n            return { ...entry, request, response };\n          }\n\n          return entry;\n        })\n      }\n    }, {\n      ...state,\n      currentRequest: undefined\n    });\n  }),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(ManifestActions.queueRequest, (state, { request }) => {\n    return {\n      ...state,\n      pendingRequests: state.pendingRequests.concat([{ ...request }]),\n      currentRequest: undefined\n    };\n  }),\n  // tslint:disable-next-line:arrow-return-shorthand\n  on(ManifestActions.dequeueRequest, (state, { request }) => {\n    return {\n      ...state,\n      pendingRequests: state.pendingRequests.filter(r => r.manifestName !== request.manifestName || r.entryName !== request.entryName)\n    };\n  })\n);\n\n// tslint:disable-next-line:typedef\nexport function reducer(state: State | undefined, action: Action) {\n  return manifestReducer(state, action);\n}\n\n// get the selectors\nconst {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal\n} = adapter.getSelectors();\n\n// select the array of manifest names\nexport const selectManifestNames = selectIds;\n\n// select the dictionary of manifest entities\nexport const selectManifestEntities = selectEntities;\n\n// select the array of manifests\nexport const selectAllManifests = selectAll;\n\n// select the total manifest count\nexport const selectManifestTotal = selectTotal;\n\nexport const selectCurrentRequest = (state: State) => state.currentRequest;\n\nexport const selectPendingRequests = (state: State) => state.pendingRequests;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-2.html":{"url":"interfaces/State-2.html","title":"interface - State-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/modal/modal.reducers.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\nimport { Modal } from './modal';\nimport * as ModalActions from './modal.actions';\n\nexport interface State extends EntityState {}\n\nexport function selectModalByName(modal: Modal): string {\n  return modal.name;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter({\n  selectId: selectModalByName\n});\n\nexport const initialState: State = adapter.getInitialState();\n\nexport const reducer = createReducer(\n  initialState,\n  on(ModalActions.addModal, (state, { modal }) => adapter.addOne(modal, state)),\n  on(ModalActions.closeModal, (state, { id }) => adapter.updateOne({\n    id,\n    changes: {\n      open: false\n    }\n  }, {\n    ...state\n  })),\n  on(ModalActions.openModal, (state, { id }) => adapter.updateOne({\n    id,\n    changes: {\n      open: true\n    }\n  }, {\n    ...state\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-3.html":{"url":"interfaces/State-3.html","title":"interface - State-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/rest/rest.reducers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            request\n                                        \n                                \n                                \n                                        \n                                            response\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request:         Request\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Request\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport * as RestActions from './rest.actions';\nimport { Request } from './request';\n​\nexport interface State {\n  request: Request;\n  response: any;\n}\n​\nexport const initialState: State = {\n  request: undefined,\n  response: undefined\n};\n​\nexport const reducer = createReducer(\n  initialState,\n  on(RestActions.request, (state, { request }) => ({\n    ...state,\n    request,\n    response: undefined,\n    error: undefined\n  })),\n  on(RestActions.requestSuccess, (state, { response }) => ({\n    ...state,\n    response\n  })),\n  on(RestActions.requestFailure, (state, { response }) => ({\n    ...state,\n    response\n  }))\n);\n\nexport const selectRequest = (state: State) => state.request;\n\nexport const selectResponse = (state: State) => state.response;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-4.html":{"url":"interfaces/State-4.html","title":"interface - State-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/theme/theme.reducers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentTheme\n                                        \n                                \n                                \n                                        \n                                            themes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentTheme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentTheme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        themes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { ThemeVariants } from '../../shared/theme';\nimport * as DefaultDarkTheme from '../../shared/theme/default-dark-theme.json';\nimport * as DefaultTheme from '../../shared/theme/default-theme.json';\nimport * as ThemeActions from './theme.actions';\n\nconst defaultTheme: ThemeVariants = DefaultTheme;\nconst defaultDarkTheme: ThemeVariants = DefaultDarkTheme;\n\nconst unwrap = (theme: any): ThemeVariants => theme.default;\n\nexport interface State {\n  themes: { [name: string]: ThemeVariants };\n  currentTheme: string;\n}\n\nexport const initialState: State = {\n  themes: {\n    default: unwrap(defaultTheme),\n    defaultDark: unwrap(defaultDarkTheme)\n  },\n  currentTheme: 'default'\n};\n\nexport const reducer = createReducer(\n  initialState,\n  on(ThemeActions.add, (state, { name, theme }) => {\n    const themes = { ...state.themes };\n    themes[name] = {\n      ...themes[name],\n      ...theme\n    };\n\n    return {\n      ...state,\n      themes\n    };\n  }),\n  on(ThemeActions.select, (state, { name }) => ({\n    ...state,\n    currentTheme: name\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-5.html":{"url":"interfaces/State-5.html","title":"interface - State-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/wysiwyg/wysiwyg.reducers.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\nimport { Wysiwyg } from './wysiwyg';\nimport * as WysiwygActions from './wysiwyg.actions';\n\nexport interface State extends EntityState { }\n\nexport function selectWysiwygById(wysiwyg: Wysiwyg): string {\n  return wysiwyg.id;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter({\n  selectId: selectWysiwygById\n});\n\nexport const initialState: State = adapter.getInitialState();\n\nexport const reducer = createReducer(\n  initialState,\n  on(WysiwygActions.addWysiwyg, (state, { wysiwyg }) => adapter.addOne(wysiwyg, state)),\n  on(WysiwygActions.saveWysiwyg, (state, { id, content }) => adapter.updateOne({\n    id,\n    changes: {\n      initialContent: content,\n      content\n    }\n  },\n    { ...state })),\n  on(WysiwygActions.resetWysiwyg, (state, { id }) => adapter.updateOne({\n    id,\n    changes: {\n      content: state.entities[id].initialContent\n    }\n  },\n    { ...state }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeEffects.html":{"url":"injectables/ThemeEffects.html","title":"injectable - ThemeEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/theme/theme.effects.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions: Actions, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/core/theme/theme.effects.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\nimport { ThemeService } from './theme.service';\n\n@Injectable()\nexport class ThemeEffects {\n\n  constructor(\n    private readonly actions: Actions,\n    private readonly themeService: ThemeService\n  ) {\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/theme/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentTheme\n                            \n                            \n                                subscription\n                            \n                            \n                                themedComponents\n                            \n                            \n                                themes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyTheme\n                            \n                            \n                                applyThemeByName\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                processThemeVariants\n                            \n                            \n                                registerComponent\n                            \n                            \n                                unRegisterComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/core/theme/theme.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        applyTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTheme(theme: ThemeVariants, themeableComponent: WvrThemeableComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/theme/theme.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                ThemeVariants\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    themeableComponent\n                                    \n                                                WvrThemeableComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyThemeByName\n                        \n                    \n                \n            \n            \n                \napplyThemeByName(themeName: string, themeableComponent: WvrThemeableComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/theme/theme.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    themeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    themeableComponent\n                                    \n                                                WvrThemeableComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/theme/theme.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        processThemeVariants\n                        \n                    \n                \n            \n            \n                \n                    \n                    processThemeVariants(theme: ThemeVariants, themeableComponent: WvrThemeableComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/theme/theme.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                ThemeVariants\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    themeableComponent\n                                    \n                                                WvrThemeableComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerComponent\n                        \n                    \n                \n            \n            \n                \nregisterComponent(id: number, themeableComponent: WvrThemeableComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/theme/theme.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    themeableComponent\n                                    \n                                                WvrThemeableComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unRegisterComponent\n                        \n                    \n                \n            \n            \n                \nunRegisterComponent(id: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/core/theme/theme.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThemeVariants\n\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/theme/theme.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/theme/theme.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themedComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/theme/theme.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/core/theme/theme.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { ThemeVariants } from '../../shared/theme';\nimport { hexToRgb, luminance, mix, yiq } from '../../shared/utility/color.utility';\nimport { WvrThemeableComponent } from '../../shared/wvr-themeable.component';\nimport { RootState, selectThemeState } from '../store';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService implements OnDestroy {\n\n  currentTheme: ThemeVariants;\n\n  themes: { [name: string]: ThemeVariants };\n\n  themedComponents: Map;\n\n  subscription: Subscription;\n\n  constructor(private readonly store: Store) {\n    this.themedComponents = new Map();\n    this.subscription = this.store.pipe(\n      select(selectThemeState),\n      filter(themeState => !!themeState)\n    )\n    .subscribe(themeState => {\n      this.themes = themeState.themes;\n      this.currentTheme = this.themes[themeState.currentTheme];\n      this.themedComponents.forEach((themeableComponent: WvrThemeableComponent, id: number) => {\n        this.applyTheme(this.currentTheme, themeableComponent);\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  registerComponent(id: number, themeableComponent: WvrThemeableComponent): void {\n    this.themedComponents.set(id, themeableComponent);\n    this.applyTheme(this.currentTheme, themeableComponent);\n  }\n\n  unRegisterComponent(id: number): void {\n    this.themedComponents.delete(id);\n  }\n\n  applyThemeByName(themeName: string, themeableComponent: WvrThemeableComponent): void {\n    const theme = this.themes[themeName];\n    this.applyTheme(theme, themeableComponent);\n  }\n\n  private applyTheme(theme: ThemeVariants, themeableComponent: WvrThemeableComponent): void {\n    if (!!theme) {\n      let styles = '';\n      styles += this.processThemeVariants(theme, themeableComponent);\n      themeableComponent.style = styles;\n    }\n  }\n\n  // tslint:disable-next-line:prefer-function-over-method\n  private processThemeVariants(theme: ThemeVariants, themeableComponent: WvrThemeableComponent): string {\n    const computedStyle = getComputedStyle(themeableComponent.eRef.nativeElement);\n\n    const yiqContrastedThreshold = Number(computedStyle.getPropertyValue('--yiq-contrasted-threshold')\n      .trim());\n    const yiqTextDark = computedStyle.getPropertyValue('--yiq-text-dark')\n      .trim();\n    const yiqTextLight = computedStyle.getPropertyValue('--yiq-text-light')\n      .trim();\n\n    const themeColorInterval = parseInt(computedStyle.getPropertyValue('--theme-color-interval')\n      .trim(), 10);\n\n    const black = computedStyle.getPropertyValue('--black')\n      .trim();\n    const white = computedStyle.getPropertyValue('--white')\n      .trim();\n\n    const constrast = (level: number) => (level > 0 ? black : white);\n    const yiqConstrast = (value: number) => (value >= yiqContrastedThreshold ? yiqTextDark : yiqTextLight);\n\n    let styles = '';\n\n    const appendStyle = (customProperty: string, value: string): void => {\n      styles += themeableComponent.themeOverrides[customProperty]\n        ? `${customProperty}: ${themeableComponent.themeOverrides[customProperty]};`\n        : `${customProperty}: ${value};`;\n    };\n\n    // update variant variables\n    for (const k of Object.keys(theme)) {\n      const key = `--${k}`;\n      const value = theme[k].baseColor;\n\n      // update theme variable\n      styles += `${key}: ${value};`;\n\n      themeableComponent.variantTypes.forEach(variantType => {\n\n        switch (variantType) {\n          case 'alert':\n            const alertBackgroundLevel = Number(computedStyle.getPropertyValue('--alert-bg-level')\n              .trim());\n            const alertBorderLevel = Number(computedStyle.getPropertyValue('--alert-border-level')\n              .trim());\n            const alertColorLevel = Number(computedStyle.getPropertyValue('--alert-color-level')\n              .trim());\n\n            // update alert variants\n            const alertBgValue = mix(constrast(alertBackgroundLevel), value, Math.abs(alertBackgroundLevel) * themeColorInterval);\n            appendStyle(`${key}-alert-bg`, alertBgValue);\n\n            const alertBorderValue = mix(constrast(alertBorderLevel), value, Math.abs(alertBorderLevel) * themeColorInterval);\n            appendStyle(`${key}-alert-border`, alertBorderValue);\n\n            const alertColorValue = mix(constrast(alertColorLevel), value, Math.abs(alertColorLevel) * themeColorInterval);\n            appendStyle(`${key}-alert-color`, alertColorValue);\n            break;\n          case 'badge':\n            // update badge variants\n            const badgeBgValue = value;\n            appendStyle(`${key}-badge-bg`, badgeBgValue);\n\n            const badgeColorValue = yiqConstrast(yiq(value));\n            appendStyle(`${key}-badge-color`, badgeColorValue);\n            break;\n          case 'button':\n            // update button outline variants\n            const buttonOutlineColorValue = value;\n            appendStyle(`${key}-button-outline-color`, buttonOutlineColorValue);\n\n            const buttonOutlineColorHoverValue = yiqConstrast(yiq(value));\n            appendStyle(`${key}-button-outline-color-hover`, buttonOutlineColorHoverValue);\n\n            const bobsrgba = hexToRgb(value);\n            const buttonOutlineBoxShadowColorValue = `rgba(${bobsrgba.r}, ${bobsrgba.g}, ${bobsrgba.b}, .5)`;\n            appendStyle(`${key}-button-outline-box-shadow-color`, buttonOutlineBoxShadowColorValue);\n\n            // update button variants\n            const buttonColorValue = yiqConstrast(yiq(value));\n            appendStyle(`${key}-button-color`, buttonColorValue);\n\n            const buttonBgValue = value;\n            appendStyle(`${key}-button-bg`, buttonBgValue);\n\n            const buttonBorderValue = value;\n            appendStyle(`${key}-button-border`, buttonBorderValue);\n\n            const buttonHoverColorValue = yiqConstrast(yiq(luminance(value, -0.1165)));\n            appendStyle(`${key}-button-hover-color`, buttonHoverColorValue);\n\n            const buttonHoverBgValue = luminance(value, -0.1165);\n            appendStyle(`${key}-button-hover-bg`, buttonHoverBgValue);\n\n            const buttonHoverBorderValue = luminance(value, -0.1415);\n            appendStyle(`${key}-button-hover-border`, buttonHoverBorderValue);\n\n            const buttonActiveColorValue = yiqConstrast(yiq(luminance(value, -0.1415)));\n            appendStyle(`${key}-button-active-color`, buttonActiveColorValue);\n\n            const buttonActiveBgValue = luminance(value, -0.1415);\n            appendStyle(`${key}-button-active-bg`, buttonActiveBgValue);\n\n            const buttonActiveBorderValue = luminance(value, -0.17);\n            appendStyle(`${key}-button-active-border`, buttonActiveBorderValue);\n\n            const bbsrgba = hexToRgb(mix(yiqConstrast(yiq(luminance(buttonBgValue, -0.1165))), buttonBorderValue, 15));\n            const buttonBoxShadowColorValue = `rgba(${bbsrgba.r}, ${bbsrgba.g}, ${bbsrgba.b}, .5)`;\n            appendStyle(`${key}-button-box-shadow-color`, buttonBoxShadowColorValue);\n            break;\n          case 'default':\n              // update default outline variants\n              const defaultOutlineColorValue = value;\n              appendStyle(`${key}-default-outline-color`, defaultOutlineColorValue);\n\n              const defaultOutlineColorHoverValue = yiqConstrast(yiq(value));\n              appendStyle(`${key}-default-outline-color-hover`, defaultOutlineColorHoverValue);\n\n              const dvobsrgba = hexToRgb(value);\n              const defaultOutlineBoxShadowColorValue = `rgba(${dvobsrgba.r}, ${dvobsrgba.g}, ${dvobsrgba.b}, .5)`;\n              appendStyle(`${key}-default-outline-box-shadow-color`, defaultOutlineBoxShadowColorValue);\n\n              // update default variants\n              const defaultColorValue = yiqConstrast(yiq(value));\n              appendStyle(`${key}-default-color`, defaultColorValue);\n\n              const defaultBgValue = value;\n              appendStyle(`${key}-default-bg`, defaultBgValue);\n\n              const defaultBorderValue = value;\n              appendStyle(`${key}-default-border`, defaultBorderValue);\n\n              const defaultHoverColorValue = yiqConstrast(yiq(luminance(value, -0.1165)));\n              appendStyle(`${key}-default-hover-color`, defaultHoverColorValue);\n\n              const defaultHoverBgValue = luminance(value, -0.1165);\n              appendStyle(`${key}-default-hover-bg`, defaultHoverBgValue);\n\n              const defaultHoverBorderValue = luminance(value, -0.1415);\n              appendStyle(`${key}-default-hover-border`, defaultHoverBorderValue);\n\n              const defaultActiveColorValue = yiqConstrast(yiq(luminance(value, -0.1415)));\n              appendStyle(`${key}-default-active-color`, defaultActiveColorValue);\n\n              const defaultActiveBgValue = luminance(value, -0.1415);\n              appendStyle(`${key}-default-active-bg`, defaultActiveBgValue);\n\n              const defaultActiveBorderValue = luminance(value, -0.17);\n              appendStyle(`${key}-default-active-border`, defaultActiveBorderValue);\n\n              const dbsrgba = hexToRgb(mix(yiqConstrast(yiq(luminance(defaultBgValue, -0.1165))), defaultBorderValue, 15));\n              const defaultBoxShadowColorValue = `rgba(${dbsrgba.r}, ${dbsrgba.g}, ${dbsrgba.b}, .5)`;\n              appendStyle(`${key}-default-box-shadow-color`, defaultBoxShadowColorValue);\n              break;\n          case 'list-group-item':\n            const listGroupItemBackgroundLevel = Number(computedStyle.getPropertyValue('--list-group-item-bg-level')\n              .trim());\n            const listGroupItemColorLevel = Number(computedStyle.getPropertyValue('--list-group-item-color-level')\n              .trim());\n\n            // update list item group variants\n            // tslint:disable-next-line:max-line-length\n            const listGroupItemBgValue = mix(constrast(listGroupItemBackgroundLevel), value, Math.abs(listGroupItemBackgroundLevel) * themeColorInterval);\n            appendStyle(`${key}-list-group-item-bg`, listGroupItemBgValue);\n\n            // tslint:disable-next-line:max-line-length\n            const listGroupItemColorValue = mix(constrast(listGroupItemColorLevel), value, Math.abs(listGroupItemColorLevel) * themeColorInterval);\n            appendStyle(`${key}-list-group-item-color`, listGroupItemColorValue);\n            break;\n          case 'table':\n            const tableBackgroundLevel = Number(computedStyle.getPropertyValue('--table-bg-level')\n              .trim());\n            const tableBorderLevel = Number(computedStyle.getPropertyValue('--table-border-level')\n              .trim());\n\n            // update table variants\n            const tableBgValue = mix(constrast(tableBackgroundLevel), value, Math.abs(tableBackgroundLevel) * themeColorInterval);\n            appendStyle(`${key}-table-bg`, tableBgValue);\n\n            const tableBorderValue = mix(constrast(tableBorderLevel), value, Math.abs(tableBorderLevel) * themeColorInterval);\n            appendStyle(`${key}-table-border`, tableBorderValue);\n            break;\n          default: break;\n        }\n\n      });\n    }\n\n    return styles;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ThemeVariant.html":{"url":"interfaces/ThemeVariant.html","title":"interface - ThemeVariant","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ThemeVariant\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/shared/theme/theme-variant.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            activeColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            backgroundColor\n                                        \n                                \n                                \n                                        \n                                            baseColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            borderColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            focusColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hoverColor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            shadowColor\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backgroundColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backgroundColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        baseColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        borderColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        borderColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        focusColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        focusColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hoverColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hoverColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shadowColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shadowColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ThemeVariant {\n  baseColor: string;\n  color?: string;\n  backgroundColor?: string;\n  borderColor?: string;\n  shadowColor?: string;\n  hoverColor?: string;\n  focusColor?: string;\n  activeColor?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ThemeVariants.html":{"url":"interfaces/ThemeVariants.html","title":"interface - ThemeVariants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ThemeVariants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/shared/theme/theme-variants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            danger\n                                        \n                                \n                                \n                                        \n                                            dark\n                                        \n                                \n                                \n                                        \n                                            info\n                                        \n                                \n                                \n                                        \n                                            light\n                                        \n                                \n                                \n                                        \n                                            primary\n                                        \n                                \n                                \n                                        \n                                            primaryAccent\n                                        \n                                \n                                \n                                        \n                                            primaryNeutral\n                                        \n                                \n                                \n                                        \n                                            secondary\n                                        \n                                \n                                \n                                        \n                                            secondaryAccent\n                                        \n                                \n                                \n                                        \n                                            secondaryNeutral\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                                \n                                        \n                                            warning\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        danger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        danger:         ThemeVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ThemeVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dark\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dark:         ThemeVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ThemeVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        info:         ThemeVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ThemeVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        light\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        light:         ThemeVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ThemeVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primary:         ThemeVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ThemeVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryAccent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryAccent:         ThemeVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ThemeVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryNeutral\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryNeutral:         ThemeVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ThemeVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secondary:         ThemeVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ThemeVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondaryAccent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secondaryAccent:         ThemeVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ThemeVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondaryNeutral\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secondaryNeutral:         ThemeVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ThemeVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         ThemeVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ThemeVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        warning\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        warning:         ThemeVariant\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ThemeVariant\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ThemeVariant } from './theme-variant';\n\nexport interface ThemeVariants {\n  primary: ThemeVariant;\n  primaryAccent: ThemeVariant;\n  primaryNeutral: ThemeVariant;\n  secondary: ThemeVariant;\n  secondaryAccent: ThemeVariant;\n  secondaryNeutral: ThemeVariant;\n  success: ThemeVariant;\n  danger: ThemeVariant;\n  warning: ThemeVariant;\n  info: ThemeVariant;\n  light: ThemeVariant;\n  dark: ThemeVariant;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WvrAnimationComponent.html":{"url":"interfaces/WvrAnimationComponent.html","title":"interface - WvrAnimationComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WvrAnimationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/shared/wvr-animation.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        initializeAnimationElement\n                                    \n                                \n                                \n                                    \n                                        initializeAnimationRegistration\n                                    \n                                \n                                \n                                    \n                                        onAnimationEvent\n                                    \n                                \n                                \n                                    \n                                        triggerAnimations\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initializeAnimationElement\n                        \n                    \n                \n            \n            \n                \ninitializeAnimationElement()\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/shared/wvr-animation.component.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeAnimationRegistration\n                        \n                    \n                \n            \n            \n                \ninitializeAnimationRegistration()\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/shared/wvr-animation.component.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAnimationEvent\n                        \n                    \n                \n            \n            \n                \nonAnimationEvent($event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/shared/wvr-animation.component.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerAnimations\n                        \n                    \n                \n            \n            \n                \ntriggerAnimations(animationTriggerType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/shared/wvr-animation.component.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    animationTriggerType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface WvrAnimationComponent {\n  initializeAnimationElement(): void;\n  initializeAnimationRegistration(): void;\n  onAnimationEvent($event: Event): void;\n  triggerAnimations(animationTriggerType: string): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/WvrContentProjectionDirective.html":{"url":"directives/WvrContentProjectionDirective.html","title":"directive - WvrContentProjectionDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  WvrContentProjectionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/shared/directives/wvr-content-projection.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [wvrContentProjection]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                template\n                            \n                            \n                                wvrContentProjection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/shared/directives/wvr-content-projection.directive.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        template\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/shared/directives/wvr-content-projection.directive.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        wvrContentProjection\n                    \n                \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/shared/directives/wvr-content-projection.directive.ts:9\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/shared/directives/wvr-content-projection.directive.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\nimport { projectSourceContent } from '../utility';\n\n@Directive({\n  selector: '[wvrContentProjection]'\n})\nexport class WvrContentProjectionDirective implements AfterViewInit {\n\n  @Input('wvrContentProjection') parentElementRef: ElementRef;\n\n  /* tslint:disable-next-line:no-input-rename */\n  @Input('template') template: string;\n\n  constructor(private readonly elementRef: ElementRef) {\n\n  }\n\n  ngAfterViewInit(): void {\n    projectSourceContent(this.elementRef, this.parentElementRef, `template[${this.template}]`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WvrCoreModule.html":{"url":"modules/WvrCoreModule.html","title":"module - WvrCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    WvrCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WvrCoreModule\n\n\n\ncluster_WvrCoreModule_providers\n\n\n\n\nActionRegistryService\n\nActionRegistryService\n\n\n\nWvrCoreModule\n\nWvrCoreModule\n\nWvrCoreModule -->\n\nActionRegistryService->WvrCoreModule\n\n\n\n\n\nAnimationService\n\nAnimationService\n\nWvrCoreModule -->\n\nAnimationService->WvrCoreModule\n\n\n\n\n\nComponentRegistryService\n\nComponentRegistryService\n\nWvrCoreModule -->\n\nComponentRegistryService->WvrCoreModule\n\n\n\n\n\nNgBindingsService\n\nNgBindingsService\n\nWvrCoreModule -->\n\nNgBindingsService->WvrCoreModule\n\n\n\n\n\nThemeService\n\nThemeService\n\nWvrCoreModule -->\n\nThemeService->WvrCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/wvr-core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ActionRegistryService\n                        \n                        \n                            AnimationService\n                        \n                        \n                            ComponentRegistryService\n                        \n                        \n                            NgBindingsService\n                        \n                        \n                            ThemeService\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CUSTOM_ELEMENTS_SCHEMA, Injector, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { storeDevtoolsInstrument } from './devtools/instrument';\nimport { WvrElementDesc } from '../shared/utility/bootstrap.utility';\nimport { WvrAlertComponent } from '../wvr-alert/wvr-alert.component';\nimport { WvrButtonComponent } from '../wvr-button/wvr-button.component';\nimport { WvrCardComponent } from '../wvr-card/wvr-card.component';\nimport { WvrColorPreviewComponent } from '../wvr-color-preview/wvr-color-preview.component';\nimport { WvrDropdownComponent } from '../wvr-dropdown/wvr-dropdown.component';\nimport { WvrFooterComponent } from '../wvr-footer/wvr-footer.component';\nimport { WvrHeaderComponent } from '../wvr-header/wvr-header.component';\nimport { WvrIconComponent } from '../wvr-icon/wvr-icon.component';\nimport { WvrItWorksComponent } from '../wvr-it-works/wvr-it-works.component';\nimport { WvrListComponent } from '../wvr-list/wvr-list.component';\nimport { WvrListItemComponent } from '../wvr-list/wvr-list-item/wvr-list-item.component';\nimport { WvrManifestEntryComponent } from '../wvr-manifest/wvr-manifest-entry/wvr-manifest-entry.component';\nimport { WvrManifestComponent } from '../wvr-manifest/wvr-manifest.component';\nimport { WvrMessageManifestEntryComponent } from '../wvr-message-manifest/wvr-message-manifest-entry/wvr-message-manifest-entry.component';\nimport { WvrMessageManifestComponent } from '../wvr-message-manifest/wvr-message-manifest.component';\nimport { WvrModalComponent } from '../wvr-modal/wvr-modal.component';\nimport { WvrNavLiComponent } from '../wvr-nav-list/wvr-nav-li/wvr-nav-li.component';\nimport { WvrNavListComponent } from '../wvr-nav-list/wvr-nav-list.component';\nimport { WvrTabsComponent } from '../wvr-tabs/wvr-tabs.component';\nimport { WvrTextComponent } from '../wvr-text/wvr-text.component';\nimport { WvrThemeComponent } from '../wvr-theme/wvr-theme.component';\nimport { WvrWysiwygComponent } from '../wvr-wysiwyg/wvr-wysiwyg.component';\nimport { ActionRegistryService } from './action-registry.service';\nimport { AnimationService } from './animation.service';\nimport { ComponentRegistryService } from './component-registry.service';\nimport { LayoutEffects } from './layout/layout.effects';\nimport { ManifestEffects } from './manifest/manifest.effects';\nimport { MessageManifestEffects } from './message-manifest/message-manifest.effects';\nimport { NgBindingsService } from './ng-bindings.service';\nimport { RestEffects } from './rest/rest.effects';\nimport { metaReducers, ROOT_REDUCER } from './store';\nimport { ThemeEffects } from './theme/theme.effects';\nimport { ThemeService } from './theme/theme.service';\nimport { WysiwygEffects } from './wysiwyg/wysiwyg.effects';\n\n/** This property contains a list of components and the selector tags. */\nexport const WVR_ELEMENTS: Array = [\n  { component: WvrAlertComponent, selector: 'wvre-alert', lazy: true },\n  { component: WvrButtonComponent, selector: 'wvre-button', lazy: true },\n  { component: WvrCardComponent, selector: 'wvre-card', lazy: true },\n  { component: WvrColorPreviewComponent, selector: 'wvre-color-preview', lazy: true },\n  { component: WvrDropdownComponent, selector: 'wvre-dropdown', lazy: true },\n  { component: WvrFooterComponent, selector: 'wvre-footer', lazy: true },\n  { component: WvrHeaderComponent, selector: 'wvre-header', lazy: false },\n  { component: WvrIconComponent, selector: 'wvre-icon', lazy: true },\n  { component: WvrItWorksComponent, selector: 'wvre-it-works', lazy: true },\n  { component: WvrListComponent, selector: 'wvre-list', lazy: true },\n  { component: WvrListItemComponent, selector: 'wvre-list-item', lazy: true },\n  { component: WvrManifestComponent, selector: 'wvre-manifest', lazy: false },\n  { component: WvrManifestEntryComponent, selector: 'wvre-manifest-entry', lazy: false },\n  { component: WvrMessageManifestComponent, selector: 'wvre-message-manifest', lazy: false },\n  { component: WvrMessageManifestEntryComponent, selector: 'wvre-message-manifest-entry', lazy: false },\n  { component: WvrModalComponent, selector: 'wvre-modal', lazy: true },\n  { component: WvrNavLiComponent, selector: 'wvre-nav-li', lazy: true },\n  { component: WvrNavListComponent, selector: 'wvre-nav-list', lazy: true },\n  { component: WvrTabsComponent, selector: 'wvre-tabs', lazy: true },\n  { component: WvrTextComponent, selector: 'wvre-text', lazy: true },\n  { component: WvrThemeComponent, selector: 'wvre-theme', lazy: false },\n  { component: WvrWysiwygComponent, selector: 'wvre-wysiwyg', lazy: true }\n];\n\nexport const registerCustomElements = (injector: Injector, elements: Array) => {\n  elements.forEach(element => {\n    try {\n      customElements.define(element.selector, createCustomElement(element.component, { injector }));\n    } catch (e) {\n      // console.warn(e);\n    }\n  });\n};\n\nexport const showHiddentContent = (injector: Injector) => {\n  const doc = injector.get(DOCUMENT);\n  doc.querySelectorAll('[wvr-hide-content]')\n    .forEach(elem => {\n      elem.removeAttribute('wvr-hide-content');\n    });\n};\n\nconst MODULES: Array = [\n  EffectsModule.forRoot([\n    LayoutEffects,\n    ManifestEffects,\n    MessageManifestEffects,\n    RestEffects,\n    ThemeEffects,\n    WysiwygEffects\n  ]),\n  HttpClientModule,\n  StoreModule.forRoot(ROOT_REDUCER, { metaReducers }),\n  ...storeDevtoolsInstrument\n];\n\nconst PROVIDERS = [\n  AnimationService,\n  ActionRegistryService,\n  ComponentRegistryService,\n  NgBindingsService,\n  ThemeService\n];\n\n@NgModule({\n  imports: [\n    ...MODULES\n  ],\n  exports: [],\n  declarations: [],\n  providers: [\n    ...PROVIDERS\n  ],\n  entryComponents: [],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class WvrCoreModule {\n\n  constructor(@Optional() @SkipSelf() parentModule: WvrCoreModule) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WvrDataComponent.html":{"url":"interfaces/WvrDataComponent.html","title":"interface - WvrDataComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WvrDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/shared/wvr-data.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getWvrData\n                                    \n                                \n                                \n                                    \n                                        hasWvrData\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getWvrData\n                        \n                    \n                \n            \n            \n                \ngetWvrData()\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/shared/wvr-data.component.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasWvrData\n                        \n                    \n                \n            \n            \n                \nhasWvrData()\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/shared/wvr-data.component.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface WvrDataComponent {\n  data: {[as: string]: Observable};\n  hasWvrData(): boolean;\n  getWvrData(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WvrDataSelect.html":{"url":"interfaces/WvrDataSelect.html","title":"interface - WvrDataSelect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WvrDataSelect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/data-select.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            as\n                                        \n                                \n                                \n                                        \n                                            entry\n                                        \n                                \n                                \n                                        \n                                            manifest\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        as\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        as:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entry:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        manifest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        manifest:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WvrDataSelect {\n  manifest: string;\n  entry: string;\n  as: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WvrElementDesc.html":{"url":"interfaces/WvrElementDesc.html","title":"interface - WvrElementDesc","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WvrElementDesc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/shared/utility/bootstrap.utility.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            lazy\n                                        \n                                \n                                \n                                        \n                                            selector\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lazy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lazy:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selector\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selector:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { enableProdMode, Injector, isDevMode, Type } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppConfig, APP_CONFIG } from '../config';\nimport { wvrTimeout } from './timing.utility';\n\ninterface WvrElementDesc {\n  component: any;\n  selector: string;\n  lazy: boolean;\n}\n\nconst componentScript = document.currentScript;\n\n/** Interigates the current script tag for its src and extroplates the configuration path from that location. */\nconst obtainConfigPath = (): string => {\n  const componentScriptSrc = componentScript.getAttribute('src');\n  const componentScriptSrcPathParts = componentScriptSrc.split('/');\n  componentScriptSrcPathParts.pop();\n  const configBasePath = componentScriptSrcPathParts.join('/');\n\n  return `${configBasePath}/config.json`;\n};\n\nconst weaverInit = (module: Type, environment: any) => {\n  if (environment.production) {\n    enableProdMode();\n  }\n\n  const win = (window as any);\n\n  if (!win.weaverBootstrapEvent) {\n    win.weaverBootstrapEvent = 'DOMContentLoaded';\n  }\n\n  document.addEventListener(win.weaverBootstrapEvent, () => {\n    weaverBootstrap(module)(isDevMode() ? '/config.json' : undefined)\n      .catch();\n  });\n};\n\n/** Obtains, parses and injects the configuration. */\nconst weaverBootstrap = (module: Type) => (configPath: string) => fetch(configPath ? configPath : obtainConfigPath())\n  .then((response: Response) => response.json())\n  .then((appConfig: AppConfig) => platformBrowserDynamic([{\n    provide: APP_CONFIG,\n    useValue: appConfig\n  }])\n    .bootstrapModule(module)\n    .then(showWeaverElements)\n    .catch((err: any) => {\n      console.error(err);\n    }));\n\nconst lazyLoadWeaverElement = (element: HTMLElement, selectors: Array): boolean => {\n  if (selectors.indexOf(element.parentNode.nodeName) >= 0) {\n    return false;\n  }\n\n  if (element.parentNode.nodeName === 'BODY') {\n    return true;\n  }\n\n  return lazyLoadWeaverElement(element.parentNode as HTMLElement, selectors);\n};\n\n/** Lazy load weaver elements. */\nconst registerWeaverElements = (injector: Injector, wvrElements: Array) => {\n  // filter for selectors of elements to lazy load\n  const selectors = wvrElements.filter(wvrElement => wvrElement.lazy)\n    .map(wvrElement => wvrElement.selector.toUpperCase());\n\n  // wrap elements that do not have weaver element as parent in div and template\n  // div to specify class to target for min-height\n  // template to prevent render of weaver element\n  wvrElements\n    .filter(wvrElement => wvrElement.lazy)\n    .forEach(wvrElement => {\n      Array.from(document.getElementsByTagName(wvrElement.selector))\n        .forEach(element => {\n          if (lazyLoadWeaverElement(element as HTMLElement, selectors)) {\n            const div = document.createElement('div');\n            div.setAttribute('element', wvrElement.selector);\n            const template = document.createElement('template');\n            div.appendChild(template);\n            element.insertAdjacentElement('beforebegin', div);\n            template.content.appendChild(element);\n          }\n        });\n    });\n\n  // define the weaver elements in custom browser element registry\n  wvrElements.forEach(wvrElement => {\n    try {\n      customElements.define(wvrElement.selector, createCustomElement(wvrElement.component, { injector }));\n    } catch (e) {\n      // console.warn(e);\n    }\n  });\n\n  // create observer to detect when wrapped element enters view port\n  const observer = new IntersectionObserver(entries => {\n    entries.map(entry => {\n      // when wrapped element enters view port, unwrap it and remove from observer\n      if (entry.isIntersecting) {\n        observer.unobserve(entry.target);\n        const child = (entry.target.childNodes[0] as HTMLTemplateElement).content.childNodes[0];\n        entry.target.insertAdjacentElement('beforebegin', child as Element);\n        entry.target.parentNode.removeChild(entry.target);\n      }\n    });\n  }, {\n    rootMargin: '0px 0px 5px 0px'\n  });\n\n  wvrTimeout(() => {\n    // add all wrapped weaver elements to observer\n    Array.from(document.querySelectorAll('div[element]'))\n      .forEach(element => {\n        observer.observe(element);\n      });\n  });\n};\n\n/** Show weaver elements. */\nconst showWeaverElements = () => {\n  document.querySelectorAll('.wvr-components-loading:not(body)')\n    .forEach(element => {\n      element.classList.remove('wvr-components-loading');\n    });\n\n  document.querySelectorAll('[wvr-hide-content]')\n    .forEach(elem => {\n      elem.removeAttribute('wvr-hide-content');\n    });\n\n  const body = document.querySelector('body');\n  if (body) {\n    body.classList.remove('wvr-components-loading');\n    body.classList.remove('wvr-hidden');\n  }\n};\n\nexport {\n  obtainConfigPath,\n  registerWeaverElements,\n  showWeaverElements,\n  weaverInit,\n  WvrElementDesc\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WvrManifestEntryComponent.html":{"url":"components/WvrManifestEntryComponent.html","title":"component - WvrManifestEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WvrManifestEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/wvr-elements/src/lib/wvr-manifest/wvr-manifest-entry/wvr-manifest-entry.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.Default\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wvr-manifest-entry-component\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                mappingStrategy\n                            \n                            \n                                methods\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eRef: ElementRef, componentRegistry: ComponentRegistryService)\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/wvr-manifest/wvr-manifest-entry/wvr-manifest-entry.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentRegistry\n                                                  \n                                                        \n                                                                        ComponentRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/wvr-manifest/wvr-manifest-entry/wvr-manifest-entry.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappingStrategy\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/wvr-manifest/wvr-manifest-entry/wvr-manifest-entry.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        methods\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/wvr-manifest/wvr-manifest-entry/wvr-manifest-entry.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/wvr-manifest/wvr-manifest-entry/wvr-manifest-entry.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/wvr-manifest/wvr-manifest-entry/wvr-manifest-entry.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        path\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/wvr-manifest/wvr-manifest-entry/wvr-manifest-entry.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/wvr-manifest/wvr-manifest-entry/wvr-manifest-entry.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WvrManifestComponent\n\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/wvr-manifest/wvr-manifest-entry/wvr-manifest-entry.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ElementRef, Input, OnInit } from '@angular/core';\nimport { ComponentRegistryService } from '../../core/component-registry.service';\nimport { WvrBaseComponent } from '../../shared/wvr-base.component';\nimport { WvrManifestComponent } from '../wvr-manifest.component';\n\n@Component({\n  selector: 'wvr-manifest-entry-component',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class WvrManifestEntryComponent implements OnInit {\n\n  @Input() name;\n\n  @Input() description;\n\n  @Input() methods;\n\n  @Input() path;\n\n  @Input() options;\n\n  @Input() mappingStrategy;\n\n  private parent: WvrManifestComponent;\n\n  constructor(\n    private readonly eRef: ElementRef,\n    private readonly componentRegistry: ComponentRegistryService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    const parentElem = this.eRef.nativeElement.closest('wvre-manifest, wvr-manifest-component');\n    if (parentElem) {\n      this.parent = this.componentRegistry.getComponentByElement(parentElem as HTMLElement) as WvrManifestComponent;\n      this.parent.addEntry(this);\n    } else {\n      console.warn(`WvrManifestEntryComponent ${this.name} is not contained with a WvrManifestComponent`);\n    }\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'WvrAlertComponent', 'selector': 'wvr-alert-component'},{'name': 'WvrButtonComponent', 'selector': 'wvr-button-component'},{'name': 'WvrCardComponent', 'selector': 'wvr-card-component'},{'name': 'WvrColorPreviewComponent', 'selector': 'wvr-color-preview-component'},{'name': 'WvrDropdownComponent', 'selector': 'wvr-dropdown-component'},{'name': 'WvrFooterComponent', 'selector': 'wvr-footer-component'},{'name': 'WvrHeaderComponent', 'selector': 'wvr-header-component'},{'name': 'WvrIconComponent', 'selector': 'wvr-icon-component'},{'name': 'WvrItWorksComponent', 'selector': 'wvr-it-works-component'},{'name': 'WvrListComponent', 'selector': 'wvr-list-component'},{'name': 'WvrListItemComponent', 'selector': 'wvr-list-item-component'},{'name': 'WvrManifestComponent', 'selector': 'wvr-manifest-component'},{'name': 'WvrManifestEntryComponent', 'selector': 'wvr-manifest-entry-component'},{'name': 'WvrMessageManifestComponent', 'selector': 'wvr-message-manifest-component'},{'name': 'WvrMessageManifestEntryComponent', 'selector': 'wvr-message-manifest-entry-component'},{'name': 'WvrModalComponent', 'selector': 'wvr-modal-component'},{'name': 'WvrNavLiComponent', 'selector': 'wvr-nav-li-component'},{'name': 'WvrNavListComponent', 'selector': 'wvr-nav-list-component'},{'name': 'WvrTabsComponent', 'selector': 'wvr-tabs-component'},{'name': 'WvrTextComponent', 'selector': 'wvr-text-component'},{'name': 'WvrThemeComponent', 'selector': 'wvr-theme-component'},{'name': 'WvrWysiwygComponent', 'selector': 'wvr-wysiwyg-component'}];\n    var DIRECTIVES = [{'name': 'WvrBaseComponent', 'selector': ''},{'name': 'WvrContentProjectionDirective', 'selector': '[wvrContentProjection]'}];\n    var ACTUAL_COMPONENT = {'name': 'WvrManifestEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WvrMessageManifestEntryComponent.html":{"url":"components/WvrMessageManifestEntryComponent.html","title":"component - WvrMessageManifestEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WvrMessageManifestEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/wvr-elements/src/lib/wvr-message-manifest/wvr-message-manifest-entry/wvr-message-manifest-entry.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.Default\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wvr-message-manifest-entry-component\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                destination\n                            \n                            \n                                mappingStrategy\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                protocol\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eRef: ElementRef, componentRegistry: ComponentRegistryService)\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/wvr-message-manifest/wvr-message-manifest-entry/wvr-message-manifest-entry.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentRegistry\n                                                  \n                                                        \n                                                                        ComponentRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/wvr-message-manifest/wvr-message-manifest-entry/wvr-message-manifest-entry.component.ts:17\n                            \n                        \n                \n                    \n                        A human description of this manifes.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        destination\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/wvr-message-manifest/wvr-message-manifest-entry/wvr-message-manifest-entry.component.ts:20\n                            \n                        \n                \n                    \n                        The destination to connect to.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mappingStrategy\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/wvr-message-manifest/wvr-message-manifest-entry/wvr-message-manifest-entry.component.ts:29\n                            \n                        \n                \n                    \n                        The strategy to be employed to unwrap response data.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/wvr-message-manifest/wvr-message-manifest-entry/wvr-message-manifest-entry.component.ts:14\n                            \n                        \n                \n                    \n                        The name by which this message manifest entry can be referenced.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/wvr-message-manifest/wvr-message-manifest-entry/wvr-message-manifest-entry.component.ts:26\n                            \n                        \n                \n                    \n                        Additional configuration options.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        protocol\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/wvr-message-manifest/wvr-message-manifest-entry/wvr-message-manifest-entry.component.ts:23\n                            \n                        \n                \n                    \n                        The protocol to use.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/wvr-message-manifest/wvr-message-manifest-entry/wvr-message-manifest-entry.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WvrMessageManifestComponent\n\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/wvr-message-manifest/wvr-message-manifest-entry/wvr-message-manifest-entry.component.ts:32\n                        \n                    \n\n            \n                \n                    A collection of the child WvrMessageManifestEntryComponent.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ElementRef, Input, OnInit } from '@angular/core';\nimport { ComponentRegistryService } from '../../core/component-registry.service';\nimport { WvrBaseComponent } from '../../shared/wvr-base.component';\nimport { WvrMessageManifestComponent } from '../wvr-message-manifest.component';\n\n@Component({\n  selector: 'wvr-message-manifest-entry-component',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class WvrMessageManifestEntryComponent implements OnInit {\n\n  /** The name by which this message manifest entry can be referenced. */\n  @Input() name;\n\n  /** A human description of this manifes. */\n  @Input() description;\n\n  /** The destination to connect to. */\n  @Input() destination;\n\n  /** The protocol to use. */\n  @Input() protocol;\n\n  /** Additional configuration options. */\n  @Input() options;\n\n  /** The strategy to be employed to unwrap response data. */\n  @Input() mappingStrategy;\n\n  /** A collection of the child WvrMessageManifestEntryComponent. */\n  private parent: WvrMessageManifestComponent;\n\n  constructor(\n    private readonly eRef: ElementRef,\n    private readonly componentRegistry: ComponentRegistryService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    const parentElem = this.eRef.nativeElement.closest('wvre-message-manifest, wvr-message-manifest-component');\n    if (parentElem) {\n      this.parent = this.componentRegistry.getComponentByElement(parentElem as HTMLElement) as WvrMessageManifestComponent;\n      this.parent.addEntry(this);\n    } else {\n      console.warn(`WvrMessageManifestEntryComponent ${this.name} is not contained with a WvrMessageManifestComponent`);\n    }\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'WvrAlertComponent', 'selector': 'wvr-alert-component'},{'name': 'WvrButtonComponent', 'selector': 'wvr-button-component'},{'name': 'WvrCardComponent', 'selector': 'wvr-card-component'},{'name': 'WvrColorPreviewComponent', 'selector': 'wvr-color-preview-component'},{'name': 'WvrDropdownComponent', 'selector': 'wvr-dropdown-component'},{'name': 'WvrFooterComponent', 'selector': 'wvr-footer-component'},{'name': 'WvrHeaderComponent', 'selector': 'wvr-header-component'},{'name': 'WvrIconComponent', 'selector': 'wvr-icon-component'},{'name': 'WvrItWorksComponent', 'selector': 'wvr-it-works-component'},{'name': 'WvrListComponent', 'selector': 'wvr-list-component'},{'name': 'WvrListItemComponent', 'selector': 'wvr-list-item-component'},{'name': 'WvrManifestComponent', 'selector': 'wvr-manifest-component'},{'name': 'WvrManifestEntryComponent', 'selector': 'wvr-manifest-entry-component'},{'name': 'WvrMessageManifestComponent', 'selector': 'wvr-message-manifest-component'},{'name': 'WvrMessageManifestEntryComponent', 'selector': 'wvr-message-manifest-entry-component'},{'name': 'WvrModalComponent', 'selector': 'wvr-modal-component'},{'name': 'WvrNavLiComponent', 'selector': 'wvr-nav-li-component'},{'name': 'WvrNavListComponent', 'selector': 'wvr-nav-list-component'},{'name': 'WvrTabsComponent', 'selector': 'wvr-tabs-component'},{'name': 'WvrTextComponent', 'selector': 'wvr-text-component'},{'name': 'WvrThemeComponent', 'selector': 'wvr-theme-component'},{'name': 'WvrWysiwygComponent', 'selector': 'wvr-wysiwyg-component'}];\n    var DIRECTIVES = [{'name': 'WvrBaseComponent', 'selector': ''},{'name': 'WvrContentProjectionDirective', 'selector': '[wvrContentProjection]'}];\n    var ACTUAL_COMPONENT = {'name': 'WvrMessageManifestEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WvrSharedModule.html":{"url":"modules/WvrSharedModule.html","title":"module - WvrSharedModule","body":"\n                   \n\n\n\n\n    Modules\n    WvrSharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WvrSharedModule\n\n\n\ncluster_WvrSharedModule_declarations\n\n\n\ncluster_WvrSharedModule_exports\n\n\n\n\nDefaultPipe\n\nDefaultPipe\n\n\n\nWvrSharedModule\n\nWvrSharedModule\n\nWvrSharedModule -->\n\nDefaultPipe->WvrSharedModule\n\n\n\n\n\nSafePipe\n\nSafePipe\n\nWvrSharedModule -->\n\nSafePipe->WvrSharedModule\n\n\n\n\n\nWvrAlertComponent\n\nWvrAlertComponent\n\nWvrSharedModule -->\n\nWvrAlertComponent->WvrSharedModule\n\n\n\n\n\nWvrButtonComponent\n\nWvrButtonComponent\n\nWvrSharedModule -->\n\nWvrButtonComponent->WvrSharedModule\n\n\n\n\n\nWvrCardComponent\n\nWvrCardComponent\n\nWvrSharedModule -->\n\nWvrCardComponent->WvrSharedModule\n\n\n\n\n\nWvrColorPreviewComponent\n\nWvrColorPreviewComponent\n\nWvrSharedModule -->\n\nWvrColorPreviewComponent->WvrSharedModule\n\n\n\n\n\nWvrContentProjectionDirective\n\nWvrContentProjectionDirective\n\nWvrSharedModule -->\n\nWvrContentProjectionDirective->WvrSharedModule\n\n\n\n\n\nWvrDropdownComponent\n\nWvrDropdownComponent\n\nWvrSharedModule -->\n\nWvrDropdownComponent->WvrSharedModule\n\n\n\n\n\nWvrFooterComponent\n\nWvrFooterComponent\n\nWvrSharedModule -->\n\nWvrFooterComponent->WvrSharedModule\n\n\n\n\n\nWvrHeaderComponent\n\nWvrHeaderComponent\n\nWvrSharedModule -->\n\nWvrHeaderComponent->WvrSharedModule\n\n\n\n\n\nWvrIconComponent\n\nWvrIconComponent\n\nWvrSharedModule -->\n\nWvrIconComponent->WvrSharedModule\n\n\n\n\n\nWvrItWorksComponent\n\nWvrItWorksComponent\n\nWvrSharedModule -->\n\nWvrItWorksComponent->WvrSharedModule\n\n\n\n\n\nWvrListComponent\n\nWvrListComponent\n\nWvrSharedModule -->\n\nWvrListComponent->WvrSharedModule\n\n\n\n\n\nWvrListItemComponent\n\nWvrListItemComponent\n\nWvrSharedModule -->\n\nWvrListItemComponent->WvrSharedModule\n\n\n\n\n\nWvrManifestComponent\n\nWvrManifestComponent\n\nWvrSharedModule -->\n\nWvrManifestComponent->WvrSharedModule\n\n\n\n\n\nWvrManifestEntryComponent\n\nWvrManifestEntryComponent\n\nWvrSharedModule -->\n\nWvrManifestEntryComponent->WvrSharedModule\n\n\n\n\n\nWvrMessageManifestComponent\n\nWvrMessageManifestComponent\n\nWvrSharedModule -->\n\nWvrMessageManifestComponent->WvrSharedModule\n\n\n\n\n\nWvrMessageManifestEntryComponent\n\nWvrMessageManifestEntryComponent\n\nWvrSharedModule -->\n\nWvrMessageManifestEntryComponent->WvrSharedModule\n\n\n\n\n\nWvrModalComponent\n\nWvrModalComponent\n\nWvrSharedModule -->\n\nWvrModalComponent->WvrSharedModule\n\n\n\n\n\nWvrNavLiComponent\n\nWvrNavLiComponent\n\nWvrSharedModule -->\n\nWvrNavLiComponent->WvrSharedModule\n\n\n\n\n\nWvrNavListComponent\n\nWvrNavListComponent\n\nWvrSharedModule -->\n\nWvrNavListComponent->WvrSharedModule\n\n\n\n\n\nWvrTabsComponent\n\nWvrTabsComponent\n\nWvrSharedModule -->\n\nWvrTabsComponent->WvrSharedModule\n\n\n\n\n\nWvrTextComponent\n\nWvrTextComponent\n\nWvrSharedModule -->\n\nWvrTextComponent->WvrSharedModule\n\n\n\n\n\nWvrThemeComponent\n\nWvrThemeComponent\n\nWvrSharedModule -->\n\nWvrThemeComponent->WvrSharedModule\n\n\n\n\n\nWvrWysiwygComponent\n\nWvrWysiwygComponent\n\nWvrSharedModule -->\n\nWvrWysiwygComponent->WvrSharedModule\n\n\n\n\n\nDefaultPipe \n\nDefaultPipe \n\nDefaultPipe  -->\n\nWvrSharedModule->DefaultPipe \n\n\n\n\n\nSafePipe \n\nSafePipe \n\nSafePipe  -->\n\nWvrSharedModule->SafePipe \n\n\n\n\n\nWvrAlertComponent \n\nWvrAlertComponent \n\nWvrAlertComponent  -->\n\nWvrSharedModule->WvrAlertComponent \n\n\n\n\n\nWvrButtonComponent \n\nWvrButtonComponent \n\nWvrButtonComponent  -->\n\nWvrSharedModule->WvrButtonComponent \n\n\n\n\n\nWvrCardComponent \n\nWvrCardComponent \n\nWvrCardComponent  -->\n\nWvrSharedModule->WvrCardComponent \n\n\n\n\n\nWvrColorPreviewComponent \n\nWvrColorPreviewComponent \n\nWvrColorPreviewComponent  -->\n\nWvrSharedModule->WvrColorPreviewComponent \n\n\n\n\n\nWvrContentProjectionDirective \n\nWvrContentProjectionDirective \n\nWvrContentProjectionDirective  -->\n\nWvrSharedModule->WvrContentProjectionDirective \n\n\n\n\n\nWvrDropdownComponent \n\nWvrDropdownComponent \n\nWvrDropdownComponent  -->\n\nWvrSharedModule->WvrDropdownComponent \n\n\n\n\n\nWvrFooterComponent \n\nWvrFooterComponent \n\nWvrFooterComponent  -->\n\nWvrSharedModule->WvrFooterComponent \n\n\n\n\n\nWvrHeaderComponent \n\nWvrHeaderComponent \n\nWvrHeaderComponent  -->\n\nWvrSharedModule->WvrHeaderComponent \n\n\n\n\n\nWvrIconComponent \n\nWvrIconComponent \n\nWvrIconComponent  -->\n\nWvrSharedModule->WvrIconComponent \n\n\n\n\n\nWvrItWorksComponent \n\nWvrItWorksComponent \n\nWvrItWorksComponent  -->\n\nWvrSharedModule->WvrItWorksComponent \n\n\n\n\n\nWvrListComponent \n\nWvrListComponent \n\nWvrListComponent  -->\n\nWvrSharedModule->WvrListComponent \n\n\n\n\n\nWvrListItemComponent \n\nWvrListItemComponent \n\nWvrListItemComponent  -->\n\nWvrSharedModule->WvrListItemComponent \n\n\n\n\n\nWvrManifestComponent \n\nWvrManifestComponent \n\nWvrManifestComponent  -->\n\nWvrSharedModule->WvrManifestComponent \n\n\n\n\n\nWvrManifestEntryComponent \n\nWvrManifestEntryComponent \n\nWvrManifestEntryComponent  -->\n\nWvrSharedModule->WvrManifestEntryComponent \n\n\n\n\n\nWvrMessageManifestComponent \n\nWvrMessageManifestComponent \n\nWvrMessageManifestComponent  -->\n\nWvrSharedModule->WvrMessageManifestComponent \n\n\n\n\n\nWvrMessageManifestEntryComponent \n\nWvrMessageManifestEntryComponent \n\nWvrMessageManifestEntryComponent  -->\n\nWvrSharedModule->WvrMessageManifestEntryComponent \n\n\n\n\n\nWvrModalComponent \n\nWvrModalComponent \n\nWvrModalComponent  -->\n\nWvrSharedModule->WvrModalComponent \n\n\n\n\n\nWvrNavLiComponent \n\nWvrNavLiComponent \n\nWvrNavLiComponent  -->\n\nWvrSharedModule->WvrNavLiComponent \n\n\n\n\n\nWvrNavListComponent \n\nWvrNavListComponent \n\nWvrNavListComponent  -->\n\nWvrSharedModule->WvrNavListComponent \n\n\n\n\n\nWvrTabsComponent \n\nWvrTabsComponent \n\nWvrTabsComponent  -->\n\nWvrSharedModule->WvrTabsComponent \n\n\n\n\n\nWvrTextComponent \n\nWvrTextComponent \n\nWvrTextComponent  -->\n\nWvrSharedModule->WvrTextComponent \n\n\n\n\n\nWvrThemeComponent \n\nWvrThemeComponent \n\nWvrThemeComponent  -->\n\nWvrSharedModule->WvrThemeComponent \n\n\n\n\n\nWvrWysiwygComponent \n\nWvrWysiwygComponent \n\nWvrWysiwygComponent  -->\n\nWvrSharedModule->WvrWysiwygComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/shared/wvr-shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DefaultPipe\n                        \n                        \n                            SafePipe\n                        \n                        \n                            WvrAlertComponent\n                        \n                        \n                            WvrButtonComponent\n                        \n                        \n                            WvrCardComponent\n                        \n                        \n                            WvrColorPreviewComponent\n                        \n                        \n                            WvrContentProjectionDirective\n                        \n                        \n                            WvrDropdownComponent\n                        \n                        \n                            WvrFooterComponent\n                        \n                        \n                            WvrHeaderComponent\n                        \n                        \n                            WvrIconComponent\n                        \n                        \n                            WvrItWorksComponent\n                        \n                        \n                            WvrListComponent\n                        \n                        \n                            WvrListItemComponent\n                        \n                        \n                            WvrManifestComponent\n                        \n                        \n                            WvrManifestEntryComponent\n                        \n                        \n                            WvrMessageManifestComponent\n                        \n                        \n                            WvrMessageManifestEntryComponent\n                        \n                        \n                            WvrModalComponent\n                        \n                        \n                            WvrNavLiComponent\n                        \n                        \n                            WvrNavListComponent\n                        \n                        \n                            WvrTabsComponent\n                        \n                        \n                            WvrTextComponent\n                        \n                        \n                            WvrThemeComponent\n                        \n                        \n                            WvrWysiwygComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DefaultPipe\n                        \n                        \n                            SafePipe\n                        \n                        \n                            WvrAlertComponent\n                        \n                        \n                            WvrButtonComponent\n                        \n                        \n                            WvrCardComponent\n                        \n                        \n                            WvrColorPreviewComponent\n                        \n                        \n                            WvrContentProjectionDirective\n                        \n                        \n                            WvrDropdownComponent\n                        \n                        \n                            WvrFooterComponent\n                        \n                        \n                            WvrHeaderComponent\n                        \n                        \n                            WvrIconComponent\n                        \n                        \n                            WvrItWorksComponent\n                        \n                        \n                            WvrListComponent\n                        \n                        \n                            WvrListItemComponent\n                        \n                        \n                            WvrManifestComponent\n                        \n                        \n                            WvrManifestEntryComponent\n                        \n                        \n                            WvrMessageManifestComponent\n                        \n                        \n                            WvrMessageManifestEntryComponent\n                        \n                        \n                            WvrModalComponent\n                        \n                        \n                            WvrNavLiComponent\n                        \n                        \n                            WvrNavListComponent\n                        \n                        \n                            WvrTabsComponent\n                        \n                        \n                            WvrTextComponent\n                        \n                        \n                            WvrThemeComponent\n                        \n                        \n                            WvrWysiwygComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbDropdownModule, NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { WvrAlertComponent } from '../wvr-alert/wvr-alert.component';\nimport { WvrButtonComponent } from '../wvr-button/wvr-button.component';\nimport { WvrCardComponent } from '../wvr-card/wvr-card.component';\nimport { WvrColorPreviewComponent } from '../wvr-color-preview/wvr-color-preview.component';\nimport { WvrDropdownComponent } from '../wvr-dropdown/wvr-dropdown.component';\nimport { WvrFooterComponent } from '../wvr-footer/wvr-footer.component';\nimport { WvrHeaderComponent } from '../wvr-header/wvr-header.component';\nimport { WvrIconComponent } from '../wvr-icon/wvr-icon.component';\nimport { WvrItWorksComponent } from '../wvr-it-works/wvr-it-works.component';\nimport { WvrListItemComponent } from '../wvr-list/wvr-list-item/wvr-list-item.component';\nimport { WvrListComponent } from '../wvr-list/wvr-list.component';\nimport { WvrManifestEntryComponent } from '../wvr-manifest/wvr-manifest-entry/wvr-manifest-entry.component';\nimport { WvrManifestComponent } from '../wvr-manifest/wvr-manifest.component';\nimport { WvrMessageManifestEntryComponent } from '../wvr-message-manifest/wvr-message-manifest-entry/wvr-message-manifest-entry.component';\nimport { WvrMessageManifestComponent } from '../wvr-message-manifest/wvr-message-manifest.component';\nimport { WvrModalComponent } from '../wvr-modal/wvr-modal.component';\nimport { WvrNavLiComponent } from '../wvr-nav-list/wvr-nav-li/wvr-nav-li.component';\nimport { WvrNavListComponent } from '../wvr-nav-list/wvr-nav-list.component';\nimport { WvrTabsComponent } from '../wvr-tabs/wvr-tabs.component';\nimport { WvrTextComponent } from '../wvr-text/wvr-text.component';\nimport { WvrThemeComponent } from '../wvr-theme/wvr-theme.component';\nimport { WvrWysiwygComponent } from '../wvr-wysiwyg/wvr-wysiwyg.component';\nimport { WvrContentProjectionDirective } from './directives/wvr-content-projection.directive';\nimport { DefaultPipe } from './pipes/default.pipe';\nimport { SafePipe } from './pipes/safe.pipe';\n\n/** This property contains a list of components classes. */\nexport const WVR_COMPONENTS = [\n  WvrAlertComponent,\n  WvrButtonComponent,\n  WvrCardComponent,\n  WvrColorPreviewComponent,\n  WvrContentProjectionDirective,\n  WvrDropdownComponent,\n  WvrFooterComponent,\n  WvrHeaderComponent,\n  WvrIconComponent,\n  WvrItWorksComponent,\n  WvrListComponent,\n  WvrListItemComponent,\n  WvrManifestComponent,\n  WvrManifestEntryComponent,\n  WvrMessageManifestComponent,\n  WvrMessageManifestEntryComponent,\n  WvrModalComponent,\n  WvrNavLiComponent,\n  WvrNavListComponent,\n  WvrTabsComponent,\n  WvrTextComponent,\n  WvrThemeComponent,\n  WvrWysiwygComponent\n];\n\nexport const WVR_PIPES = [\n  SafePipe,\n  DefaultPipe\n];\n\nconst MODULES = [\n  CommonModule,\n  EditorModule,\n  FormsModule,\n  NgbDropdownModule,\n  NgbModalModule,\n  ReactiveFormsModule\n];\n\n@NgModule({\n  imports: [\n    ...MODULES\n  ],\n  exports: [\n    ...WVR_COMPONENTS,\n    ...WVR_PIPES\n  ],\n  declarations: [\n    ...WVR_COMPONENTS,\n    ...WVR_PIPES\n  ],\n  providers: [],\n  entryComponents: [],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class WvrSharedModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WvrThemeComponent.html":{"url":"components/WvrThemeComponent.html","title":"component - WvrThemeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WvrThemeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/wvr-elements/src/lib/wvr-theme/wvr-theme.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.Default\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wvr-theme-component\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _variants\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                name\n                            \n                            \n                                variants\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    variants\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in projects/wvr-elements/src/lib/wvr-theme/wvr-theme.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/wvr-theme/wvr-theme.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/wvr-theme/wvr-theme.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        variants\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/wvr-elements/src/lib/wvr-theme/wvr-theme.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/wvr-theme/wvr-theme.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _variants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThemeVariants\n\n                    \n                \n                    \n                        \n                                Defined in projects/wvr-elements/src/lib/wvr-theme/wvr-theme.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        variants\n                    \n                \n\n\n                \n                    \n                        setvariants(value: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/wvr-elements/src/lib/wvr-theme/wvr-theme.component.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as JSON5 from 'json5';\nimport { RootState } from '../core/store';\nimport * as ThemeActions from '../core/theme/theme.actions';\nimport { ThemeVariants } from '../shared/theme';\n\n@Component({\n  selector: 'wvr-theme-component',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class WvrThemeComponent implements OnChanges {\n\n  private _variants: ThemeVariants;\n\n  // tslint:disable-next-line: prefer-readonly\n  @Input() private name: string;\n\n  // tslint:disable-next-line: prefer-readonly\n  @Input() private active = false;\n\n  // tslint:disable-next-line: prefer-readonly\n  @Input() set variants(value: string) {\n    this._variants = JSON5.parse(value);\n  }\n\n  constructor(private readonly store: Store) {\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.name && this._variants) {\n      this.store.dispatch(ThemeActions.add({\n        name: this.name,\n        theme: this._variants\n      }));\n    }\n\n    if (this.name && this.active) {\n      this.store.dispatch(ThemeActions.select({\n        name: this.name\n      }));\n    }\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'WvrAlertComponent', 'selector': 'wvr-alert-component'},{'name': 'WvrButtonComponent', 'selector': 'wvr-button-component'},{'name': 'WvrCardComponent', 'selector': 'wvr-card-component'},{'name': 'WvrColorPreviewComponent', 'selector': 'wvr-color-preview-component'},{'name': 'WvrDropdownComponent', 'selector': 'wvr-dropdown-component'},{'name': 'WvrFooterComponent', 'selector': 'wvr-footer-component'},{'name': 'WvrHeaderComponent', 'selector': 'wvr-header-component'},{'name': 'WvrIconComponent', 'selector': 'wvr-icon-component'},{'name': 'WvrItWorksComponent', 'selector': 'wvr-it-works-component'},{'name': 'WvrListComponent', 'selector': 'wvr-list-component'},{'name': 'WvrListItemComponent', 'selector': 'wvr-list-item-component'},{'name': 'WvrManifestComponent', 'selector': 'wvr-manifest-component'},{'name': 'WvrManifestEntryComponent', 'selector': 'wvr-manifest-entry-component'},{'name': 'WvrMessageManifestComponent', 'selector': 'wvr-message-manifest-component'},{'name': 'WvrMessageManifestEntryComponent', 'selector': 'wvr-message-manifest-entry-component'},{'name': 'WvrModalComponent', 'selector': 'wvr-modal-component'},{'name': 'WvrNavLiComponent', 'selector': 'wvr-nav-li-component'},{'name': 'WvrNavListComponent', 'selector': 'wvr-nav-list-component'},{'name': 'WvrTabsComponent', 'selector': 'wvr-tabs-component'},{'name': 'WvrTextComponent', 'selector': 'wvr-text-component'},{'name': 'WvrThemeComponent', 'selector': 'wvr-theme-component'},{'name': 'WvrWysiwygComponent', 'selector': 'wvr-wysiwyg-component'}];\n    var DIRECTIVES = [{'name': 'WvrBaseComponent', 'selector': ''},{'name': 'WvrContentProjectionDirective', 'selector': '[wvrContentProjection]'}];\n    var ACTUAL_COMPONENT = {'name': 'WvrThemeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WvrThemeableComponent.html":{"url":"interfaces/WvrThemeableComponent.html","title":"interface - WvrThemeableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WvrThemeableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/shared/wvr-themeable.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            eRef\n                                        \n                                \n                                \n                                        \n                                            style\n                                        \n                                \n                                \n                                        \n                                            themeOverrides\n                                        \n                                \n                                \n                                        \n                                            variantTypes\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        applyThemeOverride\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyThemeOverride\n                        \n                    \n                \n            \n            \n                \napplyThemeOverride(customProperty: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/wvr-elements/src/lib/shared/wvr-themeable.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    customProperty\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eRef:     ElementRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ElementRef\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:         SafeStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeStyle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themeOverrides\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        themeOverrides:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variantTypes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variantTypes:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ElementRef } from '@angular/core';\nimport { SafeStyle } from '@angular/platform-browser';\n\nexport type variantType = 'alert' | 'badge' | 'border' | 'button' | 'list-group-item' | 'table' | 'default';\n\nexport interface WvrThemeableComponent {\n  style: SafeStyle;\n  themeOverrides: { [key: string]: string };\n  readonly variantTypes: Array;\n  readonly eRef: ElementRef;\n\n  applyThemeOverride(customProperty: string, value: string): void;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WvrWysiwygMenu.html":{"url":"interfaces/WvrWysiwygMenu.html","title":"interface - WvrWysiwygMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WvrWysiwygMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/wvr-wysiwyg/wvr-wysiwyg-menu.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            edit\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            help\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            insert\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            table\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tools\n                                        \n                                \n                                \n                                        \n                                            view\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        edit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edit:         WvrwysiwygSubMenu\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WvrwysiwygSubMenu\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         WvrwysiwygSubMenu\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WvrwysiwygSubMenu\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         WvrwysiwygSubMenu\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WvrwysiwygSubMenu\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        help\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        help:         WvrwysiwygSubMenu\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WvrwysiwygSubMenu\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insert\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        insert:         WvrwysiwygSubMenu\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WvrwysiwygSubMenu\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        table\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        table:         WvrwysiwygSubMenu\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WvrwysiwygSubMenu\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tools\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tools:         WvrwysiwygSubMenu\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WvrwysiwygSubMenu\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        view\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        view:         WvrwysiwygSubMenu\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WvrwysiwygSubMenu\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { WvrwysiwygSubMenu } from './wvr-wysiwyg-sub-menu';\n\nexport interface WvrWysiwygMenu {\n  file: WvrwysiwygSubMenu;\n  edit: WvrwysiwygSubMenu;\n  view: WvrwysiwygSubMenu;\n  insert?: WvrwysiwygSubMenu;\n  format?: WvrwysiwygSubMenu;\n  tools?: WvrwysiwygSubMenu;\n  table?: WvrwysiwygSubMenu;\n  help?: WvrwysiwygSubMenu;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WvrwysiwygSubMenu.html":{"url":"interfaces/WvrwysiwygSubMenu.html","title":"interface - WvrwysiwygSubMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WvrwysiwygSubMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/wvr-wysiwyg/wvr-wysiwyg-sub-menu.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WvrwysiwygSubMenu {\n  title: string;\n  items: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Wysiwyg.html":{"url":"interfaces/Wysiwyg.html","title":"interface - Wysiwyg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Wysiwyg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/wysiwyg/wysiwyg.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            initialContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Wysiwyg {\n  id: string;\n  initialContent: string;\n  content: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WysiwygEffects.html":{"url":"injectables/WysiwygEffects.html","title":"injectable - WysiwygEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WysiwygEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/wvr-elements/src/lib/core/wysiwyg/wysiwyg.effects.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class WysiwygEffects {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n[2.0.5-rc.2] - 09-13-24\nResolves\n\nDowngrading Angular dependencies to 12.2.16 to fix npm build.\nAdded \"cheerio\": \"1.0.0-rc.10\" to resolve issues with the compodocs command not running correctly.\nAdded \"typescript\": \">=4.2.3  to fix npm build.\nAdded \"whatwg-mimetype\": \"^3.0.0\" to fix npm build.\n\n[2.0.5-rc.1] - 12-02-22\nResolves\n\nWYSIWYG save is not working. (#516)\n\n[2.0.4] - 11-15-22\nResolves\n\nRemove the \"upgrade\" button from the tinymce editor. (#512)\nLocked the node version to 16. (#515)\n\n[2.0.3] - 10-12-22\nResolves\n\nFix bad error handling and reporting wvr-button. (#504)\nFooter Becoming Sticky when it should not. (#503)\nRemove ng-inline-svg as it is no longer maintained. (#502)\nRedesign dependency list, reducing dependencies where possible. (#507)\nFixed tabs to no longer need a wrapping div to display content. (#505)\n\n[2.0.2] - 09-19-22\nResolves\n\nNormal mouse clicks do not work for certain designs with drop-down menus following the 2.0.1 release.\n\n[2.0.1] - 09-15-22\nResolves\n\nLocal npm via Verdaccio and SASS Migrator. (#472)\nThe mobile menu slide out tray continues to allow links to be clicked on when closed. (#474)\nAvoid replaceChild() and restructure projection function. (#479)\nCollapsible Card is not completely collapsible. (#483)\nDirectory UI - bottom-nav items (left most) is seen to have shifted left. (#482)\nAdd in-code documentation for the README.md. (#484)\nBuild components with Node 16 or greater. (TAMULib/tamu-library-components#429)\nUpdate deprecated karma coverage package. (#306)\nADA - Buttons missing label and expand/collapse notification. (TAMULib/tamu-library-components#423)\nIssue 4: Focus indicator missing. (TAMULib/tamu-library-components#425)\n\n[2.0.0] - 10-29-21\nResolves\n\nWeaver Components should have a consistent content projection strategy. (#236)\nConvert wvre-tab to pseudo element. (#308)\nCard component needs redesign to avoid local state from DOM inspection. (#387)\nWeaver Components should expose the manifest entry request through its public api. (#405)\nExtract CSS to avoid the removal of deprecated style strategy. (#408)\nWeaver Tabs should utilize the new content projection strategy. (#410)\nWeaver Components Card Component should utilize the content projection strategy. (#414)\nWeaver Components dropdown should utilize common content projection to afford two-way binding. (#417)\nWeaver Components should support two way binding to angularjs scope. (#421)\nWeaver Components should delay bootstrapping until a specified condition has been met. (#425)\nWeaver Components Memory and Performance Concerns. (#428)\nWeaver Components should compile using the ivy partial compiler option. (#430)\nMemory Leak And Performance degradation when components is left open. After about 2 hours Gigibytes of memory in use. (#438)\nIncorrect boolean logic in dequeue and inadequate tests (#442)\nThe tabs component should support theming (#348)\nIncorrect manifest entries are being updated in Manifest. (#439)\nThe tabs component should support theming (#348)\nIncorrect manifest entries are being updated in Manifest. (#439)\nWeaver Card hardcodes width as a style. (#451)\nWeaver Components should provide a Message Receiver Component (#407)\nWeaver Card Should Support Expand/Collapse on Card Header click. (#445)\n\n[1.12.0] - 06-04-21\nResolves\n\nThe mobile service should use the ngrx store to maintain state. (#333)\nWeaver Components should use an alternate mechanism to display: none when components are ready (#363)\nWeaver Components should use Ngrx to to maintain state. (#364)\nWeaver Components should build without warnings (#365)\nRefactor Template Service to Template Utility (#379)\nRefactor to pure pipes (#380)\nRemove isMobileAgent from base component (#381)\nRefactor mobile store to layout store (#382)\nAfford input text color on text component (#388)\nColors in color utility should be brought in via JSON (#390)\nWeaver Components Manifest should support path variables (#398)\n\n[1.11.1] - 05-19-21\nResolves\n\nWeaver Components should use an alternate mechanism to display: none when components are ready (#363)\n\n[1.11.0] - 05-12-21\nResolves\n\nThe weaver modal bg should be displayed (and NOT flicker). (#328)\nWeaver modal only opens when a single modal is used. (#346)\nWeaver components should offer a default theme group (modeled after btn). (#347)\nThe Card Component should support theming. (#350)\nLighthouse build failing for weaver components. (#356)\n\n[1.10.0] - 04-23-21\nResolves\n\nWeaver Modal button should be toggle-able. (#329 )\nWVRWYSIWYG is not appearing in the usage documentation. (#330 )\nWVR Theme Variants should be expanded to include all needed variant names. (#334)\nWeaver Component's Modal Component should utilize the wvr-button-component intead of the wvre-button. ( #341)\nWeaver component should provide additional theme variants. ( #342)\nWeaver drop down menu should have a delay on hover prior to displaying the dropdown menu. ( #344)\n\n[1.9.0] - 03-31-21\nResolves\n\nWeaver Components should provide a modal component. (#314)\nWeaver Components should offer a WYSIWYG component. (#315)\nWeaver Button should be able to trigger actions on a parent component. (#319)\nWeaver WYSIWYG should maintain state using NgRX (#322)\n\n[1.8.0] - 12-18-20\nResolves\n\nWeaver Components should utilize externals to reduce bundle size. (#158)\nRemove scss, rendered unnecessary by the recent theme features. (#276)\n\n[1.7.4] - 12-15-20\nResolves\n\nPatch icon bug\n\n[1.7.3] - 12-15-20\nResolves\n\nFixed SVG styling and performance.\n\n[1.7.2] - 12-14-20\nResolves\n\nPerformance improvements\n\n[1.7.1] - 11-20-20\nResolves\n\nFixes bootstrapping process.\n\n[1.7.0] - 11-20-20\nResolves\n\nWvr animations have regressed and are no longer firing. (#256)\nSetTimeouts are not performant at load time. (#257)\nWeaver Usage Documentation should include the component template in tab list. (#260)\nWvr Components should support an extensible list of branded colors. (Primary, secondary, danger, warning... etc). (#262)\nRefactor color usage across wvr components to use branded color list, and include fallback support. (#263)\nColor preview component. (#264)\n\n[1.6.0] - 11-2-20\nResolves\n\nWeaver component's build process should build multiple versions of the product. (#86)\nWeaver Usage Docs should be converted into an angular project. (#102)\nThe wvr manifest action to submit request should afford providing response map. (#223)\nHandlebars should be extracted into a service and all helpers declared outside of the component constructor. (#232)\nOn safari (check firefox) mobile display does not run the position footer function at load time. (#233)\nWeaver components should provide a wvr-cards component. (#234)\nWeaver Component selectors need to be refactored to avoid name collision with Weaver (angularjs) directives. (#237)\nThe wvr-header should use the configured asset path for the header logo. (#255)\n\n[1.5.0] - 10-8-20\nResolves\n\nWeaver Components should communicate with Weaver web services. (#195)\nWeaver Lists should automatically assign aria owns attribute for each of its list items. (#206)\nWeaver Components should provide an Alert Component. (#207)\nWeaver Components should dynamically assign unique identifiers to each component. (#208)\nExplore ngRX as a state store solution for components. (#209)\nWeaver Components should offer a tabs component. (#210)\n\n[1.4.0] - 9-23-20\nResolves\n\nEncapsulates bootstrap within global styling\nPerformance improvements \nIntroduces Mobile Service\nThe list item context attr should override the visual context of the list item. (#199)\n\n[1.3.0] - 08-13-20\nResolves\n\nWeaver Components should have an element query strategy. (#27)\nIcons should be integrated into weaver buttons. (#128)\nWeaver Components should support lists with expanding and collapsing sections. (#163)\nThe Wvr Icon component should support animation. (#164)\nWeaver Components should have a list component. (#165)\nCoveralls not providing the coverage notification. (#167)\nObservable subscriptions should be unsubscribed from or converted to promises. (#168)\n\n[1.2.0] - 07-16-20\nResolves\n\nWeaver Component should support a global configuration paradigm. (#64)\nWeaver Components should share vendor styling across components. (#82)\nWeaver Components should support multiple font icon libraries. (#85)\nButtons must be integrated into weaver drop-down. (#129)\nWeaver footer \"stick-to-bottom\" property affected by wvr-button line-height and padding property. (#150)\n\n[1.1.0] - 06-25-20\nResolves\n\nWvr Components should provide a wvr-button component (#103)\nCDN needs to be exposed through the firewall (#135)\nFix Z-Index on dropdown overlaps (#133)\nRestore dynamic change detection for display of bottom nav (#136)\nDropdown inside of List inside of Header flickers instead of staying open (#119)\n\n[1.0.0] - 06-11-20\nResolves\n\nThe wvr-header should support mobile and tablet layouts (#7)\nWeaver Components should have CI hooks for lighthouse (#105)\nwvr-component should have attribute: page-title-url (#116)\nWeaver Drop down component selector should be renamed (#125)\n\n[0.0.5] - 05-14-2020\nResolves\n\nThe wvr-header should support accessible designs (#8)\nWeaver Components should provide a drop down element (#20)\nThe wvr-header component's bottom-nav section should display conditionally (#81)\nWeaver components usage documentation fails to build (#83)\nWeaver documentation landing page is broken (#84)\nwvr-footer's navbar should be have a height of 100% (#89)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 12.2.17\n        \n            @angular/elements : 12.2.17\n        \n            @angular/forms : 12.2.17\n        \n            @angular/localize : 12.2.17\n        \n            @angular/platform-browser-dynamic : 12.2.17\n        \n            @ng-bootstrap/ng-bootstrap : 10.0.0\n        \n            @ngrx/effects : 12.5.1\n        \n            @ngrx/entity : 12.5.1\n        \n            @ngrx/store-devtools : 12.5.1\n        \n            @stomp/stompjs : 6.1.2\n        \n            @tinymce/tinymce-angular : 4.2.4\n        \n            bootstrap : 4.6.2\n        \n            handlebars : 4.7.7\n        \n            sockjs-client : 1.6.1\n        \n            tinymce : 6.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Alignment   (projects/.../alignment.enum.ts)\n                        \n                        \n                            ConnectionStatus   (projects/.../message-manifest.reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/wvr-elements/src/lib/shared/alignment.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Alignment\n                    \n                \n                    \n                        \n                            This defines a set of constants used by the wvre-nav-list component in order to describe the position of the navigation list .\n\n                        \n                    \n                        \n                            \n                                 LEFT\n                            \n                        \n                        \n                            \n                                Value : LEFT\n                            \n                        \n                        \n                            \n                                 RIGHT\n                            \n                        \n                        \n                            \n                                Value : RIGHT\n                            \n                        \n                        \n                            \n                                 CENTER\n                            \n                        \n                        \n                            \n                                Value : CENTER\n                            \n                        \n            \n        \n\n    projects/wvr-elements/src/lib/core/message-manifest/message-manifest.reducers.ts\n    \n        \n            \n                \n                    \n                        \n                        ConnectionStatus\n                    \n                \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                Value : CONNECTED\n                            \n                        \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                Value : CONNECTING\n                            \n                        \n                        \n                            \n                                 DISCONNECTED\n                            \n                        \n                        \n                            \n                                Value : DISCONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n                        \n                            \n                                Value : DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            debounce   (projects/.../decorators.utility.ts)\n                        \n                        \n                            reducer   (projects/.../manifest.reducers.ts)\n                        \n                        \n                            reducer   (projects/.../message-manifest.reducers.ts)\n                        \n                        \n                            selectManifestByName   (projects/.../manifest.reducers.ts)\n                        \n                        \n                            selectManifestByName   (projects/.../message-manifest.reducers.ts)\n                        \n                        \n                            selectModalByName   (projects/.../modal.reducers.ts)\n                        \n                        \n                            selectWysiwygById   (projects/.../wysiwyg.reducers.ts)\n                        \n                        \n                            WvrSelect   (projects/.../decorators.utility.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/wvr-elements/src/lib/shared/utility/decorators.utility.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        debounce\n                        \n                    \n                \n            \n            \n                \ndebounce(delay: number)\n                \n            \n\n\n\n\n            \n                \n                    Used to delay the repeated execution of the decorated method until the specified time has elapsed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    delay\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        300\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MethodDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WvrSelect\n                        \n                    \n                \n            \n            \n                \nWvrSelect(option: SelectOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                SelectOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/wvr-elements/src/lib/core/manifest/manifest.reducers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action: Action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                            Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectManifestByName\n                        \n                    \n                \n            \n            \n                \nselectManifestByName(manifest: Manifest)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manifest\n                                    \n                                                Manifest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/wvr-elements/src/lib/core/message-manifest/message-manifest.reducers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action: Action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                            Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectManifestByName\n                        \n                    \n                \n            \n            \n                \nselectManifestByName(manifest: MessageManifest)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manifest\n                                    \n                                                MessageManifest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/wvr-elements/src/lib/core/modal/modal.reducers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectModalByName\n                        \n                    \n                \n            \n            \n                \nselectModalByName(modal: Modal)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modal\n                                    \n                                                Modal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/wvr-elements/src/lib/core/wysiwyg/wysiwyg.reducers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectWysiwygById\n                        \n                    \n                \n            \n            \n                \nselectWysiwygById(wysiwyg: Wysiwyg)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    wysiwyg\n                                    \n                                                Wysiwyg\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n \n\n\n\n\n\nWeaver Components\nWeaver Components provides a collection of custom HTML elements that represent a toolkit of dynamically renderred HTML markup, CSS Styles, and effects. This toolkit may be made available to a given project either via a CDN URL, directly attached as a Javascript file and CSS file, or via a project dependency. Such elements may be dropped directly onto a page utilizing Weaver Components and they will be immediately renderred as appropriate.\nInstallation\nWeaver Components may be installed by either referencing a CDN or by using NpmJs.\nInstallation via NpmJs\nThe latest pre-built package may be found in the Weaver Elements NpmJs Repository.\nUsing the npm command (from NpmJs), install this project as a dependency to an existing project:\nnpm install @wvr/elementsInstallation via CDN\nThe files weaver-components.js and styles.css need to be available on some server.\nSee the Building section below for details on how to build these files.\nThe CSS file should be added as an HTML  element to the HTML  element, such as:\n\n  \n    \n  \nThe Javascript file should be added an HTML  element to the HTML  element at the very end, such as:\n\n  \n    ...\n    \n  \nBuilding\nTo build this project use the npm command (from NpmJs).\nThis project can be built to run locally for development purposes be built to get the weaver-components.js and styles.css files needed to run on a CDN.\nMore detailed documentation about the build process may be found via the referenced links in the Documentation section below.\nBuilding the weaver-components.js and the styles.css\nThe weaver-components.js and the styles.css files are needed if intending to utilize this project via a CDN.\nThese files are built using the build command from within the project root directory:\n  cd weaver-components\n  npm run buildOnce this has successfully completed the weaver-components.js and styles.css files should be located under the dist/bundle/ sub-directory:\n  dist/bundle/styles.css\n  dist/bundle/weaver-components.jsBuilding for a NpmJs Package\nBuilding this for a NpmJs Package is the same as building this for a CDN.\nThese files are built using the build command from within the project root directory:\n  cd weaver-components\n  npm run buildOnce notable difference is that for those who want to develop against changes to this project, the publish:npm-local can be used as well.\nThis process requires starting a Verdaccio service, of which is provided by the start:npm-local command.\nFor further details, visit the links referenced in the detailed documentation below.\nDocumentation\nDetailed documentation may be found:\n\nUsage Documentation\nDevelopment Documentation\nWiki\n\nDetailed reports may be found:\n\nAudit\nCoverage\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Texas A&M University Libraries\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        WvrCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WvrSharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WvrCoreModule\n\n\n\ncluster_WvrCoreModule_providers\n\n\n\ncluster_WvrSharedModule\n\n\n\ncluster_WvrSharedModule_declarations\n\n\n\ncluster_WvrSharedModule_exports\n\n\n\n\nActionRegistryService\n\nActionRegistryService\n\n\n\nWvrCoreModule\n\nWvrCoreModule\n\nWvrCoreModule -->\n\nActionRegistryService->WvrCoreModule\n\n\n\n\n\nAnimationService\n\nAnimationService\n\nWvrCoreModule -->\n\nAnimationService->WvrCoreModule\n\n\n\n\n\nComponentRegistryService\n\nComponentRegistryService\n\nWvrCoreModule -->\n\nComponentRegistryService->WvrCoreModule\n\n\n\n\n\nNgBindingsService\n\nNgBindingsService\n\nWvrCoreModule -->\n\nNgBindingsService->WvrCoreModule\n\n\n\n\n\nThemeService\n\nThemeService\n\nWvrCoreModule -->\n\nThemeService->WvrCoreModule\n\n\n\n\n\nDefaultPipe\n\nDefaultPipe\n\n\n\nWvrSharedModule\n\nWvrSharedModule\n\nWvrSharedModule -->\n\nDefaultPipe->WvrSharedModule\n\n\n\n\n\nSafePipe\n\nSafePipe\n\nWvrSharedModule -->\n\nSafePipe->WvrSharedModule\n\n\n\n\n\nWvrAlertComponent\n\nWvrAlertComponent\n\nWvrSharedModule -->\n\nWvrAlertComponent->WvrSharedModule\n\n\n\n\n\nWvrButtonComponent\n\nWvrButtonComponent\n\nWvrSharedModule -->\n\nWvrButtonComponent->WvrSharedModule\n\n\n\n\n\nWvrCardComponent\n\nWvrCardComponent\n\nWvrSharedModule -->\n\nWvrCardComponent->WvrSharedModule\n\n\n\n\n\nWvrColorPreviewComponent\n\nWvrColorPreviewComponent\n\nWvrSharedModule -->\n\nWvrColorPreviewComponent->WvrSharedModule\n\n\n\n\n\nWvrContentProjectionDirective\n\nWvrContentProjectionDirective\n\nWvrSharedModule -->\n\nWvrContentProjectionDirective->WvrSharedModule\n\n\n\n\n\nWvrDropdownComponent\n\nWvrDropdownComponent\n\nWvrSharedModule -->\n\nWvrDropdownComponent->WvrSharedModule\n\n\n\n\n\nWvrFooterComponent\n\nWvrFooterComponent\n\nWvrSharedModule -->\n\nWvrFooterComponent->WvrSharedModule\n\n\n\n\n\nWvrHeaderComponent\n\nWvrHeaderComponent\n\nWvrSharedModule -->\n\nWvrHeaderComponent->WvrSharedModule\n\n\n\n\n\nWvrIconComponent\n\nWvrIconComponent\n\nWvrSharedModule -->\n\nWvrIconComponent->WvrSharedModule\n\n\n\n\n\nWvrItWorksComponent\n\nWvrItWorksComponent\n\nWvrSharedModule -->\n\nWvrItWorksComponent->WvrSharedModule\n\n\n\n\n\nWvrListComponent\n\nWvrListComponent\n\nWvrSharedModule -->\n\nWvrListComponent->WvrSharedModule\n\n\n\n\n\nWvrListItemComponent\n\nWvrListItemComponent\n\nWvrSharedModule -->\n\nWvrListItemComponent->WvrSharedModule\n\n\n\n\n\nWvrManifestComponent\n\nWvrManifestComponent\n\nWvrSharedModule -->\n\nWvrManifestComponent->WvrSharedModule\n\n\n\n\n\nWvrManifestEntryComponent\n\nWvrManifestEntryComponent\n\nWvrSharedModule -->\n\nWvrManifestEntryComponent->WvrSharedModule\n\n\n\n\n\nWvrMessageManifestComponent\n\nWvrMessageManifestComponent\n\nWvrSharedModule -->\n\nWvrMessageManifestComponent->WvrSharedModule\n\n\n\n\n\nWvrMessageManifestEntryComponent\n\nWvrMessageManifestEntryComponent\n\nWvrSharedModule -->\n\nWvrMessageManifestEntryComponent->WvrSharedModule\n\n\n\n\n\nWvrModalComponent\n\nWvrModalComponent\n\nWvrSharedModule -->\n\nWvrModalComponent->WvrSharedModule\n\n\n\n\n\nWvrNavLiComponent\n\nWvrNavLiComponent\n\nWvrSharedModule -->\n\nWvrNavLiComponent->WvrSharedModule\n\n\n\n\n\nWvrNavListComponent\n\nWvrNavListComponent\n\nWvrSharedModule -->\n\nWvrNavListComponent->WvrSharedModule\n\n\n\n\n\nWvrTabsComponent\n\nWvrTabsComponent\n\nWvrSharedModule -->\n\nWvrTabsComponent->WvrSharedModule\n\n\n\n\n\nWvrTextComponent\n\nWvrTextComponent\n\nWvrSharedModule -->\n\nWvrTextComponent->WvrSharedModule\n\n\n\n\n\nWvrThemeComponent\n\nWvrThemeComponent\n\nWvrSharedModule -->\n\nWvrThemeComponent->WvrSharedModule\n\n\n\n\n\nWvrWysiwygComponent\n\nWvrWysiwygComponent\n\nWvrSharedModule -->\n\nWvrWysiwygComponent->WvrSharedModule\n\n\n\n\n\nDefaultPipe \n\nDefaultPipe \n\nDefaultPipe  -->\n\nWvrSharedModule->DefaultPipe \n\n\n\n\n\nSafePipe \n\nSafePipe \n\nSafePipe  -->\n\nWvrSharedModule->SafePipe \n\n\n\n\n\nWvrAlertComponent \n\nWvrAlertComponent \n\nWvrAlertComponent  -->\n\nWvrSharedModule->WvrAlertComponent \n\n\n\n\n\nWvrButtonComponent \n\nWvrButtonComponent \n\nWvrButtonComponent  -->\n\nWvrSharedModule->WvrButtonComponent \n\n\n\n\n\nWvrCardComponent \n\nWvrCardComponent \n\nWvrCardComponent  -->\n\nWvrSharedModule->WvrCardComponent \n\n\n\n\n\nWvrColorPreviewComponent \n\nWvrColorPreviewComponent \n\nWvrColorPreviewComponent  -->\n\nWvrSharedModule->WvrColorPreviewComponent \n\n\n\n\n\nWvrContentProjectionDirective \n\nWvrContentProjectionDirective \n\nWvrContentProjectionDirective  -->\n\nWvrSharedModule->WvrContentProjectionDirective \n\n\n\n\n\nWvrDropdownComponent \n\nWvrDropdownComponent \n\nWvrDropdownComponent  -->\n\nWvrSharedModule->WvrDropdownComponent \n\n\n\n\n\nWvrFooterComponent \n\nWvrFooterComponent \n\nWvrFooterComponent  -->\n\nWvrSharedModule->WvrFooterComponent \n\n\n\n\n\nWvrHeaderComponent \n\nWvrHeaderComponent \n\nWvrHeaderComponent  -->\n\nWvrSharedModule->WvrHeaderComponent \n\n\n\n\n\nWvrIconComponent \n\nWvrIconComponent \n\nWvrIconComponent  -->\n\nWvrSharedModule->WvrIconComponent \n\n\n\n\n\nWvrItWorksComponent \n\nWvrItWorksComponent \n\nWvrItWorksComponent  -->\n\nWvrSharedModule->WvrItWorksComponent \n\n\n\n\n\nWvrListComponent \n\nWvrListComponent \n\nWvrListComponent  -->\n\nWvrSharedModule->WvrListComponent \n\n\n\n\n\nWvrListItemComponent \n\nWvrListItemComponent \n\nWvrListItemComponent  -->\n\nWvrSharedModule->WvrListItemComponent \n\n\n\n\n\nWvrManifestComponent \n\nWvrManifestComponent \n\nWvrManifestComponent  -->\n\nWvrSharedModule->WvrManifestComponent \n\n\n\n\n\nWvrManifestEntryComponent \n\nWvrManifestEntryComponent \n\nWvrManifestEntryComponent  -->\n\nWvrSharedModule->WvrManifestEntryComponent \n\n\n\n\n\nWvrMessageManifestComponent \n\nWvrMessageManifestComponent \n\nWvrMessageManifestComponent  -->\n\nWvrSharedModule->WvrMessageManifestComponent \n\n\n\n\n\nWvrMessageManifestEntryComponent \n\nWvrMessageManifestEntryComponent \n\nWvrMessageManifestEntryComponent  -->\n\nWvrSharedModule->WvrMessageManifestEntryComponent \n\n\n\n\n\nWvrModalComponent \n\nWvrModalComponent \n\nWvrModalComponent  -->\n\nWvrSharedModule->WvrModalComponent \n\n\n\n\n\nWvrNavLiComponent \n\nWvrNavLiComponent \n\nWvrNavLiComponent  -->\n\nWvrSharedModule->WvrNavLiComponent \n\n\n\n\n\nWvrNavListComponent \n\nWvrNavListComponent \n\nWvrNavListComponent  -->\n\nWvrSharedModule->WvrNavListComponent \n\n\n\n\n\nWvrTabsComponent \n\nWvrTabsComponent \n\nWvrTabsComponent  -->\n\nWvrSharedModule->WvrTabsComponent \n\n\n\n\n\nWvrTextComponent \n\nWvrTextComponent \n\nWvrTextComponent  -->\n\nWvrSharedModule->WvrTextComponent \n\n\n\n\n\nWvrThemeComponent \n\nWvrThemeComponent \n\nWvrThemeComponent  -->\n\nWvrSharedModule->WvrThemeComponent \n\n\n\n\n\nWvrWysiwygComponent \n\nWvrWysiwygComponent \n\nWvrWysiwygComponent  -->\n\nWvrSharedModule->WvrWysiwygComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    22 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    34 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.0.5-rc.2\n        \n            License : MIT\n        \n            Repository : git+https://github.com/TAMULib/weaver-components.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            failure   (projects/.../rest.actions.ts)\n                        \n                        \n                            map   (projects/.../manifest-entry.ts)\n                        \n                        \n                            map   (projects/.../message-client-options.ts)\n                        \n                        \n                            map   (projects/.../message-manifest-entry.ts)\n                        \n                        \n                            map   (projects/.../request.ts)\n                        \n                        \n                            MessageClientProtocol   (projects/.../message-client-protocol.ts)\n                        \n                        \n                            MessageMappingStrategy   (projects/.../message-mapping-strategy.ts)\n                        \n                        \n                            method   (projects/.../rest.actions.ts)\n                        \n                        \n                            RequestMethod   (projects/.../request-method.ts)\n                        \n                        \n                            success   (projects/.../rest.actions.ts)\n                        \n                        \n                            ThemeVariantName   (projects/.../theme-variant-name.ts)\n                        \n                        \n                            variantType   (projects/.../wvr-themeable.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/wvr-elements/src/lib/core/rest/rest.actions.ts\n    \n    \n        \n            \n                \n                    \n                    failure\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    method\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    success\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/wvr-elements/src/lib/core/manifest/manifest-entry.ts\n    \n    \n        \n            \n                \n                    \n                    map\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/wvr-elements/src/lib/core/message-manifest/message-client-options.ts\n    \n    \n        \n            \n                \n                    \n                    map\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/wvr-elements/src/lib/core/message-manifest/message-manifest-entry.ts\n    \n    \n        \n            \n                \n                    \n                    map\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/wvr-elements/src/lib/core/rest/request.ts\n    \n    \n        \n            \n                \n                    \n                    map\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/wvr-elements/src/lib/core/message-manifest/message-client-protocol.ts\n    \n    \n        \n            \n                \n                    \n                    MessageClientProtocol\n                \n            \n            \n                \n                        \"LONG_POLLING\" | \"WEB_SOCKET\" | \"SERVER_SIDE_EFFECT\"\n\n                \n            \n        \n    \n    projects/wvr-elements/src/lib/core/message-manifest/message-mapping-strategy.ts\n    \n    \n        \n            \n                \n                    \n                    MessageMappingStrategy\n                \n            \n            \n                \n                        \"WEAVER\" | \"JSONPARSE\" | \"NONE\"\n\n                \n            \n        \n    \n    projects/wvr-elements/src/lib/core/rest/request-method.ts\n    \n    \n        \n            \n                \n                    \n                    RequestMethod\n                \n            \n            \n                \n                        \"OPTIONS\" | \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\"\n\n                \n            \n        \n    \n    projects/wvr-elements/src/lib/shared/theme/theme-variant-name.ts\n    \n    \n        \n            \n                \n                    \n                    ThemeVariantName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/wvr-elements/src/lib/shared/wvr-themeable.component.ts\n    \n    \n        \n            \n                \n                    \n                    variantType\n                \n            \n            \n                \n                        \"alert\" | \"badge\" | \"border\" | \"button\" | \"list-group-item\" | \"table\" | \"default\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
